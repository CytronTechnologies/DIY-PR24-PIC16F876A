

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Jul 21 16:21:04 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "../../Source File/PR24.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "../../Source File/PR24.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_send_config
    47                           	FNCALL	_main,_lcd_clr
    48                           	FNCALL	_main,_lcd_goto
    49                           	FNCALL	_main,_send_string
    50                           	FNCALL	_main,_ai_read
    51                           	FNCALL	_main,___lmul
    52                           	FNCALL	_main,___lldiv
    53                           	FNCALL	_main,_send_dec
    54                           	FNCALL	_send_dec,___llmod
    55                           	FNCALL	_send_dec,___lldiv
    56                           	FNCALL	_send_dec,_send_char
    57                           	FNCALL	_send_string,_send_char
    58                           	FNCALL	_send_string,_delay
    59                           	FNCALL	_lcd_goto,_send_config
    60                           	FNCALL	_lcd_goto,_delay
    61                           	FNCALL	_lcd_clr,_send_config
    62                           	FNCALL	_lcd_clr,_delay
    63                           	FNCALL	_send_char,_delay
    64                           	FNCALL	_send_char,_e_pulse
    65                           	FNCALL	_send_config,_delay
    66                           	FNCALL	_send_config,_e_pulse
    67                           	FNCALL	_e_pulse,_delay
    68                           	FNCALL	_ai_read,_delay
    69                           	FNCALL	_ai_read,___wmul
    70                           	FNCALL	_ai_read,___awdiv
    71                           	FNROOT	_main
    72                           	FNCALL	_isr,i1_ai_read
    73                           	FNCALL	_isr,i1___lmul
    74                           	FNCALL	_isr,_motor_right
    75                           	FNCALL	_isr,_motor_left
    76                           	FNCALL	_isr,_motor_stop
    77                           	FNCALL	i1_ai_read,i1_delay
    78                           	FNCALL	i1_ai_read,i1___wmul
    79                           	FNCALL	i1_ai_read,i1___awdiv
    80                           	FNCALL	intlevel1,_isr
    81                           	global	intlevel1
    82                           	FNROOT	intlevel1
    83                           	global	isr@integral
    84                           	global	isr@pre_error
    85                           	global	_kd
    86                           	global	_ki
    87                           	global	_kp
    88                           	global	_ADCON0
    89                           psect	text581,local,class=CODE,delta=2
    90                           global __ptext581
    91  0000                     __ptext581:
    92  001F                     _ADCON0	set	31
    93                           	global	_ADRESH
    94  001E                     _ADRESH	set	30
    95                           	global	_CCP1CON
    96  0017                     _CCP1CON	set	23
    97                           	global	_CCPR1L
    98  0015                     _CCPR1L	set	21
    99                           	global	_PORTB
   100  0006                     _PORTB	set	6
   101                           	global	_PORTC
   102  0007                     _PORTC	set	7
   103                           	global	_T1CON
   104  0010                     _T1CON	set	16
   105                           	global	_T2CON
   106  0012                     _T2CON	set	18
   107                           	global	_TMR1H
   108  000F                     _TMR1H	set	15
   109                           	global	_TMR1L
   110  000E                     _TMR1L	set	14
   111                           	global	_CARRY
   112  0018                     _CARRY	set	24
   113                           	global	_GIE
   114  005F                     _GIE	set	95
   115                           	global	_GO
   116  00FA                     _GO	set	250
   117                           	global	_PEIE
   118  005E                     _PEIE	set	94
   119                           	global	_RB0
   120  0030                     _RB0	set	48
   121                           	global	_RB1
   122  0031                     _RB1	set	49
   123                           	global	_RB2
   124  0032                     _RB2	set	50
   125                           	global	_RB3
   126  0033                     _RB3	set	51
   127                           	global	_RB4
   128  0034                     _RB4	set	52
   129                           	global	_RB5
   130  0035                     _RB5	set	53
   131                           	global	_RB6
   132  0036                     _RB6	set	54
   133                           	global	_RB7
   134  0037                     _RB7	set	55
   135                           	global	_RC0
   136  0038                     _RC0	set	56
   137                           	global	_RC1
   138  0039                     _RC1	set	57
   139                           	global	_RC3
   140  003B                     _RC3	set	59
   141                           	global	_RC4
   142  003C                     _RC4	set	60
   143                           	global	_RC5
   144  003D                     _RC5	set	61
   145                           	global	_TMR1IF
   146  0060                     _TMR1IF	set	96
   147                           	global	_ADCON1
   148  009F                     _ADCON1	set	159
   149                           	global	_PR2
   150  0092                     _PR2	set	146
   151                           	global	_TRISA
   152  0085                     _TRISA	set	133
   153                           	global	_TRISB
   154  0086                     _TRISB	set	134
   155                           	global	_TRISC
   156  0087                     _TRISC	set	135
   157                           	global	_TMR1IE
   158  0460                     _TMR1IE	set	1120
   159                           	global	_EEADR
   160  010D                     _EEADR	set	269
   161                           	global	_EEDATA
   162  010C                     _EEDATA	set	268
   163                           	global	_EECON1
   164  018C                     _EECON1	set	396
   165                           	global	_EECON2
   166  018D                     _EECON2	set	397
   167                           	global	_RD
   168  0C60                     _RD	set	3168
   169                           	global	_WR
   170  0C61                     _WR	set	3169
   171                           	global	_WREN
   172  0C62                     _WREN	set	3170
   173                           psect	strings,class=STRING,delta=2
   174                           global __pstrings
   175  0800                     __pstrings:
   176                           ;	global	stringdir,stringtab,__stringbase
   177  0800                     stringtab:
   178                           ;	String table - string pointers are 1 byte each
   179  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   180  0800  3008               movlw high(stringdir)
   181  0801  008A               movwf pclath
   182  0802  0804               movf fsr,w
   183  0803  0A84               incf fsr
   184  0804  0782               	addwf pc
   185  0805                     __stringbase:
   186  0805  3400               	retlw	0
   187                           psect	strings
   188                           	
   189  0806                     STR_1:	
   190  0806  3441               	retlw	65	;'A'
   191  0807  344E               	retlw	78	;'N'
   192  0808  3447               	retlw	71	;'G'
   193  0809  344C               	retlw	76	;'L'
   194  080A  3445               	retlw	69	;'E'
   195  080B  343D               	retlw	61	;'='
   196  080C  3400               	retlw	0
   197                           psect	strings
   198                           	
   199  080D                     STR_4:	
   200  080D  3444               	retlw	68	;'D'
   201  080E  343D               	retlw	61	;'='
   202  080F  3400               	retlw	0
   203                           psect	strings
   204                           	
   205  0810                     STR_3:	
   206  0810  3449               	retlw	73	;'I'
   207  0811  343D               	retlw	61	;'='
   208  0812  3400               	retlw	0
   209                           psect	strings
   210                           	
   211  0813                     STR_2:	
   212  0813  3450               	retlw	80	;'P'
   213  0814  343D               	retlw	61	;'='
   214  0815  3400               	retlw	0
   215                           psect	strings
   216                           	file	"C:\DOCUME~1\Sales\LOCALS~1\Temp\si8."
   217                           	line	#
   218                           psect cinit,class=CODE,delta=2
   219                           global start_initialization
   220  07EF                     start_initialization:
   221                           
   222                           psect	bssBANK0,class=BANK0,space=1
   223                           global __pbssBANK0
   224  004F                     __pbssBANK0:
   225  004F                     isr@integral:
   226  004F                            ds      4
   227                           
   228  0053                     isr@pre_error:
   229  0053                            ds      4
   230                           
   231                           psect	bssBANK1,class=BANK1,space=1
   232                           global __pbssBANK1
   233  00D8                     __pbssBANK1:
   234  00D8                     _kd:
   235  00D8                            ds      1
   236                           
   237  00D9                     _ki:
   238  00D9                            ds      1
   239                           
   240  00DA                     _kp:
   241  00DA                            ds      1
   242                           
   243                           ; Clear objects allocated to BANK0
   244                           psect cinit,class=CODE,delta=2
   245  07EF  01CF               	clrf	((__pbssBANK0)+0)&07Fh
   246  07F0  01D0               	clrf	((__pbssBANK0)+1)&07Fh
   247  07F1  01D1               	clrf	((__pbssBANK0)+2)&07Fh
   248  07F2  01D2               	clrf	((__pbssBANK0)+3)&07Fh
   249  07F3  01D3               	clrf	((__pbssBANK0)+4)&07Fh
   250  07F4  01D4               	clrf	((__pbssBANK0)+5)&07Fh
   251  07F5  01D5               	clrf	((__pbssBANK0)+6)&07Fh
   252  07F6  01D6               	clrf	((__pbssBANK0)+7)&07Fh
   253                           ; Clear objects allocated to BANK1
   254                           psect cinit,class=CODE,delta=2
   255  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
   256  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
   257  07F9  01D8               	clrf	((__pbssBANK1)+0)&07Fh
   258  07FA  01D9               	clrf	((__pbssBANK1)+1)&07Fh
   259  07FB  01DA               	clrf	((__pbssBANK1)+2)&07Fh
   260                           psect cinit,class=CODE,delta=2
   261                           global end_of_initialization
   262                           
   263                           ;End of C runtime variable initialization code
   264                           
   265  07FC                     end_of_initialization:
   266  07FC  0183               clrf status
   267  07FD  120A  118A  2C82   ljmp _main	;jump to C main() function
   268                           psect	cstackBANK1,class=BANK1,space=1
   269                           global __pcstackBANK1
   270  00A0                     __pcstackBANK1:
   271                           	global	?_delay
   272  00A0                     ?_delay:	; 0 bytes @ 0x0
   273                           	global	?___wmul
   274  00A0                     ?___wmul:	; 2 bytes @ 0x0
   275                           	global	?___llmod
   276  00A0                     ?___llmod:	; 4 bytes @ 0x0
   277                           	global	___wmul@multiplier
   278  00A0                     ___wmul@multiplier:	; 2 bytes @ 0x0
   279                           	global	delay@data
   280  00A0                     delay@data:	; 4 bytes @ 0x0
   281                           	global	___llmod@divisor
   282  00A0                     ___llmod@divisor:	; 4 bytes @ 0x0
   283  00A0                     	ds	2
   284                           	global	___wmul@multiplicand
   285  00A2                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   286  00A2                     	ds	2
   287                           	global	??_delay
   288  00A4                     ??_delay:	; 0 bytes @ 0x4
   289                           	global	??___wmul
   290  00A4                     ??___wmul:	; 0 bytes @ 0x4
   291                           	global	___wmul@product
   292  00A4                     ___wmul@product:	; 2 bytes @ 0x4
   293                           	global	___llmod@dividend
   294  00A4                     ___llmod@dividend:	; 4 bytes @ 0x4
   295  00A4                     	ds	2
   296                           	global	?___awdiv
   297  00A6                     ?___awdiv:	; 2 bytes @ 0x6
   298                           	global	___awdiv@divisor
   299  00A6                     ___awdiv@divisor:	; 2 bytes @ 0x6
   300  00A6                     	ds	2
   301                           	global	??_send_config
   302  00A8                     ??_send_config:	; 0 bytes @ 0x8
   303                           	global	??_e_pulse
   304  00A8                     ??_e_pulse:	; 0 bytes @ 0x8
   305                           	global	??_send_char
   306  00A8                     ??_send_char:	; 0 bytes @ 0x8
   307                           	global	??___llmod
   308  00A8                     ??___llmod:	; 0 bytes @ 0x8
   309                           	global	___awdiv@dividend
   310  00A8                     ___awdiv@dividend:	; 2 bytes @ 0x8
   311  00A8                     	ds	1
   312                           	global	___llmod@counter
   313  00A9                     ___llmod@counter:	; 1 bytes @ 0x9
   314  00A9                     	ds	1
   315                           	global	??___awdiv
   316  00AA                     ??___awdiv:	; 0 bytes @ 0xA
   317                           	global	send_config@data
   318  00AA                     send_config@data:	; 1 bytes @ 0xA
   319                           	global	send_char@data
   320  00AA                     send_char@data:	; 1 bytes @ 0xA
   321  00AA                     	ds	1
   322                           	global	send_config@i
   323  00AB                     send_config@i:	; 1 bytes @ 0xB
   324                           	global	send_char@i
   325  00AB                     send_char@i:	; 1 bytes @ 0xB
   326                           	global	___awdiv@counter
   327  00AB                     ___awdiv@counter:	; 1 bytes @ 0xB
   328  00AB                     	ds	1
   329                           	global	send_config@test
   330  00AC                     send_config@test:	; 1 bytes @ 0xC
   331                           	global	send_char@test
   332  00AC                     send_char@test:	; 1 bytes @ 0xC
   333                           	global	___awdiv@sign
   334  00AC                     ___awdiv@sign:	; 1 bytes @ 0xC
   335  00AC                     	ds	1
   336                           	global	??_lcd_clr
   337  00AD                     ??_lcd_clr:	; 0 bytes @ 0xD
   338                           	global	??_lcd_goto
   339  00AD                     ??_lcd_goto:	; 0 bytes @ 0xD
   340                           	global	??_send_string
   341  00AD                     ??_send_string:	; 0 bytes @ 0xD
   342                           	global	___awdiv@quotient
   343  00AD                     ___awdiv@quotient:	; 2 bytes @ 0xD
   344  00AD                     	ds	1
   345                           	global	lcd_goto@data
   346  00AE                     lcd_goto@data:	; 1 bytes @ 0xE
   347                           	global	send_string@i
   348  00AE                     send_string@i:	; 1 bytes @ 0xE
   349  00AE                     	ds	1
   350                           	global	?___lmul
   351  00AF                     ?___lmul:	; 4 bytes @ 0xF
   352                           	global	send_string@s
   353  00AF                     send_string@s:	; 1 bytes @ 0xF
   354                           	global	___lmul@multiplier
   355  00AF                     ___lmul@multiplier:	; 4 bytes @ 0xF
   356  00AF                     	ds	4
   357                           	global	___lmul@multiplicand
   358  00B3                     ___lmul@multiplicand:	; 4 bytes @ 0x13
   359  00B3                     	ds	4
   360                           	global	??___lmul
   361  00B7                     ??___lmul:	; 0 bytes @ 0x17
   362  00B7                     	ds	1
   363                           	global	___lmul@product
   364  00B8                     ___lmul@product:	; 4 bytes @ 0x18
   365  00B8                     	ds	4
   366                           	global	?___lldiv
   367  00BC                     ?___lldiv:	; 4 bytes @ 0x1C
   368                           	global	___lldiv@divisor
   369  00BC                     ___lldiv@divisor:	; 4 bytes @ 0x1C
   370  00BC                     	ds	4
   371                           	global	___lldiv@dividend
   372  00C0                     ___lldiv@dividend:	; 4 bytes @ 0x20
   373  00C0                     	ds	4
   374                           	global	??___lldiv
   375  00C4                     ??___lldiv:	; 0 bytes @ 0x24
   376  00C4                     	ds	1
   377                           	global	___lldiv@quotient
   378  00C5                     ___lldiv@quotient:	; 4 bytes @ 0x25
   379  00C5                     	ds	4
   380                           	global	___lldiv@counter
   381  00C9                     ___lldiv@counter:	; 1 bytes @ 0x29
   382  00C9                     	ds	1
   383                           	global	??_ai_read
   384  00CA                     ??_ai_read:	; 0 bytes @ 0x2A
   385                           	global	?_send_dec
   386  00CA                     ?_send_dec:	; 0 bytes @ 0x2A
   387                           	global	send_dec@data
   388  00CA                     send_dec@data:	; 4 bytes @ 0x2A
   389  00CA                     	ds	2
   390                           	global	ai_read@an_sel
   391  00CC                     ai_read@an_sel:	; 1 bytes @ 0x2C
   392  00CC                     	ds	2
   393                           	global	send_dec@num_dig
   394  00CE                     send_dec@num_dig:	; 1 bytes @ 0x2E
   395  00CE                     	ds	1
   396                           	global	??_send_dec
   397  00CF                     ??_send_dec:	; 0 bytes @ 0x2F
   398                           	global	??_main
   399  00CF                     ??_main:	; 0 bytes @ 0x2F
   400  00CF                     	ds	5
   401                           	global	main@rec_data
   402  00D4                     main@rec_data:	; 4 bytes @ 0x34
   403  00D4                     	ds	4
   404                           psect	cstackCOMMON,class=COMMON,space=1
   405                           global __pcstackCOMMON
   406  0070                     __pcstackCOMMON:
   407                           	global	?_send_config
   408  0070                     ?_send_config:	; 0 bytes @ 0x0
   409                           	global	?_lcd_clr
   410  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
   411                           	global	?_lcd_goto
   412  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   413                           	global	?_send_string
   414  0070                     ?_send_string:	; 0 bytes @ 0x0
   415                           	global	?_main
   416  0070                     ?_main:	; 0 bytes @ 0x0
   417                           	global	?_motor_right
   418  0070                     ?_motor_right:	; 0 bytes @ 0x0
   419                           	global	??_motor_right
   420  0070                     ??_motor_right:	; 0 bytes @ 0x0
   421                           	global	?_motor_left
   422  0070                     ?_motor_left:	; 0 bytes @ 0x0
   423                           	global	??_motor_left
   424  0070                     ??_motor_left:	; 0 bytes @ 0x0
   425                           	global	?_motor_stop
   426  0070                     ?_motor_stop:	; 0 bytes @ 0x0
   427                           	global	??_motor_stop
   428  0070                     ??_motor_stop:	; 0 bytes @ 0x0
   429                           	global	?_e_pulse
   430  0070                     ?_e_pulse:	; 0 bytes @ 0x0
   431                           	global	?_send_char
   432  0070                     ?_send_char:	; 0 bytes @ 0x0
   433                           	global	?_isr
   434  0070                     ?_isr:	; 0 bytes @ 0x0
   435                           	global	?i1_delay
   436  0070                     ?i1_delay:	; 0 bytes @ 0x0
   437                           	global	?_ai_read
   438  0070                     ?_ai_read:	; 1 bytes @ 0x0
   439                           	global	?i1_ai_read
   440  0070                     ?i1_ai_read:	; 1 bytes @ 0x0
   441                           	global	?i1___wmul
   442  0070                     ?i1___wmul:	; 2 bytes @ 0x0
   443                           	global	?i1___lmul
   444  0070                     ?i1___lmul:	; 4 bytes @ 0x0
   445                           	global	motor_right@speed
   446  0070                     motor_right@speed:	; 1 bytes @ 0x0
   447                           	global	motor_left@speed
   448  0070                     motor_left@speed:	; 1 bytes @ 0x0
   449                           	global	i1___wmul@multiplier
   450  0070                     i1___wmul@multiplier:	; 2 bytes @ 0x0
   451                           	global	i1delay@data
   452  0070                     i1delay@data:	; 4 bytes @ 0x0
   453                           	global	i1___lmul@multiplier
   454  0070                     i1___lmul@multiplier:	; 4 bytes @ 0x0
   455  0070                     	ds	2
   456                           	global	i1___wmul@multiplicand
   457  0072                     i1___wmul@multiplicand:	; 2 bytes @ 0x2
   458  0072                     	ds	2
   459                           	global	??i1_delay
   460  0074                     ??i1_delay:	; 0 bytes @ 0x4
   461                           	global	??i1___wmul
   462  0074                     ??i1___wmul:	; 0 bytes @ 0x4
   463                           	global	i1___wmul@product
   464  0074                     i1___wmul@product:	; 2 bytes @ 0x4
   465                           	global	i1___lmul@multiplicand
   466  0074                     i1___lmul@multiplicand:	; 4 bytes @ 0x4
   467  0074                     	ds	2
   468                           	global	?i1___awdiv
   469  0076                     ?i1___awdiv:	; 2 bytes @ 0x6
   470                           	global	i1___awdiv@divisor
   471  0076                     i1___awdiv@divisor:	; 2 bytes @ 0x6
   472  0076                     	ds	2
   473                           	global	??i1___lmul
   474  0078                     ??i1___lmul:	; 0 bytes @ 0x8
   475                           	global	i1___awdiv@dividend
   476  0078                     i1___awdiv@dividend:	; 2 bytes @ 0x8
   477  0078                     	ds	1
   478                           	global	i1___lmul@product
   479  0079                     i1___lmul@product:	; 4 bytes @ 0x9
   480  0079                     	ds	1
   481                           	global	??i1___awdiv
   482  007A                     ??i1___awdiv:	; 0 bytes @ 0xA
   483  007A                     	ds	1
   484                           	global	??i1_ai_read
   485  007B                     ??i1_ai_read:	; 0 bytes @ 0xB
   486  007B                     	ds	2
   487                           	global	i1ai_read@an_sel
   488  007D                     i1ai_read@an_sel:	; 1 bytes @ 0xD
   489  007D                     	ds	1
   490                           psect	cstackBANK0,class=BANK0,space=1
   491                           global __pcstackBANK0
   492  0020                     __pcstackBANK0:
   493                           	global	i1___awdiv@counter
   494  0020                     i1___awdiv@counter:	; 1 bytes @ 0x0
   495  0020                     	ds	1
   496                           	global	i1___awdiv@sign
   497  0021                     i1___awdiv@sign:	; 1 bytes @ 0x1
   498  0021                     	ds	1
   499                           	global	i1___awdiv@quotient
   500  0022                     i1___awdiv@quotient:	; 2 bytes @ 0x2
   501  0022                     	ds	2
   502                           	global	??_isr
   503  0024                     ??_isr:	; 0 bytes @ 0x4
   504  0024                     	ds	24
   505                           	global	isr@motor_direction
   506  003C                     isr@motor_direction:	; 2 bytes @ 0x1C
   507  003C                     	ds	2
   508                           	global	isr@pwm_value
   509  003E                     isr@pwm_value:	; 1 bytes @ 0x1E
   510  003E                     	ds	1
   511                           	global	isr@derivative
   512  003F                     isr@derivative:	; 4 bytes @ 0x1F
   513  003F                     	ds	4
   514                           	global	isr@set_value
   515  0043                     isr@set_value:	; 2 bytes @ 0x23
   516  0043                     	ds	2
   517                           	global	isr@feedback_value
   518  0045                     isr@feedback_value:	; 2 bytes @ 0x25
   519  0045                     	ds	2
   520                           	global	isr@error_value
   521  0047                     isr@error_value:	; 4 bytes @ 0x27
   522  0047                     	ds	4
   523                           	global	isr@output
   524  004B                     isr@output:	; 4 bytes @ 0x2B
   525  004B                     	ds	4
   526 ;;Data sizes: Strings 16, constant 0, data 0, bss 11, persistent 0 stack 0
   527 ;;Auto spaces:   Size  Autos    Used
   528 ;; COMMON          14     14      14
   529 ;; BANK0           80     47      55
   530 ;; BANK1           80     56      59
   531 ;; BANK3           96      0       0
   532 ;; BANK2           96      0       0
   533                           
   534 ;;
   535 ;; Pointer list with targets:
   536                           
   537 ;; ?i1___wmul	unsigned int  size(1) Largest target is 0
   538 ;;
   539 ;; ?i1___awdiv	int  size(1) Largest target is 0
   540 ;;
   541 ;; ?i1___lmul	unsigned long  size(1) Largest target is 0
   542 ;;
   543 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   544 ;;
   545 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   546 ;;
   547 ;; ?___awdiv	int  size(1) Largest target is 0
   548 ;;
   549 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   550 ;;
   551 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   552 ;;
   553 ;; send_string@s	PTR const unsigned char  size(1) Largest target is 7
   554 ;;		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[7]), 
   555 ;;
   556                           
   557                           
   558 ;;
   559 ;; Critical Paths under _main in COMMON
   560 ;;
   561 ;;   None.
   562 ;;
   563 ;; Critical Paths under _isr in COMMON
   564 ;;
   565 ;;   _isr->i1_ai_read
   566 ;;   i1_ai_read->i1___awdiv
   567 ;;   i1___awdiv->i1___wmul
   568 ;;
   569 ;; Critical Paths under _main in BANK0
   570 ;;
   571 ;;   None.
   572 ;;
   573 ;; Critical Paths under _isr in BANK0
   574 ;;
   575 ;;   i1_ai_read->i1___awdiv
   576 ;;
   577 ;; Critical Paths under _main in BANK1
   578 ;;
   579 ;;   _main->_send_dec
   580 ;;   _send_dec->___lldiv
   581 ;;   _send_string->_send_char
   582 ;;   _lcd_goto->_send_config
   583 ;;   _lcd_clr->_send_config
   584 ;;   _send_char->_delay
   585 ;;   _send_config->_delay
   586 ;;   _e_pulse->_delay
   587 ;;   _ai_read->___lldiv
   588 ;;   ___lldiv->___lmul
   589 ;;   ___awdiv->___wmul
   590 ;;   ___lmul->___awdiv
   591 ;;
   592 ;; Critical Paths under _isr in BANK1
   593 ;;
   594 ;;   None.
   595 ;;
   596 ;; Critical Paths under _main in BANK3
   597 ;;
   598 ;;   None.
   599 ;;
   600 ;; Critical Paths under _isr in BANK3
   601 ;;
   602 ;;   None.
   603 ;;
   604 ;; Critical Paths under _main in BANK2
   605 ;;
   606 ;;   None.
   607 ;;
   608 ;; Critical Paths under _isr in BANK2
   609 ;;
   610 ;;   None.
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   614 ;;
   615                           
   616 ;;
   617 ;;Call Graph Tables:
   618 ;;
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (0) _main                                                 9     9      0    4047
   623 ;;                                             47 BANK1      9     9      0
   624 ;;                        _send_config
   625 ;;                            _lcd_clr
   626 ;;                           _lcd_goto
   627 ;;                        _send_string
   628 ;;                            _ai_read
   629 ;;                             ___lmul
   630 ;;                            ___lldiv
   631 ;;                           _send_dec
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (1) _send_dec                                             5     0      5    1370
   634 ;;                                             42 BANK1      5     0      5
   635 ;;                            ___llmod
   636 ;;                            ___lldiv
   637 ;;                          _send_char
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (1) _send_string                                          3     3      0     492
   640 ;;                                             13 BANK1      3     3      0
   641 ;;                          _send_char
   642 ;;                              _delay
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (1) _lcd_goto                                             2     2      0     513
   645 ;;                                             13 BANK1      2     2      0
   646 ;;                        _send_config
   647 ;;                              _delay
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _lcd_clr                                              0     0      0     424
   650 ;;                        _send_config
   651 ;;                              _delay
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (2) _send_char                                            5     5      0     379
   654 ;;                                              8 BANK1      5     5      0
   655 ;;                              _delay
   656 ;;                            _e_pulse
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (2) _send_config                                          5     5      0     379
   659 ;;                                              8 BANK1      5     5      0
   660 ;;                              _delay
   661 ;;                            _e_pulse
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (3) _e_pulse                                              0     0      0      45
   664 ;;                              _delay
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (1) _ai_read                                              3     3      0     591
   667 ;;                                             42 BANK1      3     3      0
   668 ;;                              _delay
   669 ;;                             ___wmul
   670 ;;                            ___awdiv
   671 ;;                             ___lmul (ARG)
   672 ;;                            ___lldiv (ARG)
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (2) ___lldiv                                             14     6      8     162
   675 ;;                                             28 BANK1     14     6      8
   676 ;;                             ___lmul (ARG)
   677 ;;                              _delay (ARG)
   678 ;;                             ___wmul (ARG)
   679 ;;                            ___awdiv (ARG)
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (2) ___llmod                                             10     2      8     159
   682 ;;                                              0 BANK1     10     2      8
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) ___awdiv                                              9     5      4     300
   685 ;;                                              6 BANK1      9     5      4
   686 ;;                             ___wmul (ARG)
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (1) ___lmul                                              13     5      8      92
   689 ;;                                             15 BANK1     13     5      8
   690 ;;                              _delay (ARG)
   691 ;;                             ___wmul (ARG)
   692 ;;                            ___awdiv (ARG)
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (2) ___wmul                                               6     2      4      92
   695 ;;                                              0 BANK1      6     2      4
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (4) _delay                                                8     4      4      45
   698 ;;                                              0 BANK1      8     4      4
   699 ;; ---------------------------------------------------------------------------------
   700 ;; Estimated maximum stack depth 4
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (5) _isr                                                 43    43      0    2580
   705 ;;                                              4 BANK0     43    43      0
   706 ;;                          i1_ai_read
   707 ;;                           i1___lmul
   708 ;;                        _motor_right
   709 ;;                         _motor_left
   710 ;;                         _motor_stop
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (6) i1_ai_read                                            3     3      0    1936
   713 ;;                                             11 COMMON     3     3      0
   714 ;;                            i1_delay
   715 ;;                           i1___wmul
   716 ;;                          i1___awdiv
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (7) i1___awdiv                                            9     5      4     977
   719 ;;                                              6 COMMON     5     1      4
   720 ;;                                              0 BANK0      4     4      0
   721 ;;                           i1___wmul (ARG)
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (6) i1___lmul                                            13     5      8     300
   724 ;;                                              0 COMMON    13     5      8
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (7) i1___wmul                                             6     2      4     300
   727 ;;                                              0 COMMON     6     2      4
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (7) i1_delay                                              8     4      4     148
   730 ;;                                              0 COMMON     8     4      4
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (6) _motor_stop                                           0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (6) _motor_left                                           1     1      0      22
   735 ;;                                              0 COMMON     1     1      0
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (6) _motor_right                                          1     1      0      22
   738 ;;                                              0 COMMON     1     1      0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; Estimated maximum stack depth 7
   741 ;; ---------------------------------------------------------------------------------
   742                           
   743 ;; Call Graph Graphs:
   744                           
   745 ;; _main (ROOT)
   746 ;;   _send_config
   747 ;;     _delay
   748 ;;     _e_pulse
   749 ;;       _delay
   750 ;;   _lcd_clr
   751 ;;     _send_config
   752 ;;       _delay
   753 ;;       _e_pulse
   754 ;;         _delay
   755 ;;     _delay
   756 ;;   _lcd_goto
   757 ;;     _send_config
   758 ;;       _delay
   759 ;;       _e_pulse
   760 ;;         _delay
   761 ;;     _delay
   762 ;;   _send_string
   763 ;;     _send_char
   764 ;;       _delay
   765 ;;       _e_pulse
   766 ;;         _delay
   767 ;;     _delay
   768 ;;   _ai_read
   769 ;;     _delay
   770 ;;     ___wmul
   771 ;;     ___awdiv
   772 ;;       ___wmul (ARG)
   773 ;;     ___lmul (ARG)
   774 ;;       _delay (ARG)
   775 ;;       ___wmul (ARG)
   776 ;;       ___awdiv (ARG)
   777 ;;         ___wmul (ARG)
   778 ;;     ___lldiv (ARG)
   779 ;;       ___lmul (ARG)
   780 ;;         _delay (ARG)
   781 ;;         ___wmul (ARG)
   782 ;;         ___awdiv (ARG)
   783 ;;           ___wmul (ARG)
   784 ;;       _delay (ARG)
   785 ;;       ___wmul (ARG)
   786 ;;       ___awdiv (ARG)
   787 ;;         ___wmul (ARG)
   788 ;;   ___lmul
   789 ;;     _delay (ARG)
   790 ;;     ___wmul (ARG)
   791 ;;     ___awdiv (ARG)
   792 ;;       ___wmul (ARG)
   793 ;;   ___lldiv
   794 ;;     ___lmul (ARG)
   795 ;;       _delay (ARG)
   796 ;;       ___wmul (ARG)
   797 ;;       ___awdiv (ARG)
   798 ;;         ___wmul (ARG)
   799 ;;     _delay (ARG)
   800 ;;     ___wmul (ARG)
   801 ;;     ___awdiv (ARG)
   802 ;;       ___wmul (ARG)
   803 ;;   _send_dec
   804 ;;     ___llmod
   805 ;;     ___lldiv
   806 ;;       ___lmul (ARG)
   807 ;;         _delay (ARG)
   808 ;;         ___wmul (ARG)
   809 ;;         ___awdiv (ARG)
   810 ;;           ___wmul (ARG)
   811 ;;       _delay (ARG)
   812 ;;       ___wmul (ARG)
   813 ;;       ___awdiv (ARG)
   814 ;;         ___wmul (ARG)
   815 ;;     _send_char
   816 ;;       _delay
   817 ;;       _e_pulse
   818 ;;         _delay
   819 ;;
   820 ;; _isr (ROOT)
   821 ;;   i1_ai_read
   822 ;;     i1_delay
   823 ;;     i1___wmul
   824 ;;     i1___awdiv
   825 ;;       i1___wmul (ARG)
   826 ;;   i1___lmul
   827 ;;   _motor_right
   828 ;;   _motor_left
   829 ;;   _motor_stop
   830 ;;
   831                           
   832 ;; Address spaces:
   833                           
   834 ;;Name               Size   Autos  Total    Cost      Usage
   835 ;;BITCOMMON            E      0       0       0        0.0%
   836 ;;EEDATA             100      0       0       0        0.0%
   837 ;;NULL                 0      0       0       0        0.0%
   838 ;;CODE                 0      0       0       0        0.0%
   839 ;;COMMON               E      E       E       1      100.0%
   840 ;;BITSFR0              0      0       0       1        0.0%
   841 ;;SFR0                 0      0       0       1        0.0%
   842 ;;BITSFR1              0      0       0       2        0.0%
   843 ;;SFR1                 0      0       0       2        0.0%
   844 ;;STACK                0      0       A       2        0.0%
   845 ;;ABS                  0      0      80       3        0.0%
   846 ;;BITBANK0            50      0       0       4        0.0%
   847 ;;BITSFR3              0      0       0       4        0.0%
   848 ;;SFR3                 0      0       0       4        0.0%
   849 ;;BANK0               50     2F      37       5       68.8%
   850 ;;BITSFR2              0      0       0       5        0.0%
   851 ;;SFR2                 0      0       0       5        0.0%
   852 ;;BITBANK1            50      0       0       6        0.0%
   853 ;;BANK1               50     38      3B       7       73.8%
   854 ;;BITBANK3            60      0       0       8        0.0%
   855 ;;BANK3               60      0       0       9        0.0%
   856 ;;BITBANK2            60      0       0      10        0.0%
   857 ;;BANK2               60      0       0      11        0.0%
   858 ;;DATA                 0      0      8A      12        0.0%
   859                           
   860                           	global	_main
   861                           psect	maintext,global,class=CODE,delta=2
   862                           global __pmaintext
   863  0482                     __pmaintext:
   864                           
   865 ;; *************** function _main *****************
   866 ;; Defined at:
   867 ;;		line 83 in file "../../Source File/PR24.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  rec_data        4   52[BANK1 ] unsigned long 
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 17F/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       4       0       0
   883 ;;      Temps:          0       0       5       0       0
   884 ;;      Totals:         0       0       9       0       0
   885 ;;Total ram usage:        9 bytes
   886 ;; Hardware stack levels required when called:    7
   887 ;; This function calls:
   888 ;;		_send_config
   889 ;;		_lcd_clr
   890 ;;		_lcd_goto
   891 ;;		_send_string
   892 ;;		_ai_read
   893 ;;		___lmul
   894 ;;		___lldiv
   895 ;;		_send_dec
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           psect	maintext
   901                           	file	"../../Source File/PR24.c"
   902                           	line	83
   903                           	global	__size_of_main
   904  0171                     	__size_of_main	equ	__end_of_main-_main
   905                           	
   906  0482                     _main:	
   907                           	opt	stack 1
   908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   909                           	line	84
   910                           	
   911  0482                     l4210:	
   912                           ;PR24.c: 84: unsigned long rec_data=0;
   913  0482  3000               	movlw	0
   914  0483  1683               	bsf	status, 5	;RP0=1, select bank1
   915  0484  1303               	bcf	status, 6	;RP1=0, select bank1
   916  0485  00D7               	movwf	(main@rec_data+3)^080h
   917  0486  3000               	movlw	0
   918  0487  00D6               	movwf	(main@rec_data+2)^080h
   919  0488  3000               	movlw	0
   920  0489  00D5               	movwf	(main@rec_data+1)^080h
   921  048A  3000               	movlw	0
   922  048B  00D4               	movwf	(main@rec_data)^080h
   923                           
   924                           	line	87
   925                           ;PR24.c: 87: TRISB = 0b00000001;
   926  048C  3001               	movlw	(01h)
   927  048D  0086               	movwf	(134)^080h	;volatile
   928                           	line	88
   929                           	
   930  048E                     l4212:	
   931                           ;PR24.c: 88: TRISC = 0b00000000;
   932  048E  0187               	clrf	(135)^080h	;volatile
   933                           	line	89
   934                           	
   935  048F                     l4214:	
   936                           ;PR24.c: 89: TRISA = 0b11111111;
   937  048F  30FF               	movlw	(0FFh)
   938  0490  0085               	movwf	(133)^080h	;volatile
   939                           	line	92
   940                           ;PR24.c: 92: PORTB = 0;
   941  0491  1283               	bcf	status, 5	;RP0=0, select bank0
   942  0492  1303               	bcf	status, 6	;RP1=0, select bank0
   943  0493  0186               	clrf	(6)	;volatile
   944                           	line	93
   945                           ;PR24.c: 93: PORTC = 0;
   946  0494  0187               	clrf	(7)	;volatile
   947                           	line	96
   948                           	
   949  0495                     l4216:	
   950                           ;PR24.c: 96: CCP1CON = 0b00001100;
   951  0495  300C               	movlw	(0Ch)
   952  0496  0097               	movwf	(23)	;volatile
   953                           	line	97
   954                           	
   955  0497                     l4218:	
   956                           ;PR24.c: 97: T2CON = 0b00000101;
   957  0497  3005               	movlw	(05h)
   958  0498  0092               	movwf	(18)	;volatile
   959                           	line	98
   960                           	
   961  0499                     l4220:	
   962                           ;PR24.c: 98: PR2 = 0xFF;
   963  0499  30FF               	movlw	(0FFh)
   964  049A  1683               	bsf	status, 5	;RP0=1, select bank1
   965  049B  1303               	bcf	status, 6	;RP1=0, select bank1
   966  049C  0092               	movwf	(146)^080h	;volatile
   967                           	line	99
   968                           	
   969  049D                     l4222:	
   970                           ;PR24.c: 99: CCPR1L = 0;
   971  049D  1283               	bcf	status, 5	;RP0=0, select bank0
   972  049E  1303               	bcf	status, 6	;RP1=0, select bank0
   973  049F  0195               	clrf	(21)	;volatile
   974                           	line	102
   975                           ;PR24.c: 102: ADCON1 = 0b01000000;
   976  04A0  3040               	movlw	(040h)
   977  04A1  1683               	bsf	status, 5	;RP0=1, select bank1
   978  04A2  1303               	bcf	status, 6	;RP1=0, select bank1
   979  04A3  009F               	movwf	(159)^080h	;volatile
   980                           	line	103
   981                           ;PR24.c: 103: ADCON0 = 0b00000001;
   982  04A4  3001               	movlw	(01h)
   983  04A5  1283               	bcf	status, 5	;RP0=0, select bank0
   984  04A6  1303               	bcf	status, 6	;RP1=0, select bank0
   985  04A7  009F               	movwf	(31)	;volatile
   986                           	line	106
   987                           	
   988  04A8                     l4224:	
   989                           ;PR24.c: 106: send_config(0b00000001);
   990  04A8  3001               	movlw	(01h)
   991  04A9  120A  118A  26D5   	fcall	_send_config
              120A  118A         
   992                           	line	107
   993                           	
   994  04AE                     l4226:	
   995                           ;PR24.c: 107: send_config(0b00000010);
   996  04AE  3002               	movlw	(02h)
   997  04AF  120A  118A  26D5   	fcall	_send_config
              120A  118A         
   998                           	line	108
   999                           	
  1000  04B4                     l4228:	
  1001                           ;PR24.c: 108: send_config(0b00000110);
  1002  04B4  3006               	movlw	(06h)
  1003  04B5  120A  118A  26D5   	fcall	_send_config
              120A  118A         
  1004                           	line	109
  1005                           	
  1006  04BA                     l4230:	
  1007                           ;PR24.c: 109: send_config(0b00001100);
  1008  04BA  300C               	movlw	(0Ch)
  1009  04BB  120A  118A  26D5   	fcall	_send_config
              120A  118A         
  1010                           	line	110
  1011                           	
  1012  04C0                     l4232:	
  1013                           ;PR24.c: 110: send_config(0b00111000);
  1014  04C0  3038               	movlw	(038h)
  1015  04C1  120A  118A  26D5   	fcall	_send_config
              120A  118A         
  1016                           	line	112
  1017                           	
  1018  04C6                     l4234:	
  1019                           ;PR24.c: 112: lcd_clr();
  1020  04C6  120A  158A  236D   	fcall	_lcd_clr
              120A  118A         
  1021                           	line	113
  1022                           	
  1023  04CB                     l4236:	
  1024                           ;PR24.c: 113: lcd_goto(0);
  1025  04CB  3000               	movlw	(0)
  1026  04CC  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1027                           	line	114
  1028                           	
  1029  04D1                     l4238:	
  1030                           ;PR24.c: 114: send_string("ANGLE=");
  1031  04D1  3001               	movlw	((STR_1-__stringbase))&0ffh
  1032  04D2  120A  118A  27B7   	fcall	_send_string
              120A  118A         
  1033                           	line	115
  1034                           	
  1035  04D7                     l4240:	
  1036                           ;PR24.c: 115: lcd_goto(11);
  1037  04D7  300B               	movlw	(0Bh)
  1038  04D8  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1039                           	line	116
  1040                           	
  1041  04DD                     l4242:	
  1042                           ;PR24.c: 116: send_string("P=");
  1043  04DD  300E               	movlw	((STR_2-__stringbase))&0ffh
  1044  04DE  120A  118A  27B7   	fcall	_send_string
              120A  118A         
  1045                           	line	117
  1046                           	
  1047  04E3                     l4244:	
  1048                           ;PR24.c: 117: lcd_goto(20);
  1049  04E3  3014               	movlw	(014h)
  1050  04E4  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1051                           	line	118
  1052                           	
  1053  04E9                     l4246:	
  1054                           ;PR24.c: 118: send_string("I=");
  1055  04E9  300B               	movlw	((STR_3-__stringbase))&0ffh
  1056  04EA  120A  118A  27B7   	fcall	_send_string
              120A  118A         
  1057                           	line	119
  1058                           	
  1059  04EF                     l4248:	
  1060                           ;PR24.c: 119: lcd_goto(26);
  1061  04EF  301A               	movlw	(01Ah)
  1062  04F0  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1063                           	line	120
  1064                           	
  1065  04F5                     l4250:	
  1066                           ;PR24.c: 120: send_string("D=");
  1067  04F5  3008               	movlw	((STR_4-__stringbase))&0ffh
  1068  04F6  120A  118A  27B7   	fcall	_send_string
              120A  118A         
  1069  04FB  2CFC               	goto	l4252
  1070                           	line	123
  1071                           ;PR24.c: 123: while(1)
  1072                           	
  1073  04FC                     l633:	
  1074                           	line	125
  1075                           	
  1076  04FC                     l4252:	
  1077                           ;PR24.c: 124: {
  1078                           ;PR24.c: 125: rec_data = (unsigned long)ai_read(0) * 3600 / 255;
  1079  04FC  3000               	movlw	0
  1080  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  1081  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  1082  04FF  00BF               	movwf	(?___lldiv+3)^080h
  1083  0500  3000               	movlw	0
  1084  0501  00BE               	movwf	(?___lldiv+2)^080h
  1085  0502  3000               	movlw	0
  1086  0503  00BD               	movwf	(?___lldiv+1)^080h
  1087  0504  30FF               	movlw	0FFh
  1088  0505  00BC               	movwf	(?___lldiv)^080h
  1089                           
  1090  0506  3000               	movlw	(0)
  1091  0507  120A  158A  2763   	fcall	_ai_read
              120A  118A         
  1092  050C  1683               	bsf	status, 5	;RP0=1, select bank1
  1093  050D  1303               	bcf	status, 6	;RP1=0, select bank1
  1094  050E  00CF               	movwf	(??_main+0)^080h+0
  1095  050F  01D0               	clrf	((??_main+0)^080h+0+1)
  1096  0510  01D1               	clrf	((??_main+0)^080h+0+2)
  1097  0511  01D2               	clrf	((??_main+0)^080h+0+3)
  1098  0512  0852               	movf	3+(??_main+0)^080h+0,w
  1099  0513  00B2               	movwf	(?___lmul+3)^080h
  1100  0514  0851               	movf	2+(??_main+0)^080h+0,w
  1101  0515  00B1               	movwf	(?___lmul+2)^080h
  1102  0516  0850               	movf	1+(??_main+0)^080h+0,w
  1103  0517  00B0               	movwf	(?___lmul+1)^080h
  1104  0518  084F               	movf	0+(??_main+0)^080h+0,w
  1105  0519  00AF               	movwf	(?___lmul)^080h
  1106                           
  1107  051A  3000               	movlw	0
  1108  051B  00B6               	movwf	3+(?___lmul)^080h+04h
  1109  051C  3000               	movlw	0
  1110  051D  00B5               	movwf	2+(?___lmul)^080h+04h
  1111  051E  300E               	movlw	0Eh
  1112  051F  00B4               	movwf	1+(?___lmul)^080h+04h
  1113  0520  3010               	movlw	010h
  1114  0521  00B3               	movwf	0+(?___lmul)^080h+04h
  1115                           
  1116  0522  120A  158A  24DA   	fcall	___lmul
              120A  118A         
  1117  0527  1683               	bsf	status, 5	;RP0=1, select bank1
  1118  0528  1303               	bcf	status, 6	;RP1=0, select bank1
  1119  0529  0832               	movf	(3+(?___lmul))^080h,w
  1120  052A  00C3               	movwf	3+(?___lldiv)^080h+04h
  1121  052B  0831               	movf	(2+(?___lmul))^080h,w
  1122  052C  00C2               	movwf	2+(?___lldiv)^080h+04h
  1123  052D  0830               	movf	(1+(?___lmul))^080h,w
  1124  052E  00C1               	movwf	1+(?___lldiv)^080h+04h
  1125  052F  082F               	movf	(0+(?___lmul))^080h,w
  1126  0530  00C0               	movwf	0+(?___lldiv)^080h+04h
  1127                           
  1128  0531  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1129  0536  1683               	bsf	status, 5	;RP0=1, select bank1
  1130  0537  1303               	bcf	status, 6	;RP1=0, select bank1
  1131  0538  083F               	movf	(3+(?___lldiv))^080h,w
  1132  0539  00D7               	movwf	(main@rec_data+3)^080h
  1133  053A  083E               	movf	(2+(?___lldiv))^080h,w
  1134  053B  00D6               	movwf	(main@rec_data+2)^080h
  1135  053C  083D               	movf	(1+(?___lldiv))^080h,w
  1136  053D  00D5               	movwf	(main@rec_data+1)^080h
  1137  053E  083C               	movf	(0+(?___lldiv))^080h,w
  1138  053F  00D4               	movwf	(main@rec_data)^080h
  1139                           
  1140                           	line	126
  1141                           	
  1142  0540                     l4254:	
  1143                           ;PR24.c: 126: lcd_goto(6);
  1144  0540  3006               	movlw	(06h)
  1145  0541  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1146                           	line	127
  1147                           	
  1148  0546                     l4256:	
  1149                           ;PR24.c: 127: send_dec(rec_data, 4);
  1150  0546  1683               	bsf	status, 5	;RP0=1, select bank1
  1151  0547  1303               	bcf	status, 6	;RP1=0, select bank1
  1152  0548  0857               	movf	(main@rec_data+3)^080h,w
  1153  0549  00CD               	movwf	(?_send_dec+3)^080h
  1154  054A  0856               	movf	(main@rec_data+2)^080h,w
  1155  054B  00CC               	movwf	(?_send_dec+2)^080h
  1156  054C  0855               	movf	(main@rec_data+1)^080h,w
  1157  054D  00CB               	movwf	(?_send_dec+1)^080h
  1158  054E  0854               	movf	(main@rec_data)^080h,w
  1159  054F  00CA               	movwf	(?_send_dec)^080h
  1160                           
  1161  0550  3004               	movlw	(04h)
  1162  0551  00CF               	movwf	(??_main+0)^080h+0
  1163  0552  084F               	movf	(??_main+0)^080h+0,w
  1164  0553  00CE               	movwf	0+(?_send_dec)^080h+04h
  1165  0554  120A  118A  2015   	fcall	_send_dec
              120A  118A         
  1166                           	line	129
  1167                           	
  1168  0559                     l4258:	
  1169                           ;PR24.c: 129: kp = ai_read(2);
  1170  0559  3002               	movlw	(02h)
  1171  055A  120A  158A  2763   	fcall	_ai_read
              120A  118A         
  1172  055F  1683               	bsf	status, 5	;RP0=1, select bank1
  1173  0560  1303               	bcf	status, 6	;RP1=0, select bank1
  1174  0561  00CF               	movwf	(??_main+0)^080h+0
  1175  0562  084F               	movf	(??_main+0)^080h+0,w
  1176  0563  00DA               	movwf	(_kp)^080h
  1177                           	line	130
  1178                           	
  1179  0564                     l4260:	
  1180                           ;PR24.c: 130: lcd_goto(13);
  1181  0564  300D               	movlw	(0Dh)
  1182  0565  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1183                           	line	131
  1184                           	
  1185  056A                     l4262:	
  1186                           ;PR24.c: 131: send_dec(kp, 3);
  1187  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  1188  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  1189  056C  085A               	movf	(_kp)^080h,w
  1190  056D  00CF               	movwf	(??_main+0)^080h+0
  1191  056E  01D0               	clrf	((??_main+0)^080h+0+1)
  1192  056F  01D1               	clrf	((??_main+0)^080h+0+2)
  1193  0570  01D2               	clrf	((??_main+0)^080h+0+3)
  1194  0571  0852               	movf	3+(??_main+0)^080h+0,w
  1195  0572  00CD               	movwf	(?_send_dec+3)^080h
  1196  0573  0851               	movf	2+(??_main+0)^080h+0,w
  1197  0574  00CC               	movwf	(?_send_dec+2)^080h
  1198  0575  0850               	movf	1+(??_main+0)^080h+0,w
  1199  0576  00CB               	movwf	(?_send_dec+1)^080h
  1200  0577  084F               	movf	0+(??_main+0)^080h+0,w
  1201  0578  00CA               	movwf	(?_send_dec)^080h
  1202                           
  1203  0579  3003               	movlw	(03h)
  1204  057A  00D3               	movwf	(??_main+4)^080h+0
  1205  057B  0853               	movf	(??_main+4)^080h+0,w
  1206  057C  00CE               	movwf	0+(?_send_dec)^080h+04h
  1207  057D  120A  118A  2015   	fcall	_send_dec
              120A  118A         
  1208                           	line	133
  1209                           	
  1210  0582                     l4264:	
  1211                           ;PR24.c: 133: ki = ai_read(3);
  1212  0582  3003               	movlw	(03h)
  1213  0583  120A  158A  2763   	fcall	_ai_read
              120A  118A         
  1214  0588  1683               	bsf	status, 5	;RP0=1, select bank1
  1215  0589  1303               	bcf	status, 6	;RP1=0, select bank1
  1216  058A  00CF               	movwf	(??_main+0)^080h+0
  1217  058B  084F               	movf	(??_main+0)^080h+0,w
  1218  058C  00D9               	movwf	(_ki)^080h
  1219                           	line	134
  1220                           	
  1221  058D                     l4266:	
  1222                           ;PR24.c: 134: lcd_goto(22);
  1223  058D  3016               	movlw	(016h)
  1224  058E  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1225                           	line	135
  1226                           	
  1227  0593                     l4268:	
  1228                           ;PR24.c: 135: send_dec(ki, 3);
  1229  0593  1683               	bsf	status, 5	;RP0=1, select bank1
  1230  0594  1303               	bcf	status, 6	;RP1=0, select bank1
  1231  0595  0859               	movf	(_ki)^080h,w
  1232  0596  00CF               	movwf	(??_main+0)^080h+0
  1233  0597  01D0               	clrf	((??_main+0)^080h+0+1)
  1234  0598  01D1               	clrf	((??_main+0)^080h+0+2)
  1235  0599  01D2               	clrf	((??_main+0)^080h+0+3)
  1236  059A  0852               	movf	3+(??_main+0)^080h+0,w
  1237  059B  00CD               	movwf	(?_send_dec+3)^080h
  1238  059C  0851               	movf	2+(??_main+0)^080h+0,w
  1239  059D  00CC               	movwf	(?_send_dec+2)^080h
  1240  059E  0850               	movf	1+(??_main+0)^080h+0,w
  1241  059F  00CB               	movwf	(?_send_dec+1)^080h
  1242  05A0  084F               	movf	0+(??_main+0)^080h+0,w
  1243  05A1  00CA               	movwf	(?_send_dec)^080h
  1244                           
  1245  05A2  3003               	movlw	(03h)
  1246  05A3  00D3               	movwf	(??_main+4)^080h+0
  1247  05A4  0853               	movf	(??_main+4)^080h+0,w
  1248  05A5  00CE               	movwf	0+(?_send_dec)^080h+04h
  1249  05A6  120A  118A  2015   	fcall	_send_dec
              120A  118A         
  1250                           	line	137
  1251                           	
  1252  05AB                     l4270:	
  1253                           ;PR24.c: 137: kd = ai_read(4);
  1254  05AB  3004               	movlw	(04h)
  1255  05AC  120A  158A  2763   	fcall	_ai_read
              120A  118A         
  1256  05B1  1683               	bsf	status, 5	;RP0=1, select bank1
  1257  05B2  1303               	bcf	status, 6	;RP1=0, select bank1
  1258  05B3  00CF               	movwf	(??_main+0)^080h+0
  1259  05B4  084F               	movf	(??_main+0)^080h+0,w
  1260  05B5  00D8               	movwf	(_kd)^080h
  1261                           	line	138
  1262                           	
  1263  05B6                     l4272:	
  1264                           ;PR24.c: 138: lcd_goto(28);
  1265  05B6  301C               	movlw	(01Ch)
  1266  05B7  120A  158A  242E   	fcall	_lcd_goto
              120A  118A         
  1267                           	line	139
  1268                           	
  1269  05BC                     l4274:	
  1270                           ;PR24.c: 139: send_dec(kd, 3);
  1271  05BC  1683               	bsf	status, 5	;RP0=1, select bank1
  1272  05BD  1303               	bcf	status, 6	;RP1=0, select bank1
  1273  05BE  0858               	movf	(_kd)^080h,w
  1274  05BF  00CF               	movwf	(??_main+0)^080h+0
  1275  05C0  01D0               	clrf	((??_main+0)^080h+0+1)
  1276  05C1  01D1               	clrf	((??_main+0)^080h+0+2)
  1277  05C2  01D2               	clrf	((??_main+0)^080h+0+3)
  1278  05C3  0852               	movf	3+(??_main+0)^080h+0,w
  1279  05C4  00CD               	movwf	(?_send_dec+3)^080h
  1280  05C5  0851               	movf	2+(??_main+0)^080h+0,w
  1281  05C6  00CC               	movwf	(?_send_dec+2)^080h
  1282  05C7  0850               	movf	1+(??_main+0)^080h+0,w
  1283  05C8  00CB               	movwf	(?_send_dec+1)^080h
  1284  05C9  084F               	movf	0+(??_main+0)^080h+0,w
  1285  05CA  00CA               	movwf	(?_send_dec)^080h
  1286                           
  1287  05CB  3003               	movlw	(03h)
  1288  05CC  00D3               	movwf	(??_main+4)^080h+0
  1289  05CD  0853               	movf	(??_main+4)^080h+0,w
  1290  05CE  00CE               	movwf	0+(?_send_dec)^080h+04h
  1291  05CF  120A  118A  2015   	fcall	_send_dec
              120A  118A         
  1292                           	line	142
  1293                           	
  1294  05D4                     l4276:	
  1295                           ;PR24.c: 142: if(!RB0)
  1296  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1297  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1298  05D6  1806               	btfsc	(48/8),(48)&7
  1299  05D7  2DD9               	goto	u4541
  1300  05D8  2DDA               	goto	u4540
  1301  05D9                     u4541:
  1302  05D9  2CFC               	goto	l4252
  1303  05DA                     u4540:
  1304  05DA  2DDC               	goto	l635
  1305                           	line	144
  1306                           	
  1307  05DB                     l4278:	
  1308                           ;PR24.c: 143: {
  1309                           ;PR24.c: 144: while(!RB0);
  1310  05DB  2DDC               	goto	l635
  1311                           	
  1312  05DC                     l636:	
  1313                           	
  1314  05DC                     l635:	
  1315  05DC  1C06               	btfss	(48/8),(48)&7
  1316  05DD  2DDF               	goto	u4551
  1317  05DE  2DE0               	goto	u4550
  1318  05DF                     u4551:
  1319  05DF  2DDC               	goto	l635
  1320  05E0                     u4550:
  1321  05E0  2DE1               	goto	l4280
  1322                           	
  1323  05E1                     l637:	
  1324                           	line	147
  1325                           	
  1326  05E1                     l4280:	
  1327                           ;PR24.c: 147: TMR1H = 0;
  1328  05E1  018F               	clrf	(15)	;volatile
  1329                           	line	148
  1330                           ;PR24.c: 148: TMR1L = 0;
  1331  05E2  018E               	clrf	(14)	;volatile
  1332                           	line	149
  1333                           	
  1334  05E3                     l4282:	
  1335                           ;PR24.c: 149: T1CON = 0b00110001;
  1336  05E3  3031               	movlw	(031h)
  1337  05E4  0090               	movwf	(16)	;volatile
  1338                           	line	152
  1339                           	
  1340  05E5                     l4284:	
  1341                           ;PR24.c: 152: TMR1IF=0;
  1342  05E5  100C               	bcf	(96/8),(96)&7
  1343                           	line	153
  1344                           	
  1345  05E6                     l4286:	
  1346                           ;PR24.c: 153: TMR1IE=1;
  1347  05E6  1683               	bsf	status, 5	;RP0=1, select bank1
  1348  05E7  1303               	bcf	status, 6	;RP1=0, select bank1
  1349  05E8  140C               	bsf	(1120/8)^080h,(1120)&7
  1350                           	line	154
  1351                           	
  1352  05E9                     l4288:	
  1353                           ;PR24.c: 154: PEIE=1;
  1354  05E9  170B               	bsf	(94/8),(94)&7
  1355                           	line	155
  1356                           	
  1357  05EA                     l4290:	
  1358                           ;PR24.c: 155: GIE=1;
  1359  05EA  178B               	bsf	(95/8),(95)&7
  1360  05EB  2DEC               	goto	l639
  1361                           	line	157
  1362                           ;PR24.c: 157: while(1);
  1363                           	
  1364  05EC                     l638:	
  1365                           	
  1366  05EC                     l639:	
  1367  05EC  2DEC               	goto	l639
  1368                           	
  1369  05ED                     l640:	
  1370  05ED  2CFC               	goto	l4252
  1371                           	line	158
  1372                           	
  1373  05EE                     l634:	
  1374  05EE  2CFC               	goto	l4252
  1375                           	line	159
  1376                           	
  1377  05EF                     l641:	
  1378                           	line	123
  1379  05EF  2CFC               	goto	l4252
  1380                           	
  1381  05F0                     l642:	
  1382                           	line	160
  1383                           	
  1384  05F0                     l643:	
  1385                           	global	start
  1386  05F0  120A  118A  2812   	ljmp	start
  1387                           	opt stack 0
  1388                           GLOBAL	__end_of_main
  1389  05F3                     	__end_of_main:
  1390 ;; =============== function _main ends ============
  1391                           
  1392                           	signat	_main,88
  1393                           	global	_send_dec
  1394                           psect	text582,local,class=CODE,delta=2
  1395                           global __ptext582
  1396  0015                     __ptext582:
  1397                           
  1398 ;; *************** function _send_dec *****************
  1399 ;; Defined at:
  1400 ;;		line 353 in file "../../Source File/PR24.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  data            4   42[BANK1 ] unsigned long 
  1403 ;;  num_dig         1   46[BANK1 ] unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       5       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         0       0       5       0       0
  1419 ;;Total ram usage:        5 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    6
  1422 ;; This function calls:
  1423 ;;		___llmod
  1424 ;;		___lldiv
  1425 ;;		_send_char
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           psect	text582
  1431                           	file	"../../Source File/PR24.c"
  1432                           	line	353
  1433                           	global	__size_of_send_dec
  1434  02A4                     	__size_of_send_dec	equ	__end_of_send_dec-_send_dec
  1435                           	
  1436  0015                     _send_dec:	
  1437                           	opt	stack 1
  1438                           ; Regs used in _send_dec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1439                           	line	354
  1440                           	
  1441  0015                     l4150:	
  1442                           ;PR24.c: 354: if(num_dig >= 10)
  1443  0015  300A               	movlw	(0Ah)
  1444  0016  1683               	bsf	status, 5	;RP0=1, select bank1
  1445  0017  1303               	bcf	status, 6	;RP1=0, select bank1
  1446  0018  024E               	subwf	(send_dec@num_dig)^080h,w
  1447  0019  1C03               	skipc
  1448  001A  281C               	goto	u4441
  1449  001B  281D               	goto	u4440
  1450  001C                     u4441:
  1451  001C  285B               	goto	l4156
  1452  001D                     u4440:
  1453                           	line	356
  1454                           	
  1455  001D                     l4152:	
  1456                           ;PR24.c: 355: {
  1457                           ;PR24.c: 356: data = data % 10000000000;
  1458  001D  3054               	movlw	054h
  1459  001E  00A3               	movwf	(?___llmod+3)^080h
  1460  001F  300B               	movlw	0Bh
  1461  0020  00A2               	movwf	(?___llmod+2)^080h
  1462  0021  30E4               	movlw	0E4h
  1463  0022  00A1               	movwf	(?___llmod+1)^080h
  1464  0023  3000               	movlw	0
  1465  0024  00A0               	movwf	(?___llmod)^080h
  1466                           
  1467  0025  084D               	movf	(send_dec@data+3)^080h,w
  1468  0026  00A7               	movwf	3+(?___llmod)^080h+04h
  1469  0027  084C               	movf	(send_dec@data+2)^080h,w
  1470  0028  00A6               	movwf	2+(?___llmod)^080h+04h
  1471  0029  084B               	movf	(send_dec@data+1)^080h,w
  1472  002A  00A5               	movwf	1+(?___llmod)^080h+04h
  1473  002B  084A               	movf	(send_dec@data)^080h,w
  1474  002C  00A4               	movwf	0+(?___llmod)^080h+04h
  1475                           
  1476  002D  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1477  0032  1683               	bsf	status, 5	;RP0=1, select bank1
  1478  0033  1303               	bcf	status, 6	;RP1=0, select bank1
  1479  0034  0823               	movf	(3+(?___llmod))^080h,w
  1480  0035  00CD               	movwf	(send_dec@data+3)^080h
  1481  0036  0822               	movf	(2+(?___llmod))^080h,w
  1482  0037  00CC               	movwf	(send_dec@data+2)^080h
  1483  0038  0821               	movf	(1+(?___llmod))^080h,w
  1484  0039  00CB               	movwf	(send_dec@data+1)^080h
  1485  003A  0820               	movf	(0+(?___llmod))^080h,w
  1486  003B  00CA               	movwf	(send_dec@data)^080h
  1487                           
  1488                           	line	357
  1489                           	
  1490  003C                     l4154:	
  1491                           ;PR24.c: 357: send_char(data / 1000000000 + 0x30);
  1492  003C  303B               	movlw	03Bh
  1493  003D  00BF               	movwf	(?___lldiv+3)^080h
  1494  003E  309A               	movlw	09Ah
  1495  003F  00BE               	movwf	(?___lldiv+2)^080h
  1496  0040  30CA               	movlw	0CAh
  1497  0041  00BD               	movwf	(?___lldiv+1)^080h
  1498  0042  3000               	movlw	0
  1499  0043  00BC               	movwf	(?___lldiv)^080h
  1500                           
  1501  0044  084D               	movf	(send_dec@data+3)^080h,w
  1502  0045  00C3               	movwf	3+(?___lldiv)^080h+04h
  1503  0046  084C               	movf	(send_dec@data+2)^080h,w
  1504  0047  00C2               	movwf	2+(?___lldiv)^080h+04h
  1505  0048  084B               	movf	(send_dec@data+1)^080h,w
  1506  0049  00C1               	movwf	1+(?___lldiv)^080h+04h
  1507  004A  084A               	movf	(send_dec@data)^080h,w
  1508  004B  00C0               	movwf	0+(?___lldiv)^080h+04h
  1509                           
  1510  004C  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1511  0051  1683               	bsf	status, 5	;RP0=1, select bank1
  1512  0052  1303               	bcf	status, 6	;RP1=0, select bank1
  1513  0053  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1514  0054  3E30               	addlw	030h
  1515  0055  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1516  005A  285B               	goto	l4156
  1517                           	line	358
  1518                           	
  1519  005B                     l760:	
  1520                           	line	359
  1521                           	
  1522  005B                     l4156:	
  1523                           ;PR24.c: 358: }
  1524                           ;PR24.c: 359: if(num_dig >= 9)
  1525  005B  3009               	movlw	(09h)
  1526  005C  1683               	bsf	status, 5	;RP0=1, select bank1
  1527  005D  1303               	bcf	status, 6	;RP1=0, select bank1
  1528  005E  024E               	subwf	(send_dec@num_dig)^080h,w
  1529  005F  1C03               	skipc
  1530  0060  2862               	goto	u4451
  1531  0061  2863               	goto	u4450
  1532  0062                     u4451:
  1533  0062  28A1               	goto	l4162
  1534  0063                     u4450:
  1535                           	line	361
  1536                           	
  1537  0063                     l4158:	
  1538                           ;PR24.c: 360: {
  1539                           ;PR24.c: 361: data = data % 1000000000;
  1540  0063  303B               	movlw	03Bh
  1541  0064  00A3               	movwf	(?___llmod+3)^080h
  1542  0065  309A               	movlw	09Ah
  1543  0066  00A2               	movwf	(?___llmod+2)^080h
  1544  0067  30CA               	movlw	0CAh
  1545  0068  00A1               	movwf	(?___llmod+1)^080h
  1546  0069  3000               	movlw	0
  1547  006A  00A0               	movwf	(?___llmod)^080h
  1548                           
  1549  006B  084D               	movf	(send_dec@data+3)^080h,w
  1550  006C  00A7               	movwf	3+(?___llmod)^080h+04h
  1551  006D  084C               	movf	(send_dec@data+2)^080h,w
  1552  006E  00A6               	movwf	2+(?___llmod)^080h+04h
  1553  006F  084B               	movf	(send_dec@data+1)^080h,w
  1554  0070  00A5               	movwf	1+(?___llmod)^080h+04h
  1555  0071  084A               	movf	(send_dec@data)^080h,w
  1556  0072  00A4               	movwf	0+(?___llmod)^080h+04h
  1557                           
  1558  0073  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1559  0078  1683               	bsf	status, 5	;RP0=1, select bank1
  1560  0079  1303               	bcf	status, 6	;RP1=0, select bank1
  1561  007A  0823               	movf	(3+(?___llmod))^080h,w
  1562  007B  00CD               	movwf	(send_dec@data+3)^080h
  1563  007C  0822               	movf	(2+(?___llmod))^080h,w
  1564  007D  00CC               	movwf	(send_dec@data+2)^080h
  1565  007E  0821               	movf	(1+(?___llmod))^080h,w
  1566  007F  00CB               	movwf	(send_dec@data+1)^080h
  1567  0080  0820               	movf	(0+(?___llmod))^080h,w
  1568  0081  00CA               	movwf	(send_dec@data)^080h
  1569                           
  1570                           	line	362
  1571                           	
  1572  0082                     l4160:	
  1573                           ;PR24.c: 362: send_char(data / 100000000 + 0x30);
  1574  0082  3005               	movlw	05h
  1575  0083  00BF               	movwf	(?___lldiv+3)^080h
  1576  0084  30F5               	movlw	0F5h
  1577  0085  00BE               	movwf	(?___lldiv+2)^080h
  1578  0086  30E1               	movlw	0E1h
  1579  0087  00BD               	movwf	(?___lldiv+1)^080h
  1580  0088  3000               	movlw	0
  1581  0089  00BC               	movwf	(?___lldiv)^080h
  1582                           
  1583  008A  084D               	movf	(send_dec@data+3)^080h,w
  1584  008B  00C3               	movwf	3+(?___lldiv)^080h+04h
  1585  008C  084C               	movf	(send_dec@data+2)^080h,w
  1586  008D  00C2               	movwf	2+(?___lldiv)^080h+04h
  1587  008E  084B               	movf	(send_dec@data+1)^080h,w
  1588  008F  00C1               	movwf	1+(?___lldiv)^080h+04h
  1589  0090  084A               	movf	(send_dec@data)^080h,w
  1590  0091  00C0               	movwf	0+(?___lldiv)^080h+04h
  1591                           
  1592  0092  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1593  0097  1683               	bsf	status, 5	;RP0=1, select bank1
  1594  0098  1303               	bcf	status, 6	;RP1=0, select bank1
  1595  0099  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1596  009A  3E30               	addlw	030h
  1597  009B  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1598  00A0  28A1               	goto	l4162
  1599                           	line	363
  1600                           	
  1601  00A1                     l761:	
  1602                           	line	364
  1603                           	
  1604  00A1                     l4162:	
  1605                           ;PR24.c: 363: }
  1606                           ;PR24.c: 364: if(num_dig >= 8)
  1607  00A1  3008               	movlw	(08h)
  1608  00A2  1683               	bsf	status, 5	;RP0=1, select bank1
  1609  00A3  1303               	bcf	status, 6	;RP1=0, select bank1
  1610  00A4  024E               	subwf	(send_dec@num_dig)^080h,w
  1611  00A5  1C03               	skipc
  1612  00A6  28A8               	goto	u4461
  1613  00A7  28A9               	goto	u4460
  1614  00A8                     u4461:
  1615  00A8  28E7               	goto	l4168
  1616  00A9                     u4460:
  1617                           	line	366
  1618                           	
  1619  00A9                     l4164:	
  1620                           ;PR24.c: 365: {
  1621                           ;PR24.c: 366: data = data % 100000000;
  1622  00A9  3005               	movlw	05h
  1623  00AA  00A3               	movwf	(?___llmod+3)^080h
  1624  00AB  30F5               	movlw	0F5h
  1625  00AC  00A2               	movwf	(?___llmod+2)^080h
  1626  00AD  30E1               	movlw	0E1h
  1627  00AE  00A1               	movwf	(?___llmod+1)^080h
  1628  00AF  3000               	movlw	0
  1629  00B0  00A0               	movwf	(?___llmod)^080h
  1630                           
  1631  00B1  084D               	movf	(send_dec@data+3)^080h,w
  1632  00B2  00A7               	movwf	3+(?___llmod)^080h+04h
  1633  00B3  084C               	movf	(send_dec@data+2)^080h,w
  1634  00B4  00A6               	movwf	2+(?___llmod)^080h+04h
  1635  00B5  084B               	movf	(send_dec@data+1)^080h,w
  1636  00B6  00A5               	movwf	1+(?___llmod)^080h+04h
  1637  00B7  084A               	movf	(send_dec@data)^080h,w
  1638  00B8  00A4               	movwf	0+(?___llmod)^080h+04h
  1639                           
  1640  00B9  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1641  00BE  1683               	bsf	status, 5	;RP0=1, select bank1
  1642  00BF  1303               	bcf	status, 6	;RP1=0, select bank1
  1643  00C0  0823               	movf	(3+(?___llmod))^080h,w
  1644  00C1  00CD               	movwf	(send_dec@data+3)^080h
  1645  00C2  0822               	movf	(2+(?___llmod))^080h,w
  1646  00C3  00CC               	movwf	(send_dec@data+2)^080h
  1647  00C4  0821               	movf	(1+(?___llmod))^080h,w
  1648  00C5  00CB               	movwf	(send_dec@data+1)^080h
  1649  00C6  0820               	movf	(0+(?___llmod))^080h,w
  1650  00C7  00CA               	movwf	(send_dec@data)^080h
  1651                           
  1652                           	line	367
  1653                           	
  1654  00C8                     l4166:	
  1655                           ;PR24.c: 367: send_char(data / 10000000 + 0x30);
  1656  00C8  3000               	movlw	0
  1657  00C9  00BF               	movwf	(?___lldiv+3)^080h
  1658  00CA  3098               	movlw	098h
  1659  00CB  00BE               	movwf	(?___lldiv+2)^080h
  1660  00CC  3096               	movlw	096h
  1661  00CD  00BD               	movwf	(?___lldiv+1)^080h
  1662  00CE  3080               	movlw	080h
  1663  00CF  00BC               	movwf	(?___lldiv)^080h
  1664                           
  1665  00D0  084D               	movf	(send_dec@data+3)^080h,w
  1666  00D1  00C3               	movwf	3+(?___lldiv)^080h+04h
  1667  00D2  084C               	movf	(send_dec@data+2)^080h,w
  1668  00D3  00C2               	movwf	2+(?___lldiv)^080h+04h
  1669  00D4  084B               	movf	(send_dec@data+1)^080h,w
  1670  00D5  00C1               	movwf	1+(?___lldiv)^080h+04h
  1671  00D6  084A               	movf	(send_dec@data)^080h,w
  1672  00D7  00C0               	movwf	0+(?___lldiv)^080h+04h
  1673                           
  1674  00D8  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1675  00DD  1683               	bsf	status, 5	;RP0=1, select bank1
  1676  00DE  1303               	bcf	status, 6	;RP1=0, select bank1
  1677  00DF  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1678  00E0  3E30               	addlw	030h
  1679  00E1  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1680  00E6  28E7               	goto	l4168
  1681                           	line	368
  1682                           	
  1683  00E7                     l762:	
  1684                           	line	369
  1685                           	
  1686  00E7                     l4168:	
  1687                           ;PR24.c: 368: }
  1688                           ;PR24.c: 369: if(num_dig >= 7)
  1689  00E7  3007               	movlw	(07h)
  1690  00E8  1683               	bsf	status, 5	;RP0=1, select bank1
  1691  00E9  1303               	bcf	status, 6	;RP1=0, select bank1
  1692  00EA  024E               	subwf	(send_dec@num_dig)^080h,w
  1693  00EB  1C03               	skipc
  1694  00EC  28EE               	goto	u4471
  1695  00ED  28EF               	goto	u4470
  1696  00EE                     u4471:
  1697  00EE  292D               	goto	l4174
  1698  00EF                     u4470:
  1699                           	line	371
  1700                           	
  1701  00EF                     l4170:	
  1702                           ;PR24.c: 370: {
  1703                           ;PR24.c: 371: data = data % 10000000;
  1704  00EF  3000               	movlw	0
  1705  00F0  00A3               	movwf	(?___llmod+3)^080h
  1706  00F1  3098               	movlw	098h
  1707  00F2  00A2               	movwf	(?___llmod+2)^080h
  1708  00F3  3096               	movlw	096h
  1709  00F4  00A1               	movwf	(?___llmod+1)^080h
  1710  00F5  3080               	movlw	080h
  1711  00F6  00A0               	movwf	(?___llmod)^080h
  1712                           
  1713  00F7  084D               	movf	(send_dec@data+3)^080h,w
  1714  00F8  00A7               	movwf	3+(?___llmod)^080h+04h
  1715  00F9  084C               	movf	(send_dec@data+2)^080h,w
  1716  00FA  00A6               	movwf	2+(?___llmod)^080h+04h
  1717  00FB  084B               	movf	(send_dec@data+1)^080h,w
  1718  00FC  00A5               	movwf	1+(?___llmod)^080h+04h
  1719  00FD  084A               	movf	(send_dec@data)^080h,w
  1720  00FE  00A4               	movwf	0+(?___llmod)^080h+04h
  1721                           
  1722  00FF  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1723  0104  1683               	bsf	status, 5	;RP0=1, select bank1
  1724  0105  1303               	bcf	status, 6	;RP1=0, select bank1
  1725  0106  0823               	movf	(3+(?___llmod))^080h,w
  1726  0107  00CD               	movwf	(send_dec@data+3)^080h
  1727  0108  0822               	movf	(2+(?___llmod))^080h,w
  1728  0109  00CC               	movwf	(send_dec@data+2)^080h
  1729  010A  0821               	movf	(1+(?___llmod))^080h,w
  1730  010B  00CB               	movwf	(send_dec@data+1)^080h
  1731  010C  0820               	movf	(0+(?___llmod))^080h,w
  1732  010D  00CA               	movwf	(send_dec@data)^080h
  1733                           
  1734                           	line	372
  1735                           	
  1736  010E                     l4172:	
  1737                           ;PR24.c: 372: send_char(data / 1000000 + 0x30);
  1738  010E  3000               	movlw	0
  1739  010F  00BF               	movwf	(?___lldiv+3)^080h
  1740  0110  300F               	movlw	0Fh
  1741  0111  00BE               	movwf	(?___lldiv+2)^080h
  1742  0112  3042               	movlw	042h
  1743  0113  00BD               	movwf	(?___lldiv+1)^080h
  1744  0114  3040               	movlw	040h
  1745  0115  00BC               	movwf	(?___lldiv)^080h
  1746                           
  1747  0116  084D               	movf	(send_dec@data+3)^080h,w
  1748  0117  00C3               	movwf	3+(?___lldiv)^080h+04h
  1749  0118  084C               	movf	(send_dec@data+2)^080h,w
  1750  0119  00C2               	movwf	2+(?___lldiv)^080h+04h
  1751  011A  084B               	movf	(send_dec@data+1)^080h,w
  1752  011B  00C1               	movwf	1+(?___lldiv)^080h+04h
  1753  011C  084A               	movf	(send_dec@data)^080h,w
  1754  011D  00C0               	movwf	0+(?___lldiv)^080h+04h
  1755                           
  1756  011E  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1757  0123  1683               	bsf	status, 5	;RP0=1, select bank1
  1758  0124  1303               	bcf	status, 6	;RP1=0, select bank1
  1759  0125  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1760  0126  3E30               	addlw	030h
  1761  0127  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1762  012C  292D               	goto	l4174
  1763                           	line	373
  1764                           	
  1765  012D                     l763:	
  1766                           	line	374
  1767                           	
  1768  012D                     l4174:	
  1769                           ;PR24.c: 373: }
  1770                           ;PR24.c: 374: if(num_dig >= 6)
  1771  012D  3006               	movlw	(06h)
  1772  012E  1683               	bsf	status, 5	;RP0=1, select bank1
  1773  012F  1303               	bcf	status, 6	;RP1=0, select bank1
  1774  0130  024E               	subwf	(send_dec@num_dig)^080h,w
  1775  0131  1C03               	skipc
  1776  0132  2934               	goto	u4481
  1777  0133  2935               	goto	u4480
  1778  0134                     u4481:
  1779  0134  2973               	goto	l4180
  1780  0135                     u4480:
  1781                           	line	376
  1782                           	
  1783  0135                     l4176:	
  1784                           ;PR24.c: 375: {
  1785                           ;PR24.c: 376: data = data % 1000000;
  1786  0135  3000               	movlw	0
  1787  0136  00A3               	movwf	(?___llmod+3)^080h
  1788  0137  300F               	movlw	0Fh
  1789  0138  00A2               	movwf	(?___llmod+2)^080h
  1790  0139  3042               	movlw	042h
  1791  013A  00A1               	movwf	(?___llmod+1)^080h
  1792  013B  3040               	movlw	040h
  1793  013C  00A0               	movwf	(?___llmod)^080h
  1794                           
  1795  013D  084D               	movf	(send_dec@data+3)^080h,w
  1796  013E  00A7               	movwf	3+(?___llmod)^080h+04h
  1797  013F  084C               	movf	(send_dec@data+2)^080h,w
  1798  0140  00A6               	movwf	2+(?___llmod)^080h+04h
  1799  0141  084B               	movf	(send_dec@data+1)^080h,w
  1800  0142  00A5               	movwf	1+(?___llmod)^080h+04h
  1801  0143  084A               	movf	(send_dec@data)^080h,w
  1802  0144  00A4               	movwf	0+(?___llmod)^080h+04h
  1803                           
  1804  0145  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1805  014A  1683               	bsf	status, 5	;RP0=1, select bank1
  1806  014B  1303               	bcf	status, 6	;RP1=0, select bank1
  1807  014C  0823               	movf	(3+(?___llmod))^080h,w
  1808  014D  00CD               	movwf	(send_dec@data+3)^080h
  1809  014E  0822               	movf	(2+(?___llmod))^080h,w
  1810  014F  00CC               	movwf	(send_dec@data+2)^080h
  1811  0150  0821               	movf	(1+(?___llmod))^080h,w
  1812  0151  00CB               	movwf	(send_dec@data+1)^080h
  1813  0152  0820               	movf	(0+(?___llmod))^080h,w
  1814  0153  00CA               	movwf	(send_dec@data)^080h
  1815                           
  1816                           	line	377
  1817                           	
  1818  0154                     l4178:	
  1819                           ;PR24.c: 377: send_char(data / 100000 + 0x30);
  1820  0154  3000               	movlw	0
  1821  0155  00BF               	movwf	(?___lldiv+3)^080h
  1822  0156  3001               	movlw	01h
  1823  0157  00BE               	movwf	(?___lldiv+2)^080h
  1824  0158  3086               	movlw	086h
  1825  0159  00BD               	movwf	(?___lldiv+1)^080h
  1826  015A  30A0               	movlw	0A0h
  1827  015B  00BC               	movwf	(?___lldiv)^080h
  1828                           
  1829  015C  084D               	movf	(send_dec@data+3)^080h,w
  1830  015D  00C3               	movwf	3+(?___lldiv)^080h+04h
  1831  015E  084C               	movf	(send_dec@data+2)^080h,w
  1832  015F  00C2               	movwf	2+(?___lldiv)^080h+04h
  1833  0160  084B               	movf	(send_dec@data+1)^080h,w
  1834  0161  00C1               	movwf	1+(?___lldiv)^080h+04h
  1835  0162  084A               	movf	(send_dec@data)^080h,w
  1836  0163  00C0               	movwf	0+(?___lldiv)^080h+04h
  1837                           
  1838  0164  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1839  0169  1683               	bsf	status, 5	;RP0=1, select bank1
  1840  016A  1303               	bcf	status, 6	;RP1=0, select bank1
  1841  016B  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1842  016C  3E30               	addlw	030h
  1843  016D  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1844  0172  2973               	goto	l4180
  1845                           	line	378
  1846                           	
  1847  0173                     l764:	
  1848                           	line	379
  1849                           	
  1850  0173                     l4180:	
  1851                           ;PR24.c: 378: }
  1852                           ;PR24.c: 379: if(num_dig >= 5)
  1853  0173  3005               	movlw	(05h)
  1854  0174  1683               	bsf	status, 5	;RP0=1, select bank1
  1855  0175  1303               	bcf	status, 6	;RP1=0, select bank1
  1856  0176  024E               	subwf	(send_dec@num_dig)^080h,w
  1857  0177  1C03               	skipc
  1858  0178  297A               	goto	u4491
  1859  0179  297B               	goto	u4490
  1860  017A                     u4491:
  1861  017A  29B9               	goto	l4186
  1862  017B                     u4490:
  1863                           	line	381
  1864                           	
  1865  017B                     l4182:	
  1866                           ;PR24.c: 380: {
  1867                           ;PR24.c: 381: data = data % 100000;
  1868  017B  3000               	movlw	0
  1869  017C  00A3               	movwf	(?___llmod+3)^080h
  1870  017D  3001               	movlw	01h
  1871  017E  00A2               	movwf	(?___llmod+2)^080h
  1872  017F  3086               	movlw	086h
  1873  0180  00A1               	movwf	(?___llmod+1)^080h
  1874  0181  30A0               	movlw	0A0h
  1875  0182  00A0               	movwf	(?___llmod)^080h
  1876                           
  1877  0183  084D               	movf	(send_dec@data+3)^080h,w
  1878  0184  00A7               	movwf	3+(?___llmod)^080h+04h
  1879  0185  084C               	movf	(send_dec@data+2)^080h,w
  1880  0186  00A6               	movwf	2+(?___llmod)^080h+04h
  1881  0187  084B               	movf	(send_dec@data+1)^080h,w
  1882  0188  00A5               	movwf	1+(?___llmod)^080h+04h
  1883  0189  084A               	movf	(send_dec@data)^080h,w
  1884  018A  00A4               	movwf	0+(?___llmod)^080h+04h
  1885                           
  1886  018B  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1887  0190  1683               	bsf	status, 5	;RP0=1, select bank1
  1888  0191  1303               	bcf	status, 6	;RP1=0, select bank1
  1889  0192  0823               	movf	(3+(?___llmod))^080h,w
  1890  0193  00CD               	movwf	(send_dec@data+3)^080h
  1891  0194  0822               	movf	(2+(?___llmod))^080h,w
  1892  0195  00CC               	movwf	(send_dec@data+2)^080h
  1893  0196  0821               	movf	(1+(?___llmod))^080h,w
  1894  0197  00CB               	movwf	(send_dec@data+1)^080h
  1895  0198  0820               	movf	(0+(?___llmod))^080h,w
  1896  0199  00CA               	movwf	(send_dec@data)^080h
  1897                           
  1898                           	line	382
  1899                           	
  1900  019A                     l4184:	
  1901                           ;PR24.c: 382: send_char(data / 10000 + 0x30);
  1902  019A  3000               	movlw	0
  1903  019B  00BF               	movwf	(?___lldiv+3)^080h
  1904  019C  3000               	movlw	0
  1905  019D  00BE               	movwf	(?___lldiv+2)^080h
  1906  019E  3027               	movlw	027h
  1907  019F  00BD               	movwf	(?___lldiv+1)^080h
  1908  01A0  3010               	movlw	010h
  1909  01A1  00BC               	movwf	(?___lldiv)^080h
  1910                           
  1911  01A2  084D               	movf	(send_dec@data+3)^080h,w
  1912  01A3  00C3               	movwf	3+(?___lldiv)^080h+04h
  1913  01A4  084C               	movf	(send_dec@data+2)^080h,w
  1914  01A5  00C2               	movwf	2+(?___lldiv)^080h+04h
  1915  01A6  084B               	movf	(send_dec@data+1)^080h,w
  1916  01A7  00C1               	movwf	1+(?___lldiv)^080h+04h
  1917  01A8  084A               	movf	(send_dec@data)^080h,w
  1918  01A9  00C0               	movwf	0+(?___lldiv)^080h+04h
  1919                           
  1920  01AA  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  1921  01AF  1683               	bsf	status, 5	;RP0=1, select bank1
  1922  01B0  1303               	bcf	status, 6	;RP1=0, select bank1
  1923  01B1  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  1924  01B2  3E30               	addlw	030h
  1925  01B3  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  1926  01B8  29B9               	goto	l4186
  1927                           	line	383
  1928                           	
  1929  01B9                     l765:	
  1930                           	line	384
  1931                           	
  1932  01B9                     l4186:	
  1933                           ;PR24.c: 383: }
  1934                           ;PR24.c: 384: if(num_dig >= 4)
  1935  01B9  3004               	movlw	(04h)
  1936  01BA  1683               	bsf	status, 5	;RP0=1, select bank1
  1937  01BB  1303               	bcf	status, 6	;RP1=0, select bank1
  1938  01BC  024E               	subwf	(send_dec@num_dig)^080h,w
  1939  01BD  1C03               	skipc
  1940  01BE  29C0               	goto	u4501
  1941  01BF  29C1               	goto	u4500
  1942  01C0                     u4501:
  1943  01C0  29FF               	goto	l4192
  1944  01C1                     u4500:
  1945                           	line	386
  1946                           	
  1947  01C1                     l4188:	
  1948                           ;PR24.c: 385: {
  1949                           ;PR24.c: 386: data = data % 10000;
  1950  01C1  3000               	movlw	0
  1951  01C2  00A3               	movwf	(?___llmod+3)^080h
  1952  01C3  3000               	movlw	0
  1953  01C4  00A2               	movwf	(?___llmod+2)^080h
  1954  01C5  3027               	movlw	027h
  1955  01C6  00A1               	movwf	(?___llmod+1)^080h
  1956  01C7  3010               	movlw	010h
  1957  01C8  00A0               	movwf	(?___llmod)^080h
  1958                           
  1959  01C9  084D               	movf	(send_dec@data+3)^080h,w
  1960  01CA  00A7               	movwf	3+(?___llmod)^080h+04h
  1961  01CB  084C               	movf	(send_dec@data+2)^080h,w
  1962  01CC  00A6               	movwf	2+(?___llmod)^080h+04h
  1963  01CD  084B               	movf	(send_dec@data+1)^080h,w
  1964  01CE  00A5               	movwf	1+(?___llmod)^080h+04h
  1965  01CF  084A               	movf	(send_dec@data)^080h,w
  1966  01D0  00A4               	movwf	0+(?___llmod)^080h+04h
  1967                           
  1968  01D1  120A  158A  2526   	fcall	___llmod
              120A  118A         
  1969  01D6  1683               	bsf	status, 5	;RP0=1, select bank1
  1970  01D7  1303               	bcf	status, 6	;RP1=0, select bank1
  1971  01D8  0823               	movf	(3+(?___llmod))^080h,w
  1972  01D9  00CD               	movwf	(send_dec@data+3)^080h
  1973  01DA  0822               	movf	(2+(?___llmod))^080h,w
  1974  01DB  00CC               	movwf	(send_dec@data+2)^080h
  1975  01DC  0821               	movf	(1+(?___llmod))^080h,w
  1976  01DD  00CB               	movwf	(send_dec@data+1)^080h
  1977  01DE  0820               	movf	(0+(?___llmod))^080h,w
  1978  01DF  00CA               	movwf	(send_dec@data)^080h
  1979                           
  1980                           	line	387
  1981                           	
  1982  01E0                     l4190:	
  1983                           ;PR24.c: 387: send_char(data / 1000 + 0x30);
  1984  01E0  3000               	movlw	0
  1985  01E1  00BF               	movwf	(?___lldiv+3)^080h
  1986  01E2  3000               	movlw	0
  1987  01E3  00BE               	movwf	(?___lldiv+2)^080h
  1988  01E4  3003               	movlw	03h
  1989  01E5  00BD               	movwf	(?___lldiv+1)^080h
  1990  01E6  30E8               	movlw	0E8h
  1991  01E7  00BC               	movwf	(?___lldiv)^080h
  1992                           
  1993  01E8  084D               	movf	(send_dec@data+3)^080h,w
  1994  01E9  00C3               	movwf	3+(?___lldiv)^080h+04h
  1995  01EA  084C               	movf	(send_dec@data+2)^080h,w
  1996  01EB  00C2               	movwf	2+(?___lldiv)^080h+04h
  1997  01EC  084B               	movf	(send_dec@data+1)^080h,w
  1998  01ED  00C1               	movwf	1+(?___lldiv)^080h+04h
  1999  01EE  084A               	movf	(send_dec@data)^080h,w
  2000  01EF  00C0               	movwf	0+(?___lldiv)^080h+04h
  2001                           
  2002  01F0  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  2003  01F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2004  01F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2005  01F7  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  2006  01F8  3E30               	addlw	030h
  2007  01F9  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  2008  01FE  29FF               	goto	l4192
  2009                           	line	388
  2010                           	
  2011  01FF                     l766:	
  2012                           	line	389
  2013                           	
  2014  01FF                     l4192:	
  2015                           ;PR24.c: 388: }
  2016                           ;PR24.c: 389: if(num_dig >= 3)
  2017  01FF  3003               	movlw	(03h)
  2018  0200  1683               	bsf	status, 5	;RP0=1, select bank1
  2019  0201  1303               	bcf	status, 6	;RP1=0, select bank1
  2020  0202  024E               	subwf	(send_dec@num_dig)^080h,w
  2021  0203  1C03               	skipc
  2022  0204  2A06               	goto	u4511
  2023  0205  2A07               	goto	u4510
  2024  0206                     u4511:
  2025  0206  2A45               	goto	l4198
  2026  0207                     u4510:
  2027                           	line	391
  2028                           	
  2029  0207                     l4194:	
  2030                           ;PR24.c: 390: {
  2031                           ;PR24.c: 391: data = data % 1000;
  2032  0207  3000               	movlw	0
  2033  0208  00A3               	movwf	(?___llmod+3)^080h
  2034  0209  3000               	movlw	0
  2035  020A  00A2               	movwf	(?___llmod+2)^080h
  2036  020B  3003               	movlw	03h
  2037  020C  00A1               	movwf	(?___llmod+1)^080h
  2038  020D  30E8               	movlw	0E8h
  2039  020E  00A0               	movwf	(?___llmod)^080h
  2040                           
  2041  020F  084D               	movf	(send_dec@data+3)^080h,w
  2042  0210  00A7               	movwf	3+(?___llmod)^080h+04h
  2043  0211  084C               	movf	(send_dec@data+2)^080h,w
  2044  0212  00A6               	movwf	2+(?___llmod)^080h+04h
  2045  0213  084B               	movf	(send_dec@data+1)^080h,w
  2046  0214  00A5               	movwf	1+(?___llmod)^080h+04h
  2047  0215  084A               	movf	(send_dec@data)^080h,w
  2048  0216  00A4               	movwf	0+(?___llmod)^080h+04h
  2049                           
  2050  0217  120A  158A  2526   	fcall	___llmod
              120A  118A         
  2051  021C  1683               	bsf	status, 5	;RP0=1, select bank1
  2052  021D  1303               	bcf	status, 6	;RP1=0, select bank1
  2053  021E  0823               	movf	(3+(?___llmod))^080h,w
  2054  021F  00CD               	movwf	(send_dec@data+3)^080h
  2055  0220  0822               	movf	(2+(?___llmod))^080h,w
  2056  0221  00CC               	movwf	(send_dec@data+2)^080h
  2057  0222  0821               	movf	(1+(?___llmod))^080h,w
  2058  0223  00CB               	movwf	(send_dec@data+1)^080h
  2059  0224  0820               	movf	(0+(?___llmod))^080h,w
  2060  0225  00CA               	movwf	(send_dec@data)^080h
  2061                           
  2062                           	line	392
  2063                           	
  2064  0226                     l4196:	
  2065                           ;PR24.c: 392: send_char(data / 100 + 0x30);
  2066  0226  3000               	movlw	0
  2067  0227  00BF               	movwf	(?___lldiv+3)^080h
  2068  0228  3000               	movlw	0
  2069  0229  00BE               	movwf	(?___lldiv+2)^080h
  2070  022A  3000               	movlw	0
  2071  022B  00BD               	movwf	(?___lldiv+1)^080h
  2072  022C  3064               	movlw	064h
  2073  022D  00BC               	movwf	(?___lldiv)^080h
  2074                           
  2075  022E  084D               	movf	(send_dec@data+3)^080h,w
  2076  022F  00C3               	movwf	3+(?___lldiv)^080h+04h
  2077  0230  084C               	movf	(send_dec@data+2)^080h,w
  2078  0231  00C2               	movwf	2+(?___lldiv)^080h+04h
  2079  0232  084B               	movf	(send_dec@data+1)^080h,w
  2080  0233  00C1               	movwf	1+(?___lldiv)^080h+04h
  2081  0234  084A               	movf	(send_dec@data)^080h,w
  2082  0235  00C0               	movwf	0+(?___lldiv)^080h+04h
  2083                           
  2084  0236  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  2085  023B  1683               	bsf	status, 5	;RP0=1, select bank1
  2086  023C  1303               	bcf	status, 6	;RP1=0, select bank1
  2087  023D  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  2088  023E  3E30               	addlw	030h
  2089  023F  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  2090  0244  2A45               	goto	l4198
  2091                           	line	393
  2092                           	
  2093  0245                     l767:	
  2094                           	line	394
  2095                           	
  2096  0245                     l4198:	
  2097                           ;PR24.c: 393: }
  2098                           ;PR24.c: 394: if(num_dig >= 2)
  2099  0245  3002               	movlw	(02h)
  2100  0246  1683               	bsf	status, 5	;RP0=1, select bank1
  2101  0247  1303               	bcf	status, 6	;RP1=0, select bank1
  2102  0248  024E               	subwf	(send_dec@num_dig)^080h,w
  2103  0249  1C03               	skipc
  2104  024A  2A4C               	goto	u4521
  2105  024B  2A4D               	goto	u4520
  2106  024C                     u4521:
  2107  024C  2A8B               	goto	l4204
  2108  024D                     u4520:
  2109                           	line	396
  2110                           	
  2111  024D                     l4200:	
  2112                           ;PR24.c: 395: {
  2113                           ;PR24.c: 396: data=data % 100;
  2114  024D  3000               	movlw	0
  2115  024E  00A3               	movwf	(?___llmod+3)^080h
  2116  024F  3000               	movlw	0
  2117  0250  00A2               	movwf	(?___llmod+2)^080h
  2118  0251  3000               	movlw	0
  2119  0252  00A1               	movwf	(?___llmod+1)^080h
  2120  0253  3064               	movlw	064h
  2121  0254  00A0               	movwf	(?___llmod)^080h
  2122                           
  2123  0255  084D               	movf	(send_dec@data+3)^080h,w
  2124  0256  00A7               	movwf	3+(?___llmod)^080h+04h
  2125  0257  084C               	movf	(send_dec@data+2)^080h,w
  2126  0258  00A6               	movwf	2+(?___llmod)^080h+04h
  2127  0259  084B               	movf	(send_dec@data+1)^080h,w
  2128  025A  00A5               	movwf	1+(?___llmod)^080h+04h
  2129  025B  084A               	movf	(send_dec@data)^080h,w
  2130  025C  00A4               	movwf	0+(?___llmod)^080h+04h
  2131                           
  2132  025D  120A  158A  2526   	fcall	___llmod
              120A  118A         
  2133  0262  1683               	bsf	status, 5	;RP0=1, select bank1
  2134  0263  1303               	bcf	status, 6	;RP1=0, select bank1
  2135  0264  0823               	movf	(3+(?___llmod))^080h,w
  2136  0265  00CD               	movwf	(send_dec@data+3)^080h
  2137  0266  0822               	movf	(2+(?___llmod))^080h,w
  2138  0267  00CC               	movwf	(send_dec@data+2)^080h
  2139  0268  0821               	movf	(1+(?___llmod))^080h,w
  2140  0269  00CB               	movwf	(send_dec@data+1)^080h
  2141  026A  0820               	movf	(0+(?___llmod))^080h,w
  2142  026B  00CA               	movwf	(send_dec@data)^080h
  2143                           
  2144                           	line	397
  2145                           	
  2146  026C                     l4202:	
  2147                           ;PR24.c: 397: send_char(data / 10 + 0x30);
  2148  026C  3000               	movlw	0
  2149  026D  00BF               	movwf	(?___lldiv+3)^080h
  2150  026E  3000               	movlw	0
  2151  026F  00BE               	movwf	(?___lldiv+2)^080h
  2152  0270  3000               	movlw	0
  2153  0271  00BD               	movwf	(?___lldiv+1)^080h
  2154  0272  300A               	movlw	0Ah
  2155  0273  00BC               	movwf	(?___lldiv)^080h
  2156                           
  2157  0274  084D               	movf	(send_dec@data+3)^080h,w
  2158  0275  00C3               	movwf	3+(?___lldiv)^080h+04h
  2159  0276  084C               	movf	(send_dec@data+2)^080h,w
  2160  0277  00C2               	movwf	2+(?___lldiv)^080h+04h
  2161  0278  084B               	movf	(send_dec@data+1)^080h,w
  2162  0279  00C1               	movwf	1+(?___lldiv)^080h+04h
  2163  027A  084A               	movf	(send_dec@data)^080h,w
  2164  027B  00C0               	movwf	0+(?___lldiv)^080h+04h
  2165                           
  2166  027C  120A  158A  2584   	fcall	___lldiv
              120A  118A         
  2167  0281  1683               	bsf	status, 5	;RP0=1, select bank1
  2168  0282  1303               	bcf	status, 6	;RP1=0, select bank1
  2169  0283  083C               	movf	0+(((0+(?___lldiv))^080h)),w
  2170  0284  3E30               	addlw	030h
  2171  0285  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  2172  028A  2A8B               	goto	l4204
  2173                           	line	398
  2174                           	
  2175  028B                     l768:	
  2176                           	line	399
  2177                           	
  2178  028B                     l4204:	
  2179                           ;PR24.c: 398: }
  2180                           ;PR24.c: 399: if(num_dig >= 1)
  2181  028B  1683               	bsf	status, 5	;RP0=1, select bank1
  2182  028C  1303               	bcf	status, 6	;RP1=0, select bank1
  2183  028D  084E               	movf	(send_dec@num_dig)^080h,w
  2184  028E  1D03               	skipz
  2185  028F  2A91               	goto	u4530
  2186  0290  2AB8               	goto	l770
  2187  0291                     u4530:
  2188                           	line	401
  2189                           	
  2190  0291                     l4206:	
  2191                           ;PR24.c: 400: {
  2192                           ;PR24.c: 401: data = data % 10;
  2193  0291  3000               	movlw	0
  2194  0292  00A3               	movwf	(?___llmod+3)^080h
  2195  0293  3000               	movlw	0
  2196  0294  00A2               	movwf	(?___llmod+2)^080h
  2197  0295  3000               	movlw	0
  2198  0296  00A1               	movwf	(?___llmod+1)^080h
  2199  0297  300A               	movlw	0Ah
  2200  0298  00A0               	movwf	(?___llmod)^080h
  2201                           
  2202  0299  084D               	movf	(send_dec@data+3)^080h,w
  2203  029A  00A7               	movwf	3+(?___llmod)^080h+04h
  2204  029B  084C               	movf	(send_dec@data+2)^080h,w
  2205  029C  00A6               	movwf	2+(?___llmod)^080h+04h
  2206  029D  084B               	movf	(send_dec@data+1)^080h,w
  2207  029E  00A5               	movwf	1+(?___llmod)^080h+04h
  2208  029F  084A               	movf	(send_dec@data)^080h,w
  2209  02A0  00A4               	movwf	0+(?___llmod)^080h+04h
  2210                           
  2211  02A1  120A  158A  2526   	fcall	___llmod
              120A  118A         
  2212  02A6  1683               	bsf	status, 5	;RP0=1, select bank1
  2213  02A7  1303               	bcf	status, 6	;RP1=0, select bank1
  2214  02A8  0823               	movf	(3+(?___llmod))^080h,w
  2215  02A9  00CD               	movwf	(send_dec@data+3)^080h
  2216  02AA  0822               	movf	(2+(?___llmod))^080h,w
  2217  02AB  00CC               	movwf	(send_dec@data+2)^080h
  2218  02AC  0821               	movf	(1+(?___llmod))^080h,w
  2219  02AD  00CB               	movwf	(send_dec@data+1)^080h
  2220  02AE  0820               	movf	(0+(?___llmod))^080h,w
  2221  02AF  00CA               	movwf	(send_dec@data)^080h
  2222                           
  2223                           	line	402
  2224                           	
  2225  02B0                     l4208:	
  2226                           ;PR24.c: 402: send_char(data + 0x30);
  2227  02B0  084A               	movf	(send_dec@data)^080h,w
  2228  02B1  3E30               	addlw	030h
  2229  02B2  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  2230  02B7  2AB8               	goto	l770
  2231                           	line	403
  2232                           	
  2233  02B8                     l769:	
  2234                           	line	404
  2235                           	
  2236  02B8                     l770:	
  2237  02B8  0008               	return
  2238                           	opt stack 0
  2239                           GLOBAL	__end_of_send_dec
  2240  02B9                     	__end_of_send_dec:
  2241 ;; =============== function _send_dec ends ============
  2242                           
  2243                           	signat	_send_dec,8312
  2244                           	global	_send_string
  2245                           psect	text583,local,class=CODE,delta=2
  2246                           global __ptext583
  2247  07B7                     __ptext583:
  2248                           
  2249 ;; *************** function _send_string *****************
  2250 ;; Defined at:
  2251 ;;		line 344 in file "../../Source File/PR24.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  s               1    wreg     PTR const unsigned char 
  2254 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(7), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  s               1   15[BANK1 ] PTR const unsigned char 
  2257 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(7), 
  2258 ;;  i               1   14[BANK1 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         0       0       2       0       0
  2270 ;;      Temps:          0       0       1       0       0
  2271 ;;      Totals:         0       0       3       0       0
  2272 ;;Total ram usage:        3 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    6
  2275 ;; This function calls:
  2276 ;;		_send_char
  2277 ;;		_delay
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           psect	text583
  2283                           	file	"../../Source File/PR24.c"
  2284                           	line	344
  2285                           	global	__size_of_send_string
  2286  0038                     	__size_of_send_string	equ	__end_of_send_string-_send_string
  2287                           	
  2288  07B7                     _send_string:	
  2289                           	opt	stack 1
  2290                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2291                           ;send_string@s stored from wreg
  2292  07B7  1683               	bsf	status, 5	;RP0=1, select bank1
  2293  07B8  1303               	bcf	status, 6	;RP1=0, select bank1
  2294  07B9  00AF               	movwf	(send_string@s)^080h
  2295                           	line	345
  2296                           	
  2297  07BA                     l4138:	
  2298                           ;PR24.c: 345: unsigned char i = 0;
  2299  07BA  01AE               	clrf	(send_string@i)^080h
  2300                           	line	346
  2301                           ;PR24.c: 346: while (s && *s) send_char (*s++);
  2302  07BB  2FCF               	goto	l4144
  2303                           	
  2304  07BC                     l753:	
  2305                           	
  2306  07BC                     l4140:	
  2307  07BC  082F               	movf	(send_string@s)^080h,w
  2308  07BD  0084               	movwf	fsr0
  2309  07BE  120A  158A  2000   	fcall	stringdir
              120A  118A         
  2310  07C3  120A  118A  25F3   	fcall	_send_char
              120A  118A         
  2311                           	
  2312  07C8                     l4142:	
  2313  07C8  3001               	movlw	(01h)
  2314  07C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2315  07CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2316  07CB  00AD               	movwf	(??_send_string+0)^080h+0
  2317  07CC  082D               	movf	(??_send_string+0)^080h+0,w
  2318  07CD  07AF               	addwf	(send_string@s)^080h,f
  2319  07CE  2FCF               	goto	l4144
  2320                           	
  2321  07CF                     l752:	
  2322                           	
  2323  07CF                     l4144:	
  2324  07CF  082F               	movf	(send_string@s)^080h,w
  2325  07D0  1D03               	skipz
  2326  07D1  2FD3               	goto	u4420
  2327  07D2  2FE1               	goto	l4148
  2328  07D3                     u4420:
  2329                           	
  2330  07D3                     l4146:	
  2331  07D3  082F               	movf	(send_string@s)^080h,w
  2332  07D4  0084               	movwf	fsr0
  2333  07D5  120A  158A  2000   	fcall	stringdir
              120A  118A         
  2334  07DA  3800               	iorlw	0
  2335  07DB  1D03               	skipz
  2336  07DC  2FDE               	goto	u4431
  2337  07DD  2FDF               	goto	u4430
  2338  07DE                     u4431:
  2339  07DE  2FBC               	goto	l4140
  2340  07DF                     u4430:
  2341  07DF  2FE1               	goto	l4148
  2342                           	
  2343  07E0                     l755:	
  2344  07E0  2FE1               	goto	l4148
  2345                           	
  2346  07E1                     l756:	
  2347                           	line	347
  2348                           	
  2349  07E1                     l4148:	
  2350                           ;PR24.c: 347: delay(300);
  2351  07E1  3000               	movlw	0
  2352  07E2  00A3               	movwf	(?_delay+3)^080h
  2353  07E3  3000               	movlw	0
  2354  07E4  00A2               	movwf	(?_delay+2)^080h
  2355  07E5  3001               	movlw	01h
  2356  07E6  00A1               	movwf	(?_delay+1)^080h
  2357  07E7  302C               	movlw	02Ch
  2358  07E8  00A0               	movwf	(?_delay)^080h
  2359                           
  2360  07E9  120A  158A  245E   	fcall	_delay
              120A  118A         
  2361                           	line	348
  2362                           	
  2363  07EE                     l757:	
  2364  07EE  0008               	return
  2365                           	opt stack 0
  2366                           GLOBAL	__end_of_send_string
  2367  07EF                     	__end_of_send_string:
  2368 ;; =============== function _send_string ends ============
  2369                           
  2370                           	signat	_send_string,4216
  2371                           	global	_lcd_goto
  2372                           psect	text584,local,class=CODE,delta=2
  2373                           global __ptext584
  2374  0C2E                     __ptext584:
  2375                           
  2376 ;; *************** function _lcd_goto *****************
  2377 ;; Defined at:
  2378 ;;		line 286 in file "../../Source File/PR24.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  data            1    wreg     unsigned char 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  data            1   14[BANK1 ] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       0       0       0       0
  2393 ;;      Locals:         0       0       1       0       0
  2394 ;;      Temps:          0       0       1       0       0
  2395 ;;      Totals:         0       0       2       0       0
  2396 ;;Total ram usage:        2 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    6
  2399 ;; This function calls:
  2400 ;;		_send_config
  2401 ;;		_delay
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           psect	text584
  2407                           	file	"../../Source File/PR24.c"
  2408                           	line	286
  2409                           	global	__size_of_lcd_goto
  2410  0030                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2411                           	
  2412  0C2E                     _lcd_goto:	
  2413                           	opt	stack 1
  2414                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2415                           ;lcd_goto@data stored from wreg
  2416  0C2E  1683               	bsf	status, 5	;RP0=1, select bank1
  2417  0C2F  1303               	bcf	status, 6	;RP1=0, select bank1
  2418  0C30  00AE               	movwf	(lcd_goto@data)^080h
  2419                           	line	287
  2420                           	
  2421  0C31                     l4128:	
  2422                           ;PR24.c: 287: if(data < 16)
  2423  0C31  3010               	movlw	(010h)
  2424  0C32  022E               	subwf	(lcd_goto@data)^080h,w
  2425  0C33  1803               	skipnc
  2426  0C34  2C36               	goto	u4411
  2427  0C35  2C37               	goto	u4410
  2428  0C36                     u4411:
  2429  0C36  2C3F               	goto	l4132
  2430  0C37                     u4410:
  2431                           	line	289
  2432                           	
  2433  0C37                     l4130:	
  2434                           ;PR24.c: 288: {
  2435                           ;PR24.c: 289: send_config(0x80 + data);
  2436  0C37  082E               	movf	(lcd_goto@data)^080h,w
  2437  0C38  3E80               	addlw	080h
  2438  0C39  120A  118A  26D5   	fcall	_send_config
              120A  158A         
  2439                           	line	290
  2440                           ;PR24.c: 290: }
  2441  0C3E  2C4E               	goto	l4136
  2442                           	line	291
  2443                           	
  2444  0C3F                     l716:	
  2445                           	line	293
  2446                           	
  2447  0C3F                     l4132:	
  2448                           ;PR24.c: 291: else
  2449                           ;PR24.c: 292: {
  2450                           ;PR24.c: 293: data = data - 20;
  2451  0C3F  1683               	bsf	status, 5	;RP0=1, select bank1
  2452  0C40  1303               	bcf	status, 6	;RP1=0, select bank1
  2453  0C41  082E               	movf	(lcd_goto@data)^080h,w
  2454  0C42  3EEC               	addlw	0ECh
  2455  0C43  00AD               	movwf	(??_lcd_goto+0)^080h+0
  2456  0C44  082D               	movf	(??_lcd_goto+0)^080h+0,w
  2457  0C45  00AE               	movwf	(lcd_goto@data)^080h
  2458                           	line	294
  2459                           	
  2460  0C46                     l4134:	
  2461                           ;PR24.c: 294: send_config(0xc0 + data);
  2462  0C46  082E               	movf	(lcd_goto@data)^080h,w
  2463  0C47  3EC0               	addlw	0C0h
  2464  0C48  120A  118A  26D5   	fcall	_send_config
              120A  158A         
  2465  0C4D  2C4E               	goto	l4136
  2466                           	line	295
  2467                           	
  2468  0C4E                     l717:	
  2469                           	line	296
  2470                           	
  2471  0C4E                     l4136:	
  2472                           ;PR24.c: 295: }
  2473                           ;PR24.c: 296: delay(200);
  2474  0C4E  3000               	movlw	0
  2475  0C4F  1683               	bsf	status, 5	;RP0=1, select bank1
  2476  0C50  1303               	bcf	status, 6	;RP1=0, select bank1
  2477  0C51  00A3               	movwf	(?_delay+3)^080h
  2478  0C52  3000               	movlw	0
  2479  0C53  00A2               	movwf	(?_delay+2)^080h
  2480  0C54  3000               	movlw	0
  2481  0C55  00A1               	movwf	(?_delay+1)^080h
  2482  0C56  30C8               	movlw	0C8h
  2483  0C57  00A0               	movwf	(?_delay)^080h
  2484                           
  2485  0C58  120A  158A  245E   	fcall	_delay
              120A  158A         
  2486                           	line	297
  2487                           	
  2488  0C5D                     l718:	
  2489  0C5D  0008               	return
  2490                           	opt stack 0
  2491                           GLOBAL	__end_of_lcd_goto
  2492  0C5E                     	__end_of_lcd_goto:
  2493 ;; =============== function _lcd_goto ends ============
  2494                           
  2495                           	signat	_lcd_goto,4216
  2496                           	global	_lcd_clr
  2497                           psect	text585,local,class=CODE,delta=2
  2498                           global __ptext585
  2499  0B6D                     __ptext585:
  2500                           
  2501 ;; *************** function _lcd_clr *****************
  2502 ;; Defined at:
  2503 ;;		line 271 in file "../../Source File/PR24.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0
  2520 ;;      Totals:         0       0       0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    6
  2524 ;; This function calls:
  2525 ;;		_send_config
  2526 ;;		_delay
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           psect	text585
  2532                           	file	"../../Source File/PR24.c"
  2533                           	line	271
  2534                           	global	__size_of_lcd_clr
  2535  0016                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  2536                           	
  2537  0B6D                     _lcd_clr:	
  2538                           	opt	stack 1
  2539                           ; Regs used in _lcd_clr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2540                           	line	272
  2541                           	
  2542  0B6D                     l4124:	
  2543                           ;PR24.c: 272: send_config(0x01);
  2544  0B6D  3001               	movlw	(01h)
  2545  0B6E  120A  118A  26D5   	fcall	_send_config
              120A  158A         
  2546                           	line	273
  2547                           	
  2548  0B73                     l4126:	
  2549                           ;PR24.c: 273: delay(600);
  2550  0B73  3000               	movlw	0
  2551  0B74  1683               	bsf	status, 5	;RP0=1, select bank1
  2552  0B75  1303               	bcf	status, 6	;RP1=0, select bank1
  2553  0B76  00A3               	movwf	(?_delay+3)^080h
  2554  0B77  3000               	movlw	0
  2555  0B78  00A2               	movwf	(?_delay+2)^080h
  2556  0B79  3002               	movlw	02h
  2557  0B7A  00A1               	movwf	(?_delay+1)^080h
  2558  0B7B  3058               	movlw	058h
  2559  0B7C  00A0               	movwf	(?_delay)^080h
  2560                           
  2561  0B7D  120A  158A  245E   	fcall	_delay
              120A  158A         
  2562                           	line	274
  2563                           	
  2564  0B82                     l713:	
  2565  0B82  0008               	return
  2566                           	opt stack 0
  2567                           GLOBAL	__end_of_lcd_clr
  2568  0B83                     	__end_of_lcd_clr:
  2569 ;; =============== function _lcd_clr ends ============
  2570                           
  2571                           	signat	_lcd_clr,88
  2572                           	global	_send_char
  2573                           psect	text586,local,class=CODE,delta=2
  2574                           global __ptext586
  2575  05F3                     __ptext586:
  2576                           
  2577 ;; *************** function _send_char *****************
  2578 ;; Defined at:
  2579 ;;		line 302 in file "../../Source File/PR24.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  data            1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  data            1   10[BANK1 ] unsigned char 
  2584 ;;  test            1   12[BANK1 ] unsigned char 
  2585 ;;  i               1   11[BANK1 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       0       3       0       0
  2597 ;;      Temps:          0       0       2       0       0
  2598 ;;      Totals:         0       0       5       0       0
  2599 ;;Total ram usage:        5 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    5
  2602 ;; This function calls:
  2603 ;;		_delay
  2604 ;;		_e_pulse
  2605 ;; This function is called by:
  2606 ;;		_send_string
  2607 ;;		_send_dec
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           psect	text586
  2611                           	file	"../../Source File/PR24.c"
  2612                           	line	302
  2613                           	global	__size_of_send_char
  2614  00E2                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  2615                           	
  2616  05F3                     _send_char:	
  2617                           	opt	stack 1
  2618                           ; Regs used in _send_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2619                           ;send_char@data stored from wreg
  2620                           	line	305
  2621  05F3  1683               	bsf	status, 5	;RP0=1, select bank1
  2622  05F4  1303               	bcf	status, 6	;RP1=0, select bank1
  2623  05F5  00AA               	movwf	(send_char@data)^080h
  2624                           	
  2625  05F6                     l4076:	
  2626                           ;PR24.c: 303: unsigned char test;
  2627                           ;PR24.c: 304: unsigned char i;
  2628                           ;PR24.c: 305: RB7 = 1;
  2629  05F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  05F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  05F8  1786               	bsf	(55/8),(55)&7
  2632                           	line	306
  2633                           ;PR24.c: 306: for(i = 0; i < 8; i++)
  2634  05F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2635  05FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2636  05FB  01AB               	clrf	(send_char@i)^080h
  2637                           	
  2638  05FC                     l4078:	
  2639  05FC  3008               	movlw	(08h)
  2640  05FD  022B               	subwf	(send_char@i)^080h,w
  2641  05FE  1C03               	skipc
  2642  05FF  2E01               	goto	u4301
  2643  0600  2E02               	goto	u4300
  2644  0601                     u4301:
  2645  0601  2E04               	goto	l4082
  2646  0602                     u4300:
  2647  0602  2EC2               	goto	l4122
  2648                           	
  2649  0603                     l4080:	
  2650  0603  2EC2               	goto	l4122
  2651                           	line	307
  2652                           	
  2653  0604                     l721:	
  2654                           	line	308
  2655                           	
  2656  0604                     l4082:	
  2657                           ;PR24.c: 307: {
  2658                           ;PR24.c: 308: test = (data >> i) & 0b00000001;
  2659  0604  082A               	movf	(send_char@data)^080h,w
  2660  0605  00A8               	movwf	(??_send_char+0)^080h+0
  2661  0606  0A2B               	incf	(send_char@i)^080h,w
  2662  0607  2E0A               	goto	u4314
  2663  0608                     u4315:
  2664  0608  1003               	clrc
  2665  0609  0CA8               	rrf	(??_send_char+0)^080h+0,f
  2666  060A                     u4314:
  2667  060A  3EFF               	addlw	-1
  2668  060B  1D03               	skipz
  2669  060C  2E08               	goto	u4315
  2670  060D  0828               	movf	0+(??_send_char+0)^080h+0,w
  2671  060E  3901               	andlw	01h
  2672  060F  00A9               	movwf	(??_send_char+1)^080h+0
  2673  0610  0829               	movf	(??_send_char+1)^080h+0,w
  2674  0611  00AC               	movwf	(send_char@test)^080h
  2675                           	line	309
  2676                           ;PR24.c: 309: switch(i)
  2677  0612  2E99               	goto	l4116
  2678                           	line	311
  2679                           ;PR24.c: 310: {
  2680                           ;PR24.c: 311: case 0:
  2681                           	
  2682  0613                     l724:	
  2683                           	line	312
  2684                           	
  2685  0613                     l4084:	
  2686                           ;PR24.c: 312: if(test == 1) RB5 = 1;
  2687  0613  082C               	movf	(send_char@test)^080h,w
  2688  0614  3A01               	xorlw	01h
  2689  0615  1D03               	skipz
  2690  0616  2E18               	goto	u4321
  2691  0617  2E19               	goto	u4320
  2692  0618                     u4321:
  2693  0618  2E1D               	goto	l725
  2694  0619                     u4320:
  2695                           	
  2696  0619                     l4086:	
  2697  0619  1283               	bcf	status, 5	;RP0=0, select bank0
  2698  061A  1303               	bcf	status, 6	;RP1=0, select bank0
  2699  061B  1686               	bsf	(53/8),(53)&7
  2700  061C  2E22               	goto	l4088
  2701                           	line	313
  2702                           	
  2703  061D                     l725:	
  2704                           ;PR24.c: 313: else RB5 = 0;
  2705  061D  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  061E  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  061F  1286               	bcf	(53/8),(53)&7
  2708  0620  2E22               	goto	l4088
  2709                           	
  2710  0621                     l726:	
  2711  0621  2E22               	goto	l4088
  2712                           	line	314
  2713                           ;PR24.c: 314: case 1:
  2714                           	
  2715  0622                     l727:	
  2716                           	line	315
  2717                           	
  2718  0622                     l4088:	
  2719                           ;PR24.c: 315: if(test == 1) RB4 = 1;
  2720  0622  1683               	bsf	status, 5	;RP0=1, select bank1
  2721  0623  1303               	bcf	status, 6	;RP1=0, select bank1
  2722  0624  082C               	movf	(send_char@test)^080h,w
  2723  0625  3A01               	xorlw	01h
  2724  0626  1D03               	skipz
  2725  0627  2E29               	goto	u4331
  2726  0628  2E2A               	goto	u4330
  2727  0629                     u4331:
  2728  0629  2E2E               	goto	l728
  2729  062A                     u4330:
  2730                           	
  2731  062A                     l4090:	
  2732  062A  1283               	bcf	status, 5	;RP0=0, select bank0
  2733  062B  1303               	bcf	status, 6	;RP1=0, select bank0
  2734  062C  1606               	bsf	(52/8),(52)&7
  2735  062D  2E33               	goto	l4092
  2736                           	line	316
  2737                           	
  2738  062E                     l728:	
  2739                           ;PR24.c: 316: else RB4 = 0;
  2740  062E  1283               	bcf	status, 5	;RP0=0, select bank0
  2741  062F  1303               	bcf	status, 6	;RP1=0, select bank0
  2742  0630  1206               	bcf	(52/8),(52)&7
  2743  0631  2E33               	goto	l4092
  2744                           	
  2745  0632                     l729:	
  2746  0632  2E33               	goto	l4092
  2747                           	line	317
  2748                           ;PR24.c: 317: case 2:
  2749                           	
  2750  0633                     l730:	
  2751                           	line	318
  2752                           	
  2753  0633                     l4092:	
  2754                           ;PR24.c: 318: if(test == 1) RB3 = 1;
  2755  0633  1683               	bsf	status, 5	;RP0=1, select bank1
  2756  0634  1303               	bcf	status, 6	;RP1=0, select bank1
  2757  0635  082C               	movf	(send_char@test)^080h,w
  2758  0636  3A01               	xorlw	01h
  2759  0637  1D03               	skipz
  2760  0638  2E3A               	goto	u4341
  2761  0639  2E3B               	goto	u4340
  2762  063A                     u4341:
  2763  063A  2E3F               	goto	l731
  2764  063B                     u4340:
  2765                           	
  2766  063B                     l4094:	
  2767  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  2768  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  2769  063D  1586               	bsf	(51/8),(51)&7
  2770  063E  2E44               	goto	l4096
  2771                           	line	319
  2772                           	
  2773  063F                     l731:	
  2774                           ;PR24.c: 319: else RB3 = 0;
  2775  063F  1283               	bcf	status, 5	;RP0=0, select bank0
  2776  0640  1303               	bcf	status, 6	;RP1=0, select bank0
  2777  0641  1186               	bcf	(51/8),(51)&7
  2778  0642  2E44               	goto	l4096
  2779                           	
  2780  0643                     l732:	
  2781  0643  2E44               	goto	l4096
  2782                           	line	320
  2783                           ;PR24.c: 320: case 3:
  2784                           	
  2785  0644                     l733:	
  2786                           	line	321
  2787                           	
  2788  0644                     l4096:	
  2789                           ;PR24.c: 321: if(test == 1) RB2 = 1;
  2790  0644  1683               	bsf	status, 5	;RP0=1, select bank1
  2791  0645  1303               	bcf	status, 6	;RP1=0, select bank1
  2792  0646  082C               	movf	(send_char@test)^080h,w
  2793  0647  3A01               	xorlw	01h
  2794  0648  1D03               	skipz
  2795  0649  2E4B               	goto	u4351
  2796  064A  2E4C               	goto	u4350
  2797  064B                     u4351:
  2798  064B  2E50               	goto	l734
  2799  064C                     u4350:
  2800                           	
  2801  064C                     l4098:	
  2802  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  2803  064D  1303               	bcf	status, 6	;RP1=0, select bank0
  2804  064E  1506               	bsf	(50/8),(50)&7
  2805  064F  2E55               	goto	l4100
  2806                           	line	322
  2807                           	
  2808  0650                     l734:	
  2809                           ;PR24.c: 322: else RB2 = 0;
  2810  0650  1283               	bcf	status, 5	;RP0=0, select bank0
  2811  0651  1303               	bcf	status, 6	;RP1=0, select bank0
  2812  0652  1106               	bcf	(50/8),(50)&7
  2813  0653  2E55               	goto	l4100
  2814                           	
  2815  0654                     l735:	
  2816  0654  2E55               	goto	l4100
  2817                           	line	323
  2818                           ;PR24.c: 323: case 4:
  2819                           	
  2820  0655                     l736:	
  2821                           	line	324
  2822                           	
  2823  0655                     l4100:	
  2824                           ;PR24.c: 324: if(test == 1) RB1 = 1;
  2825  0655  1683               	bsf	status, 5	;RP0=1, select bank1
  2826  0656  1303               	bcf	status, 6	;RP1=0, select bank1
  2827  0657  082C               	movf	(send_char@test)^080h,w
  2828  0658  3A01               	xorlw	01h
  2829  0659  1D03               	skipz
  2830  065A  2E5C               	goto	u4361
  2831  065B  2E5D               	goto	u4360
  2832  065C                     u4361:
  2833  065C  2E61               	goto	l737
  2834  065D                     u4360:
  2835                           	
  2836  065D                     l4102:	
  2837  065D  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  065E  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  065F  1486               	bsf	(49/8),(49)&7
  2840  0660  2E66               	goto	l4104
  2841                           	line	325
  2842                           	
  2843  0661                     l737:	
  2844                           ;PR24.c: 325: else RB1 = 0;
  2845  0661  1283               	bcf	status, 5	;RP0=0, select bank0
  2846  0662  1303               	bcf	status, 6	;RP1=0, select bank0
  2847  0663  1086               	bcf	(49/8),(49)&7
  2848  0664  2E66               	goto	l4104
  2849                           	
  2850  0665                     l738:	
  2851  0665  2E66               	goto	l4104
  2852                           	line	326
  2853                           ;PR24.c: 326: case 5:
  2854                           	
  2855  0666                     l739:	
  2856                           	line	327
  2857                           	
  2858  0666                     l4104:	
  2859                           ;PR24.c: 327: if(test == 1) RC5 = 1;
  2860  0666  1683               	bsf	status, 5	;RP0=1, select bank1
  2861  0667  1303               	bcf	status, 6	;RP1=0, select bank1
  2862  0668  082C               	movf	(send_char@test)^080h,w
  2863  0669  3A01               	xorlw	01h
  2864  066A  1D03               	skipz
  2865  066B  2E6D               	goto	u4371
  2866  066C  2E6E               	goto	u4370
  2867  066D                     u4371:
  2868  066D  2E72               	goto	l740
  2869  066E                     u4370:
  2870                           	
  2871  066E                     l4106:	
  2872  066E  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  066F  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  0670  1687               	bsf	(61/8),(61)&7
  2875  0671  2E77               	goto	l4108
  2876                           	line	328
  2877                           	
  2878  0672                     l740:	
  2879                           ;PR24.c: 328: else RB1 = 0;
  2880  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  2881  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  2882  0674  1086               	bcf	(49/8),(49)&7
  2883  0675  2E77               	goto	l4108
  2884                           	
  2885  0676                     l741:	
  2886  0676  2E77               	goto	l4108
  2887                           	line	329
  2888                           ;PR24.c: 329: case 6:
  2889                           	
  2890  0677                     l742:	
  2891                           	line	330
  2892                           	
  2893  0677                     l4108:	
  2894                           ;PR24.c: 330: if(test == 1) RC4 = 1;
  2895  0677  1683               	bsf	status, 5	;RP0=1, select bank1
  2896  0678  1303               	bcf	status, 6	;RP1=0, select bank1
  2897  0679  082C               	movf	(send_char@test)^080h,w
  2898  067A  3A01               	xorlw	01h
  2899  067B  1D03               	skipz
  2900  067C  2E7E               	goto	u4381
  2901  067D  2E7F               	goto	u4380
  2902  067E                     u4381:
  2903  067E  2E83               	goto	l743
  2904  067F                     u4380:
  2905                           	
  2906  067F                     l4110:	
  2907  067F  1283               	bcf	status, 5	;RP0=0, select bank0
  2908  0680  1303               	bcf	status, 6	;RP1=0, select bank0
  2909  0681  1607               	bsf	(60/8),(60)&7
  2910  0682  2E88               	goto	l4112
  2911                           	line	331
  2912                           	
  2913  0683                     l743:	
  2914                           ;PR24.c: 331: else RC4 = 0;
  2915  0683  1283               	bcf	status, 5	;RP0=0, select bank0
  2916  0684  1303               	bcf	status, 6	;RP1=0, select bank0
  2917  0685  1207               	bcf	(60/8),(60)&7
  2918  0686  2E88               	goto	l4112
  2919                           	
  2920  0687                     l744:	
  2921  0687  2E88               	goto	l4112
  2922                           	line	332
  2923                           ;PR24.c: 332: case 7:
  2924                           	
  2925  0688                     l745:	
  2926                           	line	333
  2927                           	
  2928  0688                     l4112:	
  2929                           ;PR24.c: 333: if(test == 1) RC3 = 1;
  2930  0688  1683               	bsf	status, 5	;RP0=1, select bank1
  2931  0689  1303               	bcf	status, 6	;RP1=0, select bank1
  2932  068A  082C               	movf	(send_char@test)^080h,w
  2933  068B  3A01               	xorlw	01h
  2934  068C  1D03               	skipz
  2935  068D  2E8F               	goto	u4391
  2936  068E  2E90               	goto	u4390
  2937  068F                     u4391:
  2938  068F  2E94               	goto	l746
  2939  0690                     u4390:
  2940                           	
  2941  0690                     l4114:	
  2942  0690  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  0691  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  0692  1587               	bsf	(59/8),(59)&7
  2945  0693  2EB5               	goto	l4118
  2946                           	line	334
  2947                           	
  2948  0694                     l746:	
  2949                           ;PR24.c: 334: else RC3 = 0;
  2950  0694  1283               	bcf	status, 5	;RP0=0, select bank0
  2951  0695  1303               	bcf	status, 6	;RP1=0, select bank0
  2952  0696  1187               	bcf	(59/8),(59)&7
  2953  0697  2EB5               	goto	l4118
  2954                           	
  2955  0698                     l747:	
  2956                           	line	335
  2957                           ;PR24.c: 335: }
  2958  0698  2EB5               	goto	l4118
  2959                           	line	309
  2960                           	
  2961  0699                     l723:	
  2962                           	
  2963  0699                     l4116:	
  2964  0699  1683               	bsf	status, 5	;RP0=1, select bank1
  2965  069A  1303               	bcf	status, 6	;RP1=0, select bank1
  2966  069B  082B               	movf	(send_char@i)^080h,w
  2967                           	; Switch size 1, requested type "space"
  2968                           ; Number of cases is 8, Range of values is 0 to 7
  2969                           ; switch strategies available:
  2970                           ; Name         Instructions Cycles
  2971                           ; simple_byte           25    13 (average)
  2972                           ; direct_byte           32     8 (fixed)
  2973                           ; jumptable            260     6 (fixed)
  2974                           ; rangetable            12     6 (fixed)
  2975                           ; spacedrange           22     9 (fixed)
  2976                           ; locatedrange           8     3 (fixed)
  2977                           ;	Chosen strategy is simple_byte
  2978                           
  2979                           	opt asmopt_off
  2980  069C  3A00               	xorlw	0^0	; case 0
  2981  069D  1903               	skipnz
  2982  069E  2E13               	goto	l4084
  2983  069F  3A01               	xorlw	1^0	; case 1
  2984  06A0  1903               	skipnz
  2985  06A1  2E22               	goto	l4088
  2986  06A2  3A03               	xorlw	2^1	; case 2
  2987  06A3  1903               	skipnz
  2988  06A4  2E33               	goto	l4092
  2989  06A5  3A01               	xorlw	3^2	; case 3
  2990  06A6  1903               	skipnz
  2991  06A7  2E44               	goto	l4096
  2992  06A8  3A07               	xorlw	4^3	; case 4
  2993  06A9  1903               	skipnz
  2994  06AA  2E55               	goto	l4100
  2995  06AB  3A01               	xorlw	5^4	; case 5
  2996  06AC  1903               	skipnz
  2997  06AD  2E66               	goto	l4104
  2998  06AE  3A03               	xorlw	6^5	; case 6
  2999  06AF  1903               	skipnz
  3000  06B0  2E77               	goto	l4108
  3001  06B1  3A01               	xorlw	7^6	; case 7
  3002  06B2  1903               	skipnz
  3003  06B3  2E88               	goto	l4112
  3004  06B4  2EB5               	goto	l4118
  3005                           	opt asmopt_on
  3006                           
  3007                           	line	335
  3008                           	
  3009  06B5                     l748:	
  3010                           	line	306
  3011                           	
  3012  06B5                     l4118:	
  3013  06B5  3001               	movlw	(01h)
  3014  06B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3015  06B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3016  06B8  00A8               	movwf	(??_send_char+0)^080h+0
  3017  06B9  0828               	movf	(??_send_char+0)^080h+0,w
  3018  06BA  07AB               	addwf	(send_char@i)^080h,f
  3019                           	
  3020  06BB                     l4120:	
  3021  06BB  3008               	movlw	(08h)
  3022  06BC  022B               	subwf	(send_char@i)^080h,w
  3023  06BD  1C03               	skipc
  3024  06BE  2EC0               	goto	u4401
  3025  06BF  2EC1               	goto	u4400
  3026  06C0                     u4401:
  3027  06C0  2E04               	goto	l4082
  3028  06C1                     u4400:
  3029  06C1  2EC2               	goto	l4122
  3030                           	
  3031  06C2                     l722:	
  3032                           	line	337
  3033                           	
  3034  06C2                     l4122:	
  3035                           ;PR24.c: 336: }
  3036                           ;PR24.c: 337: delay(50);
  3037  06C2  3000               	movlw	0
  3038  06C3  00A3               	movwf	(?_delay+3)^080h
  3039  06C4  3000               	movlw	0
  3040  06C5  00A2               	movwf	(?_delay+2)^080h
  3041  06C6  3000               	movlw	0
  3042  06C7  00A1               	movwf	(?_delay+1)^080h
  3043  06C8  3032               	movlw	032h
  3044  06C9  00A0               	movwf	(?_delay)^080h
  3045                           
  3046  06CA  120A  158A  245E   	fcall	_delay
              120A  118A         
  3047                           	line	338
  3048                           ;PR24.c: 338: e_pulse();
  3049  06CF  120A  158A  2383   	fcall	_e_pulse
              120A  118A         
  3050                           	line	339
  3051                           	
  3052  06D4                     l749:	
  3053  06D4  0008               	return
  3054                           	opt stack 0
  3055                           GLOBAL	__end_of_send_char
  3056  06D5                     	__end_of_send_char:
  3057 ;; =============== function _send_char ends ============
  3058                           
  3059                           	signat	_send_char,4216
  3060                           	global	_send_config
  3061                           psect	text587,local,class=CODE,delta=2
  3062                           global __ptext587
  3063  06D5                     __ptext587:
  3064                           
  3065 ;; *************** function _send_config *****************
  3066 ;; Defined at:
  3067 ;;		line 228 in file "../../Source File/PR24.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  data            1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  data            1   10[BANK1 ] unsigned char 
  3072 ;;  test            1   12[BANK1 ] unsigned char 
  3073 ;;  i               1   11[BANK1 ] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       0       0       0
  3084 ;;      Locals:         0       0       3       0       0
  3085 ;;      Temps:          0       0       2       0       0
  3086 ;;      Totals:         0       0       5       0       0
  3087 ;;Total ram usage:        5 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		_delay
  3092 ;;		_e_pulse
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;;		_lcd_clr
  3096 ;;		_lcd_goto
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           psect	text587
  3100                           	file	"../../Source File/PR24.c"
  3101                           	line	228
  3102                           	global	__size_of_send_config
  3103  00E2                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  3104                           	
  3105  06D5                     _send_config:	
  3106                           	opt	stack 1
  3107                           ; Regs used in _send_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3108                           ;send_config@data stored from wreg
  3109                           	line	232
  3110  06D5  1683               	bsf	status, 5	;RP0=1, select bank1
  3111  06D6  1303               	bcf	status, 6	;RP1=0, select bank1
  3112  06D7  00AA               	movwf	(send_config@data)^080h
  3113                           	
  3114  06D8                     l4028:	
  3115                           ;PR24.c: 229: unsigned char test;
  3116                           ;PR24.c: 230: unsigned char i;
  3117                           ;PR24.c: 232: RB7 = 0;
  3118  06D8  1283               	bcf	status, 5	;RP0=0, select bank0
  3119  06D9  1303               	bcf	status, 6	;RP1=0, select bank0
  3120  06DA  1386               	bcf	(55/8),(55)&7
  3121                           	line	233
  3122                           ;PR24.c: 233: for(i = 0; i < 8; i++)
  3123  06DB  1683               	bsf	status, 5	;RP0=1, select bank1
  3124  06DC  1303               	bcf	status, 6	;RP1=0, select bank1
  3125  06DD  01AB               	clrf	(send_config@i)^080h
  3126                           	
  3127  06DE                     l4030:	
  3128  06DE  3008               	movlw	(08h)
  3129  06DF  022B               	subwf	(send_config@i)^080h,w
  3130  06E0  1C03               	skipc
  3131  06E1  2EE3               	goto	u4191
  3132  06E2  2EE4               	goto	u4190
  3133  06E3                     u4191:
  3134  06E3  2EE6               	goto	l4034
  3135  06E4                     u4190:
  3136  06E4  2FA4               	goto	l4074
  3137                           	
  3138  06E5                     l4032:	
  3139  06E5  2FA4               	goto	l4074
  3140                           	line	234
  3141                           	
  3142  06E6                     l682:	
  3143                           	line	235
  3144                           	
  3145  06E6                     l4034:	
  3146                           ;PR24.c: 234: {
  3147                           ;PR24.c: 235: test = (data >> i) & 0b00000001;
  3148  06E6  082A               	movf	(send_config@data)^080h,w
  3149  06E7  00A8               	movwf	(??_send_config+0)^080h+0
  3150  06E8  0A2B               	incf	(send_config@i)^080h,w
  3151  06E9  2EEC               	goto	u4204
  3152  06EA                     u4205:
  3153  06EA  1003               	clrc
  3154  06EB  0CA8               	rrf	(??_send_config+0)^080h+0,f
  3155  06EC                     u4204:
  3156  06EC  3EFF               	addlw	-1
  3157  06ED  1D03               	skipz
  3158  06EE  2EEA               	goto	u4205
  3159  06EF  0828               	movf	0+(??_send_config+0)^080h+0,w
  3160  06F0  3901               	andlw	01h
  3161  06F1  00A9               	movwf	(??_send_config+1)^080h+0
  3162  06F2  0829               	movf	(??_send_config+1)^080h+0,w
  3163  06F3  00AC               	movwf	(send_config@test)^080h
  3164                           	line	236
  3165                           ;PR24.c: 236: switch(i)
  3166  06F4  2F7B               	goto	l4068
  3167                           	line	238
  3168                           ;PR24.c: 237: {
  3169                           ;PR24.c: 238: case 0:
  3170                           	
  3171  06F5                     l685:	
  3172                           	line	239
  3173                           	
  3174  06F5                     l4036:	
  3175                           ;PR24.c: 239: if(test == 1) RB5 = 1;
  3176  06F5  082C               	movf	(send_config@test)^080h,w
  3177  06F6  3A01               	xorlw	01h
  3178  06F7  1D03               	skipz
  3179  06F8  2EFA               	goto	u4211
  3180  06F9  2EFB               	goto	u4210
  3181  06FA                     u4211:
  3182  06FA  2EFF               	goto	l686
  3183  06FB                     u4210:
  3184                           	
  3185  06FB                     l4038:	
  3186  06FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3187  06FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3188  06FD  1686               	bsf	(53/8),(53)&7
  3189  06FE  2F04               	goto	l4040
  3190                           	line	240
  3191                           	
  3192  06FF                     l686:	
  3193                           ;PR24.c: 240: else RB5 = 0;
  3194  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
  3195  0700  1303               	bcf	status, 6	;RP1=0, select bank0
  3196  0701  1286               	bcf	(53/8),(53)&7
  3197  0702  2F04               	goto	l4040
  3198                           	
  3199  0703                     l687:	
  3200  0703  2F04               	goto	l4040
  3201                           	line	241
  3202                           ;PR24.c: 241: case 1:
  3203                           	
  3204  0704                     l688:	
  3205                           	line	242
  3206                           	
  3207  0704                     l4040:	
  3208                           ;PR24.c: 242: if(test == 1) RB4 = 1;
  3209  0704  1683               	bsf	status, 5	;RP0=1, select bank1
  3210  0705  1303               	bcf	status, 6	;RP1=0, select bank1
  3211  0706  082C               	movf	(send_config@test)^080h,w
  3212  0707  3A01               	xorlw	01h
  3213  0708  1D03               	skipz
  3214  0709  2F0B               	goto	u4221
  3215  070A  2F0C               	goto	u4220
  3216  070B                     u4221:
  3217  070B  2F10               	goto	l689
  3218  070C                     u4220:
  3219                           	
  3220  070C                     l4042:	
  3221  070C  1283               	bcf	status, 5	;RP0=0, select bank0
  3222  070D  1303               	bcf	status, 6	;RP1=0, select bank0
  3223  070E  1606               	bsf	(52/8),(52)&7
  3224  070F  2F15               	goto	l4044
  3225                           	line	243
  3226                           	
  3227  0710                     l689:	
  3228                           ;PR24.c: 243: else RB4 = 0;
  3229  0710  1283               	bcf	status, 5	;RP0=0, select bank0
  3230  0711  1303               	bcf	status, 6	;RP1=0, select bank0
  3231  0712  1206               	bcf	(52/8),(52)&7
  3232  0713  2F15               	goto	l4044
  3233                           	
  3234  0714                     l690:	
  3235  0714  2F15               	goto	l4044
  3236                           	line	244
  3237                           ;PR24.c: 244: case 2:
  3238                           	
  3239  0715                     l691:	
  3240                           	line	245
  3241                           	
  3242  0715                     l4044:	
  3243                           ;PR24.c: 245: if(test == 1) RB3 = 1;
  3244  0715  1683               	bsf	status, 5	;RP0=1, select bank1
  3245  0716  1303               	bcf	status, 6	;RP1=0, select bank1
  3246  0717  082C               	movf	(send_config@test)^080h,w
  3247  0718  3A01               	xorlw	01h
  3248  0719  1D03               	skipz
  3249  071A  2F1C               	goto	u4231
  3250  071B  2F1D               	goto	u4230
  3251  071C                     u4231:
  3252  071C  2F21               	goto	l692
  3253  071D                     u4230:
  3254                           	
  3255  071D                     l4046:	
  3256  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  3257  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  3258  071F  1586               	bsf	(51/8),(51)&7
  3259  0720  2F26               	goto	l4048
  3260                           	line	246
  3261                           	
  3262  0721                     l692:	
  3263                           ;PR24.c: 246: else RB3 = 0;
  3264  0721  1283               	bcf	status, 5	;RP0=0, select bank0
  3265  0722  1303               	bcf	status, 6	;RP1=0, select bank0
  3266  0723  1186               	bcf	(51/8),(51)&7
  3267  0724  2F26               	goto	l4048
  3268                           	
  3269  0725                     l693:	
  3270  0725  2F26               	goto	l4048
  3271                           	line	247
  3272                           ;PR24.c: 247: case 3:
  3273                           	
  3274  0726                     l694:	
  3275                           	line	248
  3276                           	
  3277  0726                     l4048:	
  3278                           ;PR24.c: 248: if(test == 1) RB2 = 1;
  3279  0726  1683               	bsf	status, 5	;RP0=1, select bank1
  3280  0727  1303               	bcf	status, 6	;RP1=0, select bank1
  3281  0728  082C               	movf	(send_config@test)^080h,w
  3282  0729  3A01               	xorlw	01h
  3283  072A  1D03               	skipz
  3284  072B  2F2D               	goto	u4241
  3285  072C  2F2E               	goto	u4240
  3286  072D                     u4241:
  3287  072D  2F32               	goto	l695
  3288  072E                     u4240:
  3289                           	
  3290  072E                     l4050:	
  3291  072E  1283               	bcf	status, 5	;RP0=0, select bank0
  3292  072F  1303               	bcf	status, 6	;RP1=0, select bank0
  3293  0730  1506               	bsf	(50/8),(50)&7
  3294  0731  2F37               	goto	l4052
  3295                           	line	249
  3296                           	
  3297  0732                     l695:	
  3298                           ;PR24.c: 249: else RB2 = 0;
  3299  0732  1283               	bcf	status, 5	;RP0=0, select bank0
  3300  0733  1303               	bcf	status, 6	;RP1=0, select bank0
  3301  0734  1106               	bcf	(50/8),(50)&7
  3302  0735  2F37               	goto	l4052
  3303                           	
  3304  0736                     l696:	
  3305  0736  2F37               	goto	l4052
  3306                           	line	250
  3307                           ;PR24.c: 250: case 4:
  3308                           	
  3309  0737                     l697:	
  3310                           	line	251
  3311                           	
  3312  0737                     l4052:	
  3313                           ;PR24.c: 251: if(test == 1) RB1 = 1;
  3314  0737  1683               	bsf	status, 5	;RP0=1, select bank1
  3315  0738  1303               	bcf	status, 6	;RP1=0, select bank1
  3316  0739  082C               	movf	(send_config@test)^080h,w
  3317  073A  3A01               	xorlw	01h
  3318  073B  1D03               	skipz
  3319  073C  2F3E               	goto	u4251
  3320  073D  2F3F               	goto	u4250
  3321  073E                     u4251:
  3322  073E  2F43               	goto	l698
  3323  073F                     u4250:
  3324                           	
  3325  073F                     l4054:	
  3326  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  3327  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  3328  0741  1486               	bsf	(49/8),(49)&7
  3329  0742  2F48               	goto	l4056
  3330                           	line	252
  3331                           	
  3332  0743                     l698:	
  3333                           ;PR24.c: 252: else RB1 = 0;
  3334  0743  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  0744  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  0745  1086               	bcf	(49/8),(49)&7
  3337  0746  2F48               	goto	l4056
  3338                           	
  3339  0747                     l699:	
  3340  0747  2F48               	goto	l4056
  3341                           	line	253
  3342                           ;PR24.c: 253: case 5:
  3343                           	
  3344  0748                     l700:	
  3345                           	line	254
  3346                           	
  3347  0748                     l4056:	
  3348                           ;PR24.c: 254: if(test == 1) RC5 = 1;
  3349  0748  1683               	bsf	status, 5	;RP0=1, select bank1
  3350  0749  1303               	bcf	status, 6	;RP1=0, select bank1
  3351  074A  082C               	movf	(send_config@test)^080h,w
  3352  074B  3A01               	xorlw	01h
  3353  074C  1D03               	skipz
  3354  074D  2F4F               	goto	u4261
  3355  074E  2F50               	goto	u4260
  3356  074F                     u4261:
  3357  074F  2F54               	goto	l701
  3358  0750                     u4260:
  3359                           	
  3360  0750                     l4058:	
  3361  0750  1283               	bcf	status, 5	;RP0=0, select bank0
  3362  0751  1303               	bcf	status, 6	;RP1=0, select bank0
  3363  0752  1687               	bsf	(61/8),(61)&7
  3364  0753  2F59               	goto	l4060
  3365                           	line	255
  3366                           	
  3367  0754                     l701:	
  3368                           ;PR24.c: 255: else RC5 = 0;
  3369  0754  1283               	bcf	status, 5	;RP0=0, select bank0
  3370  0755  1303               	bcf	status, 6	;RP1=0, select bank0
  3371  0756  1287               	bcf	(61/8),(61)&7
  3372  0757  2F59               	goto	l4060
  3373                           	
  3374  0758                     l702:	
  3375  0758  2F59               	goto	l4060
  3376                           	line	256
  3377                           ;PR24.c: 256: case 6:
  3378                           	
  3379  0759                     l703:	
  3380                           	line	257
  3381                           	
  3382  0759                     l4060:	
  3383                           ;PR24.c: 257: if(test == 1) RC4 = 1;
  3384  0759  1683               	bsf	status, 5	;RP0=1, select bank1
  3385  075A  1303               	bcf	status, 6	;RP1=0, select bank1
  3386  075B  082C               	movf	(send_config@test)^080h,w
  3387  075C  3A01               	xorlw	01h
  3388  075D  1D03               	skipz
  3389  075E  2F60               	goto	u4271
  3390  075F  2F61               	goto	u4270
  3391  0760                     u4271:
  3392  0760  2F65               	goto	l704
  3393  0761                     u4270:
  3394                           	
  3395  0761                     l4062:	
  3396  0761  1283               	bcf	status, 5	;RP0=0, select bank0
  3397  0762  1303               	bcf	status, 6	;RP1=0, select bank0
  3398  0763  1607               	bsf	(60/8),(60)&7
  3399  0764  2F6A               	goto	l4064
  3400                           	line	258
  3401                           	
  3402  0765                     l704:	
  3403                           ;PR24.c: 258: else RC4 = 0;
  3404  0765  1283               	bcf	status, 5	;RP0=0, select bank0
  3405  0766  1303               	bcf	status, 6	;RP1=0, select bank0
  3406  0767  1207               	bcf	(60/8),(60)&7
  3407  0768  2F6A               	goto	l4064
  3408                           	
  3409  0769                     l705:	
  3410  0769  2F6A               	goto	l4064
  3411                           	line	259
  3412                           ;PR24.c: 259: case 7:
  3413                           	
  3414  076A                     l706:	
  3415                           	line	260
  3416                           	
  3417  076A                     l4064:	
  3418                           ;PR24.c: 260: if(test == 1) RC3 = 1;
  3419  076A  1683               	bsf	status, 5	;RP0=1, select bank1
  3420  076B  1303               	bcf	status, 6	;RP1=0, select bank1
  3421  076C  082C               	movf	(send_config@test)^080h,w
  3422  076D  3A01               	xorlw	01h
  3423  076E  1D03               	skipz
  3424  076F  2F71               	goto	u4281
  3425  0770  2F72               	goto	u4280
  3426  0771                     u4281:
  3427  0771  2F76               	goto	l707
  3428  0772                     u4280:
  3429                           	
  3430  0772                     l4066:	
  3431  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  3432  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  3433  0774  1587               	bsf	(59/8),(59)&7
  3434  0775  2F97               	goto	l4070
  3435                           	line	261
  3436                           	
  3437  0776                     l707:	
  3438                           ;PR24.c: 261: else RC3 = 0;
  3439  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  3440  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  3441  0778  1187               	bcf	(59/8),(59)&7
  3442  0779  2F97               	goto	l4070
  3443                           	
  3444  077A                     l708:	
  3445                           	line	262
  3446                           ;PR24.c: 262: }
  3447  077A  2F97               	goto	l4070
  3448                           	line	236
  3449                           	
  3450  077B                     l684:	
  3451                           	
  3452  077B                     l4068:	
  3453  077B  1683               	bsf	status, 5	;RP0=1, select bank1
  3454  077C  1303               	bcf	status, 6	;RP1=0, select bank1
  3455  077D  082B               	movf	(send_config@i)^080h,w
  3456                           	; Switch size 1, requested type "space"
  3457                           ; Number of cases is 8, Range of values is 0 to 7
  3458                           ; switch strategies available:
  3459                           ; Name         Instructions Cycles
  3460                           ; simple_byte           25    13 (average)
  3461                           ; direct_byte           32     8 (fixed)
  3462                           ; jumptable            260     6 (fixed)
  3463                           ; rangetable            12     6 (fixed)
  3464                           ; spacedrange           22     9 (fixed)
  3465                           ; locatedrange           8     3 (fixed)
  3466                           ;	Chosen strategy is simple_byte
  3467                           
  3468                           	opt asmopt_off
  3469  077E  3A00               	xorlw	0^0	; case 0
  3470  077F  1903               	skipnz
  3471  0780  2EF5               	goto	l4036
  3472  0781  3A01               	xorlw	1^0	; case 1
  3473  0782  1903               	skipnz
  3474  0783  2F04               	goto	l4040
  3475  0784  3A03               	xorlw	2^1	; case 2
  3476  0785  1903               	skipnz
  3477  0786  2F15               	goto	l4044
  3478  0787  3A01               	xorlw	3^2	; case 3
  3479  0788  1903               	skipnz
  3480  0789  2F26               	goto	l4048
  3481  078A  3A07               	xorlw	4^3	; case 4
  3482  078B  1903               	skipnz
  3483  078C  2F37               	goto	l4052
  3484  078D  3A01               	xorlw	5^4	; case 5
  3485  078E  1903               	skipnz
  3486  078F  2F48               	goto	l4056
  3487  0790  3A03               	xorlw	6^5	; case 6
  3488  0791  1903               	skipnz
  3489  0792  2F59               	goto	l4060
  3490  0793  3A01               	xorlw	7^6	; case 7
  3491  0794  1903               	skipnz
  3492  0795  2F6A               	goto	l4064
  3493  0796  2F97               	goto	l4070
  3494                           	opt asmopt_on
  3495                           
  3496                           	line	262
  3497                           	
  3498  0797                     l709:	
  3499                           	line	233
  3500                           	
  3501  0797                     l4070:	
  3502  0797  3001               	movlw	(01h)
  3503  0798  1683               	bsf	status, 5	;RP0=1, select bank1
  3504  0799  1303               	bcf	status, 6	;RP1=0, select bank1
  3505  079A  00A8               	movwf	(??_send_config+0)^080h+0
  3506  079B  0828               	movf	(??_send_config+0)^080h+0,w
  3507  079C  07AB               	addwf	(send_config@i)^080h,f
  3508                           	
  3509  079D                     l4072:	
  3510  079D  3008               	movlw	(08h)
  3511  079E  022B               	subwf	(send_config@i)^080h,w
  3512  079F  1C03               	skipc
  3513  07A0  2FA2               	goto	u4291
  3514  07A1  2FA3               	goto	u4290
  3515  07A2                     u4291:
  3516  07A2  2EE6               	goto	l4034
  3517  07A3                     u4290:
  3518  07A3  2FA4               	goto	l4074
  3519                           	
  3520  07A4                     l683:	
  3521                           	line	264
  3522                           	
  3523  07A4                     l4074:	
  3524                           ;PR24.c: 263: }
  3525                           ;PR24.c: 264: delay(50);
  3526  07A4  3000               	movlw	0
  3527  07A5  00A3               	movwf	(?_delay+3)^080h
  3528  07A6  3000               	movlw	0
  3529  07A7  00A2               	movwf	(?_delay+2)^080h
  3530  07A8  3000               	movlw	0
  3531  07A9  00A1               	movwf	(?_delay+1)^080h
  3532  07AA  3032               	movlw	032h
  3533  07AB  00A0               	movwf	(?_delay)^080h
  3534                           
  3535  07AC  120A  158A  245E   	fcall	_delay
              120A  118A         
  3536                           	line	265
  3537                           ;PR24.c: 265: e_pulse();
  3538  07B1  120A  158A  2383   	fcall	_e_pulse
              120A  118A         
  3539                           	line	266
  3540                           	
  3541  07B6                     l710:	
  3542  07B6  0008               	return
  3543                           	opt stack 0
  3544                           GLOBAL	__end_of_send_config
  3545  07B7                     	__end_of_send_config:
  3546 ;; =============== function _send_config ends ============
  3547                           
  3548                           	signat	_send_config,4216
  3549                           	global	_e_pulse
  3550                           psect	text588,local,class=CODE,delta=2
  3551                           global __ptext588
  3552  0B83                     __ptext588:
  3553                           
  3554 ;; *************** function _e_pulse *****************
  3555 ;; Defined at:
  3556 ;;		line 218 in file "../../Source File/PR24.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;		None               void
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         0       0       0       0       0
  3571 ;;      Locals:         0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0
  3573 ;;      Totals:         0       0       0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    4
  3577 ;; This function calls:
  3578 ;;		_delay
  3579 ;; This function is called by:
  3580 ;;		_send_config
  3581 ;;		_send_char
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           psect	text588
  3585                           	file	"../../Source File/PR24.c"
  3586                           	line	218
  3587                           	global	__size_of_e_pulse
  3588  0025                     	__size_of_e_pulse	equ	__end_of_e_pulse-_e_pulse
  3589                           	
  3590  0B83                     _e_pulse:	
  3591                           	opt	stack 1
  3592                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  3593                           	line	219
  3594                           	
  3595  0B83                     l4022:	
  3596                           ;PR24.c: 219: RB6 = 1;
  3597  0B83  1283               	bcf	status, 5	;RP0=0, select bank0
  3598  0B84  1303               	bcf	status, 6	;RP1=0, select bank0
  3599  0B85  1706               	bsf	(54/8),(54)&7
  3600                           	line	220
  3601                           	
  3602  0B86                     l4024:	
  3603                           ;PR24.c: 220: delay(50);
  3604  0B86  3000               	movlw	0
  3605  0B87  1683               	bsf	status, 5	;RP0=1, select bank1
  3606  0B88  1303               	bcf	status, 6	;RP1=0, select bank1
  3607  0B89  00A3               	movwf	(?_delay+3)^080h
  3608  0B8A  3000               	movlw	0
  3609  0B8B  00A2               	movwf	(?_delay+2)^080h
  3610  0B8C  3000               	movlw	0
  3611  0B8D  00A1               	movwf	(?_delay+1)^080h
  3612  0B8E  3032               	movlw	032h
  3613  0B8F  00A0               	movwf	(?_delay)^080h
  3614                           
  3615  0B90  120A  158A  245E   	fcall	_delay
              120A  158A         
  3616                           	line	221
  3617                           	
  3618  0B95                     l4026:	
  3619                           ;PR24.c: 221: RB6 = 0;
  3620  0B95  1283               	bcf	status, 5	;RP0=0, select bank0
  3621  0B96  1303               	bcf	status, 6	;RP1=0, select bank0
  3622  0B97  1306               	bcf	(54/8),(54)&7
  3623                           	line	222
  3624                           ;PR24.c: 222: delay(50);
  3625  0B98  3000               	movlw	0
  3626  0B99  1683               	bsf	status, 5	;RP0=1, select bank1
  3627  0B9A  1303               	bcf	status, 6	;RP1=0, select bank1
  3628  0B9B  00A3               	movwf	(?_delay+3)^080h
  3629  0B9C  3000               	movlw	0
  3630  0B9D  00A2               	movwf	(?_delay+2)^080h
  3631  0B9E  3000               	movlw	0
  3632  0B9F  00A1               	movwf	(?_delay+1)^080h
  3633  0BA0  3032               	movlw	032h
  3634  0BA1  00A0               	movwf	(?_delay)^080h
  3635                           
  3636  0BA2  120A  158A  245E   	fcall	_delay
              120A  158A         
  3637                           	line	223
  3638                           	
  3639  0BA7                     l679:	
  3640  0BA7  0008               	return
  3641                           	opt stack 0
  3642                           GLOBAL	__end_of_e_pulse
  3643  0BA8                     	__end_of_e_pulse:
  3644 ;; =============== function _e_pulse ends ============
  3645                           
  3646                           	signat	_e_pulse,88
  3647                           	global	_ai_read
  3648                           psect	text589,local,class=CODE,delta=2
  3649                           global __ptext589
  3650  0F63                     __ptext589:
  3651                           
  3652 ;; *************** function _ai_read *****************
  3653 ;; Defined at:
  3654 ;;		line 165 in file "../../Source File/PR24.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  an_sel          1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  an_sel          1   44[BANK1 ] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      unsigned char 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       0       1       0       0
  3670 ;;      Temps:          0       0       2       0       0
  3671 ;;      Totals:         0       0       3       0       0
  3672 ;;Total ram usage:        3 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    4
  3675 ;; This function calls:
  3676 ;;		_delay
  3677 ;;		___wmul
  3678 ;;		___awdiv
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           psect	text589
  3684                           	file	"../../Source File/PR24.c"
  3685                           	line	165
  3686                           	global	__size_of_ai_read
  3687  009D                     	__size_of_ai_read	equ	__end_of_ai_read-_ai_read
  3688                           	
  3689  0F63                     _ai_read:	
  3690                           	opt	stack 3
  3691                           ; Regs used in _ai_read: [wreg+status,2+status,0+pclath+cstack]
  3692                           ;ai_read@an_sel stored from wreg
  3693  0F63  1683               	bsf	status, 5	;RP0=1, select bank1
  3694  0F64  1303               	bcf	status, 6	;RP1=0, select bank1
  3695  0F65  00CC               	movwf	(ai_read@an_sel)^080h
  3696                           	line	166
  3697                           	
  3698  0F66                     l3984:	
  3699                           ;PR24.c: 166: if(an_sel == 0) ADCON0 = 0b00000001;
  3700  0F66  08CC               	movf	(ai_read@an_sel)^080h,f
  3701  0F67  1D03               	skipz
  3702  0F68  2F6A               	goto	u4111
  3703  0F69  2F6B               	goto	u4110
  3704  0F6A                     u4111:
  3705  0F6A  2F70               	goto	l3988
  3706  0F6B                     u4110:
  3707                           	
  3708  0F6B                     l3986:	
  3709  0F6B  3001               	movlw	(01h)
  3710  0F6C  1283               	bcf	status, 5	;RP0=0, select bank0
  3711  0F6D  1303               	bcf	status, 6	;RP1=0, select bank0
  3712  0F6E  009F               	movwf	(31)	;volatile
  3713  0F6F  2FA8               	goto	l4004
  3714                           	line	167
  3715                           	
  3716  0F70                     l646:	
  3717                           	
  3718  0F70                     l3988:	
  3719                           ;PR24.c: 167: else if(an_sel == 1) ADCON0 = 0b00001001;
  3720  0F70  1683               	bsf	status, 5	;RP0=1, select bank1
  3721  0F71  1303               	bcf	status, 6	;RP1=0, select bank1
  3722  0F72  084C               	movf	(ai_read@an_sel)^080h,w
  3723  0F73  3A01               	xorlw	01h
  3724  0F74  1D03               	skipz
  3725  0F75  2F77               	goto	u4121
  3726  0F76  2F78               	goto	u4120
  3727  0F77                     u4121:
  3728  0F77  2F7D               	goto	l3992
  3729  0F78                     u4120:
  3730                           	
  3731  0F78                     l3990:	
  3732  0F78  3009               	movlw	(09h)
  3733  0F79  1283               	bcf	status, 5	;RP0=0, select bank0
  3734  0F7A  1303               	bcf	status, 6	;RP1=0, select bank0
  3735  0F7B  009F               	movwf	(31)	;volatile
  3736  0F7C  2FA8               	goto	l4004
  3737                           	line	168
  3738                           	
  3739  0F7D                     l648:	
  3740                           	
  3741  0F7D                     l3992:	
  3742                           ;PR24.c: 168: else if(an_sel == 2) ADCON0 = 0b00010001;
  3743  0F7D  1683               	bsf	status, 5	;RP0=1, select bank1
  3744  0F7E  1303               	bcf	status, 6	;RP1=0, select bank1
  3745  0F7F  084C               	movf	(ai_read@an_sel)^080h,w
  3746  0F80  3A02               	xorlw	02h
  3747  0F81  1D03               	skipz
  3748  0F82  2F84               	goto	u4131
  3749  0F83  2F85               	goto	u4130
  3750  0F84                     u4131:
  3751  0F84  2F8A               	goto	l3996
  3752  0F85                     u4130:
  3753                           	
  3754  0F85                     l3994:	
  3755  0F85  3011               	movlw	(011h)
  3756  0F86  1283               	bcf	status, 5	;RP0=0, select bank0
  3757  0F87  1303               	bcf	status, 6	;RP1=0, select bank0
  3758  0F88  009F               	movwf	(31)	;volatile
  3759  0F89  2FA8               	goto	l4004
  3760                           	line	169
  3761                           	
  3762  0F8A                     l650:	
  3763                           	
  3764  0F8A                     l3996:	
  3765                           ;PR24.c: 169: else if(an_sel == 3) ADCON0 = 0b00011001;
  3766  0F8A  1683               	bsf	status, 5	;RP0=1, select bank1
  3767  0F8B  1303               	bcf	status, 6	;RP1=0, select bank1
  3768  0F8C  084C               	movf	(ai_read@an_sel)^080h,w
  3769  0F8D  3A03               	xorlw	03h
  3770  0F8E  1D03               	skipz
  3771  0F8F  2F91               	goto	u4141
  3772  0F90  2F92               	goto	u4140
  3773  0F91                     u4141:
  3774  0F91  2F97               	goto	l4000
  3775  0F92                     u4140:
  3776                           	
  3777  0F92                     l3998:	
  3778  0F92  3019               	movlw	(019h)
  3779  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  3780  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  3781  0F95  009F               	movwf	(31)	;volatile
  3782  0F96  2FA8               	goto	l4004
  3783                           	line	170
  3784                           	
  3785  0F97                     l652:	
  3786                           	
  3787  0F97                     l4000:	
  3788                           ;PR24.c: 170: else if(an_sel == 4) ADCON0 = 0b00100001;
  3789  0F97  1683               	bsf	status, 5	;RP0=1, select bank1
  3790  0F98  1303               	bcf	status, 6	;RP1=0, select bank1
  3791  0F99  084C               	movf	(ai_read@an_sel)^080h,w
  3792  0F9A  3A04               	xorlw	04h
  3793  0F9B  1D03               	skipz
  3794  0F9C  2F9E               	goto	u4151
  3795  0F9D  2F9F               	goto	u4150
  3796  0F9E                     u4151:
  3797  0F9E  2FA8               	goto	l4004
  3798  0F9F                     u4150:
  3799                           	
  3800  0F9F                     l4002:	
  3801  0F9F  3021               	movlw	(021h)
  3802  0FA0  1283               	bcf	status, 5	;RP0=0, select bank0
  3803  0FA1  1303               	bcf	status, 6	;RP1=0, select bank0
  3804  0FA2  009F               	movwf	(31)	;volatile
  3805  0FA3  2FA8               	goto	l4004
  3806                           	
  3807  0FA4                     l654:	
  3808  0FA4  2FA8               	goto	l4004
  3809                           	line	172
  3810                           	
  3811  0FA5                     l653:	
  3812  0FA5  2FA8               	goto	l4004
  3813                           	
  3814  0FA6                     l651:	
  3815  0FA6  2FA8               	goto	l4004
  3816                           	
  3817  0FA7                     l649:	
  3818  0FA7  2FA8               	goto	l4004
  3819                           	
  3820  0FA8                     l647:	
  3821                           	
  3822  0FA8                     l4004:	
  3823                           ;PR24.c: 172: delay(100);
  3824  0FA8  3000               	movlw	0
  3825  0FA9  1683               	bsf	status, 5	;RP0=1, select bank1
  3826  0FAA  1303               	bcf	status, 6	;RP1=0, select bank1
  3827  0FAB  00A3               	movwf	(?_delay+3)^080h
  3828  0FAC  3000               	movlw	0
  3829  0FAD  00A2               	movwf	(?_delay+2)^080h
  3830  0FAE  3000               	movlw	0
  3831  0FAF  00A1               	movwf	(?_delay+1)^080h
  3832  0FB0  3064               	movlw	064h
  3833  0FB1  00A0               	movwf	(?_delay)^080h
  3834                           
  3835  0FB2  120A  158A  245E   	fcall	_delay
              120A  158A         
  3836                           	line	174
  3837                           	
  3838  0FB7                     l4006:	
  3839                           ;PR24.c: 174: GO=1;
  3840  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  3841  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  3842  0FB9  151F               	bsf	(250/8),(250)&7
  3843                           	line	175
  3844                           ;PR24.c: 175: while(GO==1);
  3845  0FBA  2FBB               	goto	l655
  3846                           	
  3847  0FBB                     l656:	
  3848                           	
  3849  0FBB                     l655:	
  3850  0FBB  191F               	btfsc	(250/8),(250)&7
  3851  0FBC  2FBE               	goto	u4161
  3852  0FBD  2FBF               	goto	u4160
  3853  0FBE                     u4161:
  3854  0FBE  2FBB               	goto	l655
  3855  0FBF                     u4160:
  3856  0FBF  2FC0               	goto	l4008
  3857                           	
  3858  0FC0                     l657:	
  3859                           	line	177
  3860                           	
  3861  0FC0                     l4008:	
  3862                           ;PR24.c: 177: if(an_sel == 0 || an_sel == 1) return ADRESH;
  3863  0FC0  1683               	bsf	status, 5	;RP0=1, select bank1
  3864  0FC1  1303               	bcf	status, 6	;RP1=0, select bank1
  3865  0FC2  084C               	movf	(ai_read@an_sel)^080h,w
  3866  0FC3  1D03               	skipz
  3867  0FC4  2FC6               	goto	u4170
  3868  0FC5  2FCD               	goto	l4012
  3869  0FC6                     u4170:
  3870                           	
  3871  0FC6                     l4010:	
  3872  0FC6  084C               	movf	(ai_read@an_sel)^080h,w
  3873  0FC7  3A01               	xorlw	01h
  3874  0FC8  1D03               	skipz
  3875  0FC9  2FCB               	goto	u4181
  3876  0FCA  2FCC               	goto	u4180
  3877  0FCB                     u4181:
  3878  0FCB  2FD3               	goto	l4018
  3879  0FCC                     u4180:
  3880  0FCC  2FCD               	goto	l4012
  3881                           	
  3882  0FCD                     l660:	
  3883                           	
  3884  0FCD                     l4012:	
  3885  0FCD  1283               	bcf	status, 5	;RP0=0, select bank0
  3886  0FCE  1303               	bcf	status, 6	;RP1=0, select bank0
  3887  0FCF  081E               	movf	(30),w	;volatile
  3888  0FD0  2FFF               	goto	l661
  3889                           	
  3890  0FD1                     l4014:	
  3891  0FD1  2FFF               	goto	l661
  3892                           	
  3893  0FD2                     l4016:	
  3894  0FD2  2FFF               	goto	l661
  3895                           	line	178
  3896                           	
  3897  0FD3                     l658:	
  3898                           	
  3899  0FD3                     l4018:	
  3900                           ;PR24.c: 178: else return ADRESH * 100 / 255;
  3901  0FD3  30FF               	movlw	low(0FFh)
  3902  0FD4  1683               	bsf	status, 5	;RP0=1, select bank1
  3903  0FD5  1303               	bcf	status, 6	;RP1=0, select bank1
  3904  0FD6  00A6               	movwf	(?___awdiv)^080h
  3905  0FD7  3000               	movlw	high(0FFh)
  3906  0FD8  00A7               	movwf	((?___awdiv)^080h)+1
  3907  0FD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3908  0FDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3909  0FDB  081E               	movf	(30),w	;volatile
  3910  0FDC  1683               	bsf	status, 5	;RP0=1, select bank1
  3911  0FDD  1303               	bcf	status, 6	;RP1=0, select bank1
  3912  0FDE  00CA               	movwf	(??_ai_read+0)^080h+0
  3913  0FDF  01CB               	clrf	(??_ai_read+0)^080h+0+1
  3914  0FE0  084A               	movf	0+(??_ai_read+0)^080h+0,w
  3915  0FE1  00A0               	movwf	(?___wmul)^080h
  3916  0FE2  084B               	movf	1+(??_ai_read+0)^080h+0,w
  3917  0FE3  00A1               	movwf	(?___wmul+1)^080h
  3918  0FE4  3064               	movlw	low(064h)
  3919  0FE5  00A2               	movwf	0+(?___wmul)^080h+02h
  3920  0FE6  3000               	movlw	high(064h)
  3921  0FE7  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  3922  0FE8  120A  158A  23D2   	fcall	___wmul
              120A  158A         
  3923  0FED  1683               	bsf	status, 5	;RP0=1, select bank1
  3924  0FEE  1303               	bcf	status, 6	;RP1=0, select bank1
  3925  0FEF  0821               	movf	(1+(?___wmul))^080h,w
  3926  0FF0  01A9               	clrf	1+(?___awdiv)^080h+02h
  3927  0FF1  07A9               	addwf	1+(?___awdiv)^080h+02h
  3928  0FF2  0820               	movf	(0+(?___wmul))^080h,w
  3929  0FF3  01A8               	clrf	0+(?___awdiv)^080h+02h
  3930  0FF4  07A8               	addwf	0+(?___awdiv)^080h+02h
  3931                           
  3932  0FF5  120A  158A  266A   	fcall	___awdiv
              120A  158A         
  3933  0FFA  1683               	bsf	status, 5	;RP0=1, select bank1
  3934  0FFB  1303               	bcf	status, 6	;RP1=0, select bank1
  3935  0FFC  0826               	movf	(0+(?___awdiv))^080h,w
  3936  0FFD  2FFF               	goto	l661
  3937                           	
  3938  0FFE                     l4020:	
  3939  0FFE  2FFF               	goto	l661
  3940                           	
  3941  0FFF                     l662:	
  3942                           	line	179
  3943                           	
  3944  0FFF                     l661:	
  3945  0FFF  0008               	return
  3946                           	opt stack 0
  3947                           GLOBAL	__end_of_ai_read
  3948  1000                     	__end_of_ai_read:
  3949 ;; =============== function _ai_read ends ============
  3950                           
  3951                           	signat	_ai_read,4217
  3952                           	global	___lldiv
  3953                           psect	text590,local,class=CODE,delta=2
  3954                           global __ptext590
  3955  0D84                     __ptext590:
  3956                           
  3957 ;; *************** function ___lldiv *****************
  3958 ;; Defined at:
  3959 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  divisor         4   28[BANK1 ] unsigned long 
  3962 ;;  dividend        4   32[BANK1 ] unsigned long 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  quotient        4   37[BANK1 ] unsigned long 
  3965 ;;  counter         1   41[BANK1 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  4   28[BANK1 ] unsigned long 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       8       0       0
  3976 ;;      Locals:         0       0       5       0       0
  3977 ;;      Temps:          0       0       1       0       0
  3978 ;;      Totals:         0       0      14       0       0
  3979 ;;Total ram usage:       14 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    3
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;;		_send_dec
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           psect	text590
  3990                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3991                           	line	5
  3992                           	global	__size_of___lldiv
  3993  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3994                           	
  3995  0D84                     ___lldiv:	
  3996                           	opt	stack 3
  3997                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3998                           	line	9
  3999                           	
  4000  0D84                     l3850:	
  4001  0D84  3000               	movlw	0
  4002  0D85  1683               	bsf	status, 5	;RP0=1, select bank1
  4003  0D86  1303               	bcf	status, 6	;RP1=0, select bank1
  4004  0D87  00C8               	movwf	(___lldiv@quotient+3)^080h
  4005  0D88  3000               	movlw	0
  4006  0D89  00C7               	movwf	(___lldiv@quotient+2)^080h
  4007  0D8A  3000               	movlw	0
  4008  0D8B  00C6               	movwf	(___lldiv@quotient+1)^080h
  4009  0D8C  3000               	movlw	0
  4010  0D8D  00C5               	movwf	(___lldiv@quotient)^080h
  4011                           
  4012                           	line	10
  4013  0D8E  083F               	movf	(___lldiv@divisor+3)^080h,w
  4014  0D8F  043E               	iorwf	(___lldiv@divisor+2)^080h,w
  4015  0D90  043D               	iorwf	(___lldiv@divisor+1)^080h,w
  4016  0D91  043C               	iorwf	(___lldiv@divisor)^080h,w
  4017  0D92  1903               	skipnz
  4018  0D93  2D95               	goto	u3741
  4019  0D94  2D96               	goto	u3740
  4020  0D95                     u3741:
  4021  0D95  2DEA               	goto	l3870
  4022  0D96                     u3740:
  4023                           	line	11
  4024                           	
  4025  0D96                     l3852:	
  4026  0D96  01C9               	clrf	(___lldiv@counter)^080h
  4027  0D97  1403               	bsf	status,0
  4028  0D98  0DC9               	rlf	(___lldiv@counter)^080h,f
  4029                           	line	12
  4030  0D99  2DA8               	goto	l3856
  4031                           	
  4032  0D9A                     l1578:	
  4033                           	line	13
  4034                           	
  4035  0D9A                     l3854:	
  4036  0D9A  3001               	movlw	01h
  4037  0D9B  00C4               	movwf	(??___lldiv+0)^080h+0
  4038  0D9C                     u3755:
  4039  0D9C  1003               	clrc
  4040  0D9D  0DBC               	rlf	(___lldiv@divisor)^080h,f
  4041  0D9E  0DBD               	rlf	(___lldiv@divisor+1)^080h,f
  4042  0D9F  0DBE               	rlf	(___lldiv@divisor+2)^080h,f
  4043  0DA0  0DBF               	rlf	(___lldiv@divisor+3)^080h,f
  4044  0DA1  0BC4               	decfsz	(??___lldiv+0)^080h+0
  4045  0DA2  2D9C               	goto	u3755
  4046                           	line	14
  4047  0DA3  3001               	movlw	(01h)
  4048  0DA4  00C4               	movwf	(??___lldiv+0)^080h+0
  4049  0DA5  0844               	movf	(??___lldiv+0)^080h+0,w
  4050  0DA6  07C9               	addwf	(___lldiv@counter)^080h,f
  4051  0DA7  2DA8               	goto	l3856
  4052                           	line	15
  4053                           	
  4054  0DA8                     l1577:	
  4055                           	line	12
  4056                           	
  4057  0DA8                     l3856:	
  4058  0DA8  1FBF               	btfss	(___lldiv@divisor+3)^080h,(31)&7
  4059  0DA9  2DAB               	goto	u3761
  4060  0DAA  2DAC               	goto	u3760
  4061  0DAB                     u3761:
  4062  0DAB  2D9A               	goto	l3854
  4063  0DAC                     u3760:
  4064  0DAC  2DAE               	goto	l3858
  4065                           	
  4066  0DAD                     l1579:	
  4067  0DAD  2DAE               	goto	l3858
  4068                           	line	16
  4069                           	
  4070  0DAE                     l1580:	
  4071                           	line	17
  4072                           	
  4073  0DAE                     l3858:	
  4074  0DAE  3001               	movlw	01h
  4075  0DAF  00C4               	movwf	(??___lldiv+0)^080h+0
  4076  0DB0                     u3775:
  4077  0DB0  1003               	clrc
  4078  0DB1  0DC5               	rlf	(___lldiv@quotient)^080h,f
  4079  0DB2  0DC6               	rlf	(___lldiv@quotient+1)^080h,f
  4080  0DB3  0DC7               	rlf	(___lldiv@quotient+2)^080h,f
  4081  0DB4  0DC8               	rlf	(___lldiv@quotient+3)^080h,f
  4082  0DB5  0BC4               	decfsz	(??___lldiv+0)^080h+0
  4083  0DB6  2DB0               	goto	u3775
  4084                           	line	18
  4085                           	
  4086  0DB7                     l3860:	
  4087  0DB7  083F               	movf	(___lldiv@divisor+3)^080h,w
  4088  0DB8  0243               	subwf	(___lldiv@dividend+3)^080h,w
  4089  0DB9  1D03               	skipz
  4090  0DBA  2DC5               	goto	u3785
  4091  0DBB  083E               	movf	(___lldiv@divisor+2)^080h,w
  4092  0DBC  0242               	subwf	(___lldiv@dividend+2)^080h,w
  4093  0DBD  1D03               	skipz
  4094  0DBE  2DC5               	goto	u3785
  4095  0DBF  083D               	movf	(___lldiv@divisor+1)^080h,w
  4096  0DC0  0241               	subwf	(___lldiv@dividend+1)^080h,w
  4097  0DC1  1D03               	skipz
  4098  0DC2  2DC5               	goto	u3785
  4099  0DC3  083C               	movf	(___lldiv@divisor)^080h,w
  4100  0DC4  0240               	subwf	(___lldiv@dividend)^080h,w
  4101  0DC5                     u3785:
  4102  0DC5  1C03               	skipc
  4103  0DC6  2DC8               	goto	u3781
  4104  0DC7  2DC9               	goto	u3780
  4105  0DC8                     u3781:
  4106  0DC8  2DD9               	goto	l3866
  4107  0DC9                     u3780:
  4108                           	line	19
  4109                           	
  4110  0DC9                     l3862:	
  4111  0DC9  083C               	movf	(___lldiv@divisor)^080h,w
  4112  0DCA  02C0               	subwf	(___lldiv@dividend)^080h,f
  4113  0DCB  083D               	movf	(___lldiv@divisor+1)^080h,w
  4114  0DCC  1C03               	skipc
  4115  0DCD  0F3D               	incfsz	(___lldiv@divisor+1)^080h,w
  4116  0DCE  02C1               	subwf	(___lldiv@dividend+1)^080h,f
  4117  0DCF  083E               	movf	(___lldiv@divisor+2)^080h,w
  4118  0DD0  1C03               	skipc
  4119  0DD1  0F3E               	incfsz	(___lldiv@divisor+2)^080h,w
  4120  0DD2  02C2               	subwf	(___lldiv@dividend+2)^080h,f
  4121  0DD3  083F               	movf	(___lldiv@divisor+3)^080h,w
  4122  0DD4  1C03               	skipc
  4123  0DD5  0F3F               	incfsz	(___lldiv@divisor+3)^080h,w
  4124  0DD6  02C3               	subwf	(___lldiv@dividend+3)^080h,f
  4125                           	line	20
  4126                           	
  4127  0DD7                     l3864:	
  4128  0DD7  1445               	bsf	(___lldiv@quotient)^080h+(0/8),(0)&7
  4129  0DD8  2DD9               	goto	l3866
  4130                           	line	21
  4131                           	
  4132  0DD9                     l1581:	
  4133                           	line	22
  4134                           	
  4135  0DD9                     l3866:	
  4136  0DD9  3001               	movlw	01h
  4137  0DDA                     u3795:
  4138  0DDA  1003               	clrc
  4139  0DDB  0CBF               	rrf	(___lldiv@divisor+3)^080h,f
  4140  0DDC  0CBE               	rrf	(___lldiv@divisor+2)^080h,f
  4141  0DDD  0CBD               	rrf	(___lldiv@divisor+1)^080h,f
  4142  0DDE  0CBC               	rrf	(___lldiv@divisor)^080h,f
  4143  0DDF  3EFF               	addlw	-1
  4144  0DE0  1D03               	skipz
  4145  0DE1  2DDA               	goto	u3795
  4146                           
  4147                           	line	23
  4148                           	
  4149  0DE2                     l3868:	
  4150  0DE2  3001               	movlw	low(01h)
  4151  0DE3  02C9               	subwf	(___lldiv@counter)^080h,f
  4152  0DE4  1D03               	btfss	status,2
  4153  0DE5  2DE7               	goto	u3801
  4154  0DE6  2DE8               	goto	u3800
  4155  0DE7                     u3801:
  4156  0DE7  2DAE               	goto	l3858
  4157  0DE8                     u3800:
  4158  0DE8  2DEA               	goto	l3870
  4159                           	
  4160  0DE9                     l1582:	
  4161  0DE9  2DEA               	goto	l3870
  4162                           	line	24
  4163                           	
  4164  0DEA                     l1576:	
  4165                           	line	25
  4166                           	
  4167  0DEA                     l3870:	
  4168  0DEA  0848               	movf	(___lldiv@quotient+3)^080h,w
  4169  0DEB  00BF               	movwf	(?___lldiv+3)^080h
  4170  0DEC  0847               	movf	(___lldiv@quotient+2)^080h,w
  4171  0DED  00BE               	movwf	(?___lldiv+2)^080h
  4172  0DEE  0846               	movf	(___lldiv@quotient+1)^080h,w
  4173  0DEF  00BD               	movwf	(?___lldiv+1)^080h
  4174  0DF0  0845               	movf	(___lldiv@quotient)^080h,w
  4175  0DF1  00BC               	movwf	(?___lldiv)^080h
  4176                           
  4177  0DF2  2DF3               	goto	l1583
  4178                           	
  4179  0DF3                     l3872:	
  4180                           	line	26
  4181                           	
  4182  0DF3                     l1583:	
  4183  0DF3  0008               	return
  4184                           	opt stack 0
  4185                           GLOBAL	__end_of___lldiv
  4186  0DF4                     	__end_of___lldiv:
  4187 ;; =============== function ___lldiv ends ============
  4188                           
  4189                           	signat	___lldiv,8316
  4190                           	global	___llmod
  4191                           psect	text591,local,class=CODE,delta=2
  4192                           global __ptext591
  4193  0D26                     __ptext591:
  4194                           
  4195 ;; *************** function ___llmod *****************
  4196 ;; Defined at:
  4197 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\llmod.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  divisor         4    0[BANK1 ] unsigned long 
  4200 ;;  dividend        4    4[BANK1 ] unsigned long 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  counter         1    9[BANK1 ] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  4    0[BANK1 ] unsigned long 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4212 ;;      Params:         0       0       8       0       0
  4213 ;;      Locals:         0       0       1       0       0
  4214 ;;      Temps:          0       0       1       0       0
  4215 ;;      Totals:         0       0      10       0       0
  4216 ;;Total ram usage:       10 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    3
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_send_dec
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           psect	text591
  4226                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\llmod.c"
  4227                           	line	5
  4228                           	global	__size_of___llmod
  4229  005E                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  4230                           	
  4231  0D26                     ___llmod:	
  4232                           	opt	stack 3
  4233                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4234                           	line	8
  4235                           	
  4236  0D26                     l3830:	
  4237  0D26  1683               	bsf	status, 5	;RP0=1, select bank1
  4238  0D27  1303               	bcf	status, 6	;RP1=0, select bank1
  4239  0D28  0823               	movf	(___llmod@divisor+3)^080h,w
  4240  0D29  0422               	iorwf	(___llmod@divisor+2)^080h,w
  4241  0D2A  0421               	iorwf	(___llmod@divisor+1)^080h,w
  4242  0D2B  0420               	iorwf	(___llmod@divisor)^080h,w
  4243  0D2C  1903               	skipnz
  4244  0D2D  2D2F               	goto	u3681
  4245  0D2E  2D30               	goto	u3680
  4246  0D2F                     u3681:
  4247  0D2F  2D7A               	goto	l3846
  4248  0D30                     u3680:
  4249                           	line	9
  4250                           	
  4251  0D30                     l3832:	
  4252  0D30  01A9               	clrf	(___llmod@counter)^080h
  4253  0D31  1403               	bsf	status,0
  4254  0D32  0DA9               	rlf	(___llmod@counter)^080h,f
  4255                           	line	10
  4256  0D33  2D42               	goto	l3836
  4257                           	
  4258  0D34                     l1559:	
  4259                           	line	11
  4260                           	
  4261  0D34                     l3834:	
  4262  0D34  3001               	movlw	01h
  4263  0D35  00A8               	movwf	(??___llmod+0)^080h+0
  4264  0D36                     u3695:
  4265  0D36  1003               	clrc
  4266  0D37  0DA0               	rlf	(___llmod@divisor)^080h,f
  4267  0D38  0DA1               	rlf	(___llmod@divisor+1)^080h,f
  4268  0D39  0DA2               	rlf	(___llmod@divisor+2)^080h,f
  4269  0D3A  0DA3               	rlf	(___llmod@divisor+3)^080h,f
  4270  0D3B  0BA8               	decfsz	(??___llmod+0)^080h+0
  4271  0D3C  2D36               	goto	u3695
  4272                           	line	12
  4273  0D3D  3001               	movlw	(01h)
  4274  0D3E  00A8               	movwf	(??___llmod+0)^080h+0
  4275  0D3F  0828               	movf	(??___llmod+0)^080h+0,w
  4276  0D40  07A9               	addwf	(___llmod@counter)^080h,f
  4277  0D41  2D42               	goto	l3836
  4278                           	line	13
  4279                           	
  4280  0D42                     l1558:	
  4281                           	line	10
  4282                           	
  4283  0D42                     l3836:	
  4284  0D42  1FA3               	btfss	(___llmod@divisor+3)^080h,(31)&7
  4285  0D43  2D45               	goto	u3701
  4286  0D44  2D46               	goto	u3700
  4287  0D45                     u3701:
  4288  0D45  2D34               	goto	l3834
  4289  0D46                     u3700:
  4290  0D46  2D48               	goto	l3838
  4291                           	
  4292  0D47                     l1560:	
  4293  0D47  2D48               	goto	l3838
  4294                           	line	14
  4295                           	
  4296  0D48                     l1561:	
  4297                           	line	15
  4298                           	
  4299  0D48                     l3838:	
  4300  0D48  0823               	movf	(___llmod@divisor+3)^080h,w
  4301  0D49  0227               	subwf	(___llmod@dividend+3)^080h,w
  4302  0D4A  1D03               	skipz
  4303  0D4B  2D56               	goto	u3715
  4304  0D4C  0822               	movf	(___llmod@divisor+2)^080h,w
  4305  0D4D  0226               	subwf	(___llmod@dividend+2)^080h,w
  4306  0D4E  1D03               	skipz
  4307  0D4F  2D56               	goto	u3715
  4308  0D50  0821               	movf	(___llmod@divisor+1)^080h,w
  4309  0D51  0225               	subwf	(___llmod@dividend+1)^080h,w
  4310  0D52  1D03               	skipz
  4311  0D53  2D56               	goto	u3715
  4312  0D54  0820               	movf	(___llmod@divisor)^080h,w
  4313  0D55  0224               	subwf	(___llmod@dividend)^080h,w
  4314  0D56                     u3715:
  4315  0D56  1C03               	skipc
  4316  0D57  2D59               	goto	u3711
  4317  0D58  2D5A               	goto	u3710
  4318  0D59                     u3711:
  4319  0D59  2D69               	goto	l3842
  4320  0D5A                     u3710:
  4321                           	line	16
  4322                           	
  4323  0D5A                     l3840:	
  4324  0D5A  0820               	movf	(___llmod@divisor)^080h,w
  4325  0D5B  02A4               	subwf	(___llmod@dividend)^080h,f
  4326  0D5C  0821               	movf	(___llmod@divisor+1)^080h,w
  4327  0D5D  1C03               	skipc
  4328  0D5E  0F21               	incfsz	(___llmod@divisor+1)^080h,w
  4329  0D5F  02A5               	subwf	(___llmod@dividend+1)^080h,f
  4330  0D60  0822               	movf	(___llmod@divisor+2)^080h,w
  4331  0D61  1C03               	skipc
  4332  0D62  0F22               	incfsz	(___llmod@divisor+2)^080h,w
  4333  0D63  02A6               	subwf	(___llmod@dividend+2)^080h,f
  4334  0D64  0823               	movf	(___llmod@divisor+3)^080h,w
  4335  0D65  1C03               	skipc
  4336  0D66  0F23               	incfsz	(___llmod@divisor+3)^080h,w
  4337  0D67  02A7               	subwf	(___llmod@dividend+3)^080h,f
  4338  0D68  2D69               	goto	l3842
  4339                           	
  4340  0D69                     l1562:	
  4341                           	line	17
  4342                           	
  4343  0D69                     l3842:	
  4344  0D69  3001               	movlw	01h
  4345  0D6A                     u3725:
  4346  0D6A  1003               	clrc
  4347  0D6B  0CA3               	rrf	(___llmod@divisor+3)^080h,f
  4348  0D6C  0CA2               	rrf	(___llmod@divisor+2)^080h,f
  4349  0D6D  0CA1               	rrf	(___llmod@divisor+1)^080h,f
  4350  0D6E  0CA0               	rrf	(___llmod@divisor)^080h,f
  4351  0D6F  3EFF               	addlw	-1
  4352  0D70  1D03               	skipz
  4353  0D71  2D6A               	goto	u3725
  4354                           
  4355                           	line	18
  4356                           	
  4357  0D72                     l3844:	
  4358  0D72  3001               	movlw	low(01h)
  4359  0D73  02A9               	subwf	(___llmod@counter)^080h,f
  4360  0D74  1D03               	btfss	status,2
  4361  0D75  2D77               	goto	u3731
  4362  0D76  2D78               	goto	u3730
  4363  0D77                     u3731:
  4364  0D77  2D48               	goto	l3838
  4365  0D78                     u3730:
  4366  0D78  2D7A               	goto	l3846
  4367                           	
  4368  0D79                     l1563:	
  4369  0D79  2D7A               	goto	l3846
  4370                           	line	19
  4371                           	
  4372  0D7A                     l1557:	
  4373                           	line	20
  4374                           	
  4375  0D7A                     l3846:	
  4376  0D7A  0827               	movf	(___llmod@dividend+3)^080h,w
  4377  0D7B  00A3               	movwf	(?___llmod+3)^080h
  4378  0D7C  0826               	movf	(___llmod@dividend+2)^080h,w
  4379  0D7D  00A2               	movwf	(?___llmod+2)^080h
  4380  0D7E  0825               	movf	(___llmod@dividend+1)^080h,w
  4381  0D7F  00A1               	movwf	(?___llmod+1)^080h
  4382  0D80  0824               	movf	(___llmod@dividend)^080h,w
  4383  0D81  00A0               	movwf	(?___llmod)^080h
  4384                           
  4385  0D82  2D83               	goto	l1564
  4386                           	
  4387  0D83                     l3848:	
  4388                           	line	21
  4389                           	
  4390  0D83                     l1564:	
  4391  0D83  0008               	return
  4392                           	opt stack 0
  4393                           GLOBAL	__end_of___llmod
  4394  0D84                     	__end_of___llmod:
  4395 ;; =============== function ___llmod ends ============
  4396                           
  4397                           	signat	___llmod,8316
  4398                           	global	___awdiv
  4399                           psect	text592,local,class=CODE,delta=2
  4400                           global __ptext592
  4401  0E6A                     __ptext592:
  4402                           
  4403 ;; *************** function ___awdiv *****************
  4404 ;; Defined at:
  4405 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  divisor         2    6[BANK1 ] int 
  4408 ;;  dividend        2    8[BANK1 ] int 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  quotient        2   13[BANK1 ] int 
  4411 ;;  sign            1   12[BANK1 ] unsigned char 
  4412 ;;  counter         1   11[BANK1 ] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  2    6[BANK1 ] int 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       4       0       0
  4423 ;;      Locals:         0       0       4       0       0
  4424 ;;      Temps:          0       0       1       0       0
  4425 ;;      Totals:         0       0       9       0       0
  4426 ;;Total ram usage:        9 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    3
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_ai_read
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           psect	text592
  4436                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4437                           	line	5
  4438                           	global	__size_of___awdiv
  4439  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4440                           	
  4441  0E6A                     ___awdiv:	
  4442                           	opt	stack 3
  4443                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4444                           	line	9
  4445                           	
  4446  0E6A                     l3790:	
  4447  0E6A  1683               	bsf	status, 5	;RP0=1, select bank1
  4448  0E6B  1303               	bcf	status, 6	;RP1=0, select bank1
  4449  0E6C  01AC               	clrf	(___awdiv@sign)^080h
  4450                           	line	10
  4451  0E6D  1FA7               	btfss	(___awdiv@divisor+1)^080h,7
  4452  0E6E  2E70               	goto	u3581
  4453  0E6F  2E71               	goto	u3580
  4454  0E70                     u3581:
  4455  0E70  2E7A               	goto	l3794
  4456  0E71                     u3580:
  4457                           	line	11
  4458                           	
  4459  0E71                     l3792:	
  4460  0E71  09A6               	comf	(___awdiv@divisor)^080h,f
  4461  0E72  09A7               	comf	(___awdiv@divisor+1)^080h,f
  4462  0E73  0AA6               	incf	(___awdiv@divisor)^080h,f
  4463  0E74  1903               	skipnz
  4464  0E75  0AA7               	incf	(___awdiv@divisor+1)^080h,f
  4465                           	line	12
  4466  0E76  01AC               	clrf	(___awdiv@sign)^080h
  4467  0E77  1403               	bsf	status,0
  4468  0E78  0DAC               	rlf	(___awdiv@sign)^080h,f
  4469  0E79  2E7A               	goto	l3794
  4470                           	line	13
  4471                           	
  4472  0E7A                     l1544:	
  4473                           	line	14
  4474                           	
  4475  0E7A                     l3794:	
  4476  0E7A  1FA9               	btfss	(___awdiv@dividend+1)^080h,7
  4477  0E7B  2E7D               	goto	u3591
  4478  0E7C  2E7E               	goto	u3590
  4479  0E7D                     u3591:
  4480  0E7D  2E88               	goto	l3800
  4481  0E7E                     u3590:
  4482                           	line	15
  4483                           	
  4484  0E7E                     l3796:	
  4485  0E7E  09A8               	comf	(___awdiv@dividend)^080h,f
  4486  0E7F  09A9               	comf	(___awdiv@dividend+1)^080h,f
  4487  0E80  0AA8               	incf	(___awdiv@dividend)^080h,f
  4488  0E81  1903               	skipnz
  4489  0E82  0AA9               	incf	(___awdiv@dividend+1)^080h,f
  4490                           	line	16
  4491                           	
  4492  0E83                     l3798:	
  4493  0E83  3001               	movlw	(01h)
  4494  0E84  00AA               	movwf	(??___awdiv+0)^080h+0
  4495  0E85  082A               	movf	(??___awdiv+0)^080h+0,w
  4496  0E86  06AC               	xorwf	(___awdiv@sign)^080h,f
  4497  0E87  2E88               	goto	l3800
  4498                           	line	17
  4499                           	
  4500  0E88                     l1545:	
  4501                           	line	18
  4502                           	
  4503  0E88                     l3800:	
  4504  0E88  01AD               	clrf	(___awdiv@quotient)^080h
  4505  0E89  01AE               	clrf	(___awdiv@quotient+1)^080h
  4506                           	line	19
  4507                           	
  4508  0E8A                     l3802:	
  4509  0E8A  0827               	movf	(___awdiv@divisor+1)^080h,w
  4510  0E8B  0426               	iorwf	(___awdiv@divisor)^080h,w
  4511  0E8C  1903               	skipnz
  4512  0E8D  2E8F               	goto	u3601
  4513  0E8E  2E90               	goto	u3600
  4514  0E8F                     u3601:
  4515  0E8F  2ECE               	goto	l3822
  4516  0E90                     u3600:
  4517                           	line	20
  4518                           	
  4519  0E90                     l3804:	
  4520  0E90  01AB               	clrf	(___awdiv@counter)^080h
  4521  0E91  1403               	bsf	status,0
  4522  0E92  0DAB               	rlf	(___awdiv@counter)^080h,f
  4523                           	line	21
  4524  0E93  2EA0               	goto	l3810
  4525                           	
  4526  0E94                     l1548:	
  4527                           	line	22
  4528                           	
  4529  0E94                     l3806:	
  4530  0E94  3001               	movlw	01h
  4531                           	
  4532  0E95                     u3615:
  4533  0E95  1003               	clrc
  4534  0E96  0DA6               	rlf	(___awdiv@divisor)^080h,f
  4535  0E97  0DA7               	rlf	(___awdiv@divisor+1)^080h,f
  4536  0E98  3EFF               	addlw	-1
  4537  0E99  1D03               	skipz
  4538  0E9A  2E95               	goto	u3615
  4539                           	line	23
  4540                           	
  4541  0E9B                     l3808:	
  4542  0E9B  3001               	movlw	(01h)
  4543  0E9C  00AA               	movwf	(??___awdiv+0)^080h+0
  4544  0E9D  082A               	movf	(??___awdiv+0)^080h+0,w
  4545  0E9E  07AB               	addwf	(___awdiv@counter)^080h,f
  4546  0E9F  2EA0               	goto	l3810
  4547                           	line	24
  4548                           	
  4549  0EA0                     l1547:	
  4550                           	line	21
  4551                           	
  4552  0EA0                     l3810:	
  4553  0EA0  1FA7               	btfss	(___awdiv@divisor+1)^080h,(15)&7
  4554  0EA1  2EA3               	goto	u3621
  4555  0EA2  2EA4               	goto	u3620
  4556  0EA3                     u3621:
  4557  0EA3  2E94               	goto	l3806
  4558  0EA4                     u3620:
  4559  0EA4  2EA6               	goto	l3812
  4560                           	
  4561  0EA5                     l1549:	
  4562  0EA5  2EA6               	goto	l3812
  4563                           	line	25
  4564                           	
  4565  0EA6                     l1550:	
  4566                           	line	26
  4567                           	
  4568  0EA6                     l3812:	
  4569  0EA6  3001               	movlw	01h
  4570                           	
  4571  0EA7                     u3635:
  4572  0EA7  1003               	clrc
  4573  0EA8  0DAD               	rlf	(___awdiv@quotient)^080h,f
  4574  0EA9  0DAE               	rlf	(___awdiv@quotient+1)^080h,f
  4575  0EAA  3EFF               	addlw	-1
  4576  0EAB  1D03               	skipz
  4577  0EAC  2EA7               	goto	u3635
  4578                           	line	27
  4579  0EAD  0827               	movf	(___awdiv@divisor+1)^080h,w
  4580  0EAE  0229               	subwf	(___awdiv@dividend+1)^080h,w
  4581  0EAF  1D03               	skipz
  4582  0EB0  2EB3               	goto	u3645
  4583  0EB1  0826               	movf	(___awdiv@divisor)^080h,w
  4584  0EB2  0228               	subwf	(___awdiv@dividend)^080h,w
  4585  0EB3                     u3645:
  4586  0EB3  1C03               	skipc
  4587  0EB4  2EB6               	goto	u3641
  4588  0EB5  2EB7               	goto	u3640
  4589  0EB6                     u3641:
  4590  0EB6  2EBF               	goto	l3818
  4591  0EB7                     u3640:
  4592                           	line	28
  4593                           	
  4594  0EB7                     l3814:	
  4595  0EB7  0826               	movf	(___awdiv@divisor)^080h,w
  4596  0EB8  02A8               	subwf	(___awdiv@dividend)^080h,f
  4597  0EB9  0827               	movf	(___awdiv@divisor+1)^080h,w
  4598  0EBA  1C03               	skipc
  4599  0EBB  03A9               	decf	(___awdiv@dividend+1)^080h,f
  4600  0EBC  02A9               	subwf	(___awdiv@dividend+1)^080h,f
  4601                           	line	29
  4602                           	
  4603  0EBD                     l3816:	
  4604  0EBD  142D               	bsf	(___awdiv@quotient)^080h+(0/8),(0)&7
  4605  0EBE  2EBF               	goto	l3818
  4606                           	line	30
  4607                           	
  4608  0EBF                     l1551:	
  4609                           	line	31
  4610                           	
  4611  0EBF                     l3818:	
  4612  0EBF  3001               	movlw	01h
  4613                           	
  4614  0EC0                     u3655:
  4615  0EC0  1003               	clrc
  4616  0EC1  0CA7               	rrf	(___awdiv@divisor+1)^080h,f
  4617  0EC2  0CA6               	rrf	(___awdiv@divisor)^080h,f
  4618  0EC3  3EFF               	addlw	-1
  4619  0EC4  1D03               	skipz
  4620  0EC5  2EC0               	goto	u3655
  4621                           	line	32
  4622                           	
  4623  0EC6                     l3820:	
  4624  0EC6  3001               	movlw	low(01h)
  4625  0EC7  02AB               	subwf	(___awdiv@counter)^080h,f
  4626  0EC8  1D03               	btfss	status,2
  4627  0EC9  2ECB               	goto	u3661
  4628  0ECA  2ECC               	goto	u3660
  4629  0ECB                     u3661:
  4630  0ECB  2EA6               	goto	l3812
  4631  0ECC                     u3660:
  4632  0ECC  2ECE               	goto	l3822
  4633                           	
  4634  0ECD                     l1552:	
  4635  0ECD  2ECE               	goto	l3822
  4636                           	line	33
  4637                           	
  4638  0ECE                     l1546:	
  4639                           	line	34
  4640                           	
  4641  0ECE                     l3822:	
  4642  0ECE  082C               	movf	(___awdiv@sign)^080h,w
  4643  0ECF  1D03               	skipz
  4644  0ED0  2ED2               	goto	u3670
  4645  0ED1  2ED8               	goto	l3826
  4646  0ED2                     u3670:
  4647                           	line	35
  4648                           	
  4649  0ED2                     l3824:	
  4650  0ED2  09AD               	comf	(___awdiv@quotient)^080h,f
  4651  0ED3  09AE               	comf	(___awdiv@quotient+1)^080h,f
  4652  0ED4  0AAD               	incf	(___awdiv@quotient)^080h,f
  4653  0ED5  1903               	skipnz
  4654  0ED6  0AAE               	incf	(___awdiv@quotient+1)^080h,f
  4655  0ED7  2ED8               	goto	l3826
  4656                           	
  4657  0ED8                     l1553:	
  4658                           	line	36
  4659                           	
  4660  0ED8                     l3826:	
  4661  0ED8  082E               	movf	(___awdiv@quotient+1)^080h,w
  4662  0ED9  01A7               	clrf	(?___awdiv+1)^080h
  4663  0EDA  07A7               	addwf	(?___awdiv+1)^080h
  4664  0EDB  082D               	movf	(___awdiv@quotient)^080h,w
  4665  0EDC  01A6               	clrf	(?___awdiv)^080h
  4666  0EDD  07A6               	addwf	(?___awdiv)^080h
  4667                           
  4668  0EDE  2EDF               	goto	l1554
  4669                           	
  4670  0EDF                     l3828:	
  4671                           	line	37
  4672                           	
  4673  0EDF                     l1554:	
  4674  0EDF  0008               	return
  4675                           	opt stack 0
  4676                           GLOBAL	__end_of___awdiv
  4677  0EE0                     	__end_of___awdiv:
  4678 ;; =============== function ___awdiv ends ============
  4679                           
  4680                           	signat	___awdiv,8314
  4681                           	global	___lmul
  4682                           psect	text593,local,class=CODE,delta=2
  4683                           global __ptext593
  4684  0CDA                     __ptext593:
  4685                           
  4686 ;; *************** function ___lmul *****************
  4687 ;; Defined at:
  4688 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  multiplier      4   15[BANK1 ] unsigned long 
  4691 ;;  multiplicand    4   19[BANK1 ] unsigned long 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  product         4   24[BANK1 ] unsigned long 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  4   15[BANK1 ] unsigned long 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         0       0       8       0       0
  4704 ;;      Locals:         0       0       4       0       0
  4705 ;;      Temps:          0       0       1       0       0
  4706 ;;      Totals:         0       0      13       0       0
  4707 ;;Total ram usage:       13 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    3
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           psect	text593
  4717                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  4718                           	line	3
  4719                           	global	__size_of___lmul
  4720  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4721                           	
  4722  0CDA                     ___lmul:	
  4723                           	opt	stack 4
  4724                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4725                           	line	4
  4726                           	
  4727  0CDA                     l3776:	
  4728  0CDA  3000               	movlw	0
  4729  0CDB  1683               	bsf	status, 5	;RP0=1, select bank1
  4730  0CDC  1303               	bcf	status, 6	;RP1=0, select bank1
  4731  0CDD  00BB               	movwf	(___lmul@product+3)^080h
  4732  0CDE  3000               	movlw	0
  4733  0CDF  00BA               	movwf	(___lmul@product+2)^080h
  4734  0CE0  3000               	movlw	0
  4735  0CE1  00B9               	movwf	(___lmul@product+1)^080h
  4736  0CE2  3000               	movlw	0
  4737  0CE3  00B8               	movwf	(___lmul@product)^080h
  4738                           
  4739  0CE4  2CE5               	goto	l3778
  4740                           	line	6
  4741                           	
  4742  0CE5                     l1479:	
  4743                           	line	7
  4744                           	
  4745  0CE5                     l3778:	
  4746  0CE5  1C2F               	btfss	(___lmul@multiplier)^080h,(0)&7
  4747  0CE6  2CE8               	goto	u3531
  4748  0CE7  2CE9               	goto	u3530
  4749  0CE8                     u3531:
  4750  0CE8  2D01               	goto	l3782
  4751  0CE9                     u3530:
  4752                           	line	8
  4753                           	
  4754  0CE9                     l3780:	
  4755  0CE9  0833               	movf	(___lmul@multiplicand)^080h,w
  4756  0CEA  07B8               	addwf	(___lmul@product)^080h,f
  4757  0CEB  0834               	movf	(___lmul@multiplicand+1)^080h,w
  4758  0CEC  1103               	clrz
  4759  0CED  1803               	skipnc
  4760  0CEE  3E01               	addlw	1
  4761  0CEF  1903               	skipnz
  4762  0CF0  2CF2               	goto	u3541
  4763  0CF1  07B9               	addwf	(___lmul@product+1)^080h,f
  4764  0CF2                     u3541:
  4765  0CF2  0835               	movf	(___lmul@multiplicand+2)^080h,w
  4766  0CF3  1103               	clrz
  4767  0CF4  1803               	skipnc
  4768  0CF5  3E01               	addlw	1
  4769  0CF6  1903               	skipnz
  4770  0CF7  2CF9               	goto	u3542
  4771  0CF8  07BA               	addwf	(___lmul@product+2)^080h,f
  4772  0CF9                     u3542:
  4773  0CF9  0836               	movf	(___lmul@multiplicand+3)^080h,w
  4774  0CFA  1103               	clrz
  4775  0CFB  1803               	skipnc
  4776  0CFC  3E01               	addlw	1
  4777  0CFD  1903               	skipnz
  4778  0CFE  2D00               	goto	u3543
  4779  0CFF  07BB               	addwf	(___lmul@product+3)^080h,f
  4780  0D00                     u3543:
  4781                           
  4782  0D00  2D01               	goto	l3782
  4783                           	
  4784  0D01                     l1480:	
  4785                           	line	9
  4786                           	
  4787  0D01                     l3782:	
  4788  0D01  3001               	movlw	01h
  4789  0D02  00B7               	movwf	(??___lmul+0)^080h+0
  4790  0D03                     u3555:
  4791  0D03  1003               	clrc
  4792  0D04  0DB3               	rlf	(___lmul@multiplicand)^080h,f
  4793  0D05  0DB4               	rlf	(___lmul@multiplicand+1)^080h,f
  4794  0D06  0DB5               	rlf	(___lmul@multiplicand+2)^080h,f
  4795  0D07  0DB6               	rlf	(___lmul@multiplicand+3)^080h,f
  4796  0D08  0BB7               	decfsz	(??___lmul+0)^080h+0
  4797  0D09  2D03               	goto	u3555
  4798                           	line	10
  4799                           	
  4800  0D0A                     l3784:	
  4801  0D0A  3001               	movlw	01h
  4802  0D0B                     u3565:
  4803  0D0B  1003               	clrc
  4804  0D0C  0CB2               	rrf	(___lmul@multiplier+3)^080h,f
  4805  0D0D  0CB1               	rrf	(___lmul@multiplier+2)^080h,f
  4806  0D0E  0CB0               	rrf	(___lmul@multiplier+1)^080h,f
  4807  0D0F  0CAF               	rrf	(___lmul@multiplier)^080h,f
  4808  0D10  3EFF               	addlw	-1
  4809  0D11  1D03               	skipz
  4810  0D12  2D0B               	goto	u3565
  4811                           
  4812                           	line	11
  4813  0D13  0832               	movf	(___lmul@multiplier+3)^080h,w
  4814  0D14  0431               	iorwf	(___lmul@multiplier+2)^080h,w
  4815  0D15  0430               	iorwf	(___lmul@multiplier+1)^080h,w
  4816  0D16  042F               	iorwf	(___lmul@multiplier)^080h,w
  4817  0D17  1D03               	skipz
  4818  0D18  2D1A               	goto	u3571
  4819  0D19  2D1B               	goto	u3570
  4820  0D1A                     u3571:
  4821  0D1A  2CE5               	goto	l3778
  4822  0D1B                     u3570:
  4823  0D1B  2D1C               	goto	l3786
  4824                           	
  4825  0D1C                     l1481:	
  4826                           	line	12
  4827                           	
  4828  0D1C                     l3786:	
  4829  0D1C  083B               	movf	(___lmul@product+3)^080h,w
  4830  0D1D  00B2               	movwf	(?___lmul+3)^080h
  4831  0D1E  083A               	movf	(___lmul@product+2)^080h,w
  4832  0D1F  00B1               	movwf	(?___lmul+2)^080h
  4833  0D20  0839               	movf	(___lmul@product+1)^080h,w
  4834  0D21  00B0               	movwf	(?___lmul+1)^080h
  4835  0D22  0838               	movf	(___lmul@product)^080h,w
  4836  0D23  00AF               	movwf	(?___lmul)^080h
  4837                           
  4838  0D24  2D25               	goto	l1482
  4839                           	
  4840  0D25                     l3788:	
  4841                           	line	13
  4842                           	
  4843  0D25                     l1482:	
  4844  0D25  0008               	return
  4845                           	opt stack 0
  4846                           GLOBAL	__end_of___lmul
  4847  0D26                     	__end_of___lmul:
  4848 ;; =============== function ___lmul ends ============
  4849                           
  4850                           	signat	___lmul,8316
  4851                           	global	___wmul
  4852                           psect	text594,local,class=CODE,delta=2
  4853                           global __ptext594
  4854  0BD2                     __ptext594:
  4855                           
  4856 ;; *************** function ___wmul *****************
  4857 ;; Defined at:
  4858 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  multiplier      2    0[BANK1 ] unsigned int 
  4861 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  product         2    4[BANK1 ] unsigned int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  2    0[BANK1 ] unsigned int 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       0       4       0       0
  4874 ;;      Locals:         0       0       2       0       0
  4875 ;;      Temps:          0       0       0       0       0
  4876 ;;      Totals:         0       0       6       0       0
  4877 ;;Total ram usage:        6 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    3
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_ai_read
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           psect	text594
  4887                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  4888                           	line	3
  4889                           	global	__size_of___wmul
  4890  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  4891                           	
  4892  0BD2                     ___wmul:	
  4893                           	opt	stack 3
  4894                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4895                           	line	4
  4896                           	
  4897  0BD2                     l3764:	
  4898  0BD2  1683               	bsf	status, 5	;RP0=1, select bank1
  4899  0BD3  1303               	bcf	status, 6	;RP1=0, select bank1
  4900  0BD4  01A4               	clrf	(___wmul@product)^080h
  4901  0BD5  01A5               	clrf	(___wmul@product+1)^080h
  4902  0BD6  2BD7               	goto	l3766
  4903                           	line	6
  4904                           	
  4905  0BD7                     l1404:	
  4906                           	line	7
  4907                           	
  4908  0BD7                     l3766:	
  4909  0BD7  1C20               	btfss	(___wmul@multiplier)^080h,(0)&7
  4910  0BD8  2BDA               	goto	u3491
  4911  0BD9  2BDB               	goto	u3490
  4912  0BDA                     u3491:
  4913  0BDA  2BE1               	goto	l1405
  4914  0BDB                     u3490:
  4915                           	line	8
  4916                           	
  4917  0BDB                     l3768:	
  4918  0BDB  0822               	movf	(___wmul@multiplicand)^080h,w
  4919  0BDC  07A4               	addwf	(___wmul@product)^080h,f
  4920  0BDD  1803               	skipnc
  4921  0BDE  0AA5               	incf	(___wmul@product+1)^080h,f
  4922  0BDF  0823               	movf	(___wmul@multiplicand+1)^080h,w
  4923  0BE0  07A5               	addwf	(___wmul@product+1)^080h,f
  4924                           	
  4925  0BE1                     l1405:	
  4926                           	line	9
  4927  0BE1  3001               	movlw	01h
  4928                           	
  4929  0BE2                     u3505:
  4930  0BE2  1003               	clrc
  4931  0BE3  0DA2               	rlf	(___wmul@multiplicand)^080h,f
  4932  0BE4  0DA3               	rlf	(___wmul@multiplicand+1)^080h,f
  4933  0BE5  3EFF               	addlw	-1
  4934  0BE6  1D03               	skipz
  4935  0BE7  2BE2               	goto	u3505
  4936                           	line	10
  4937                           	
  4938  0BE8                     l3770:	
  4939  0BE8  3001               	movlw	01h
  4940                           	
  4941  0BE9                     u3515:
  4942  0BE9  1003               	clrc
  4943  0BEA  0CA1               	rrf	(___wmul@multiplier+1)^080h,f
  4944  0BEB  0CA0               	rrf	(___wmul@multiplier)^080h,f
  4945  0BEC  3EFF               	addlw	-1
  4946  0BED  1D03               	skipz
  4947  0BEE  2BE9               	goto	u3515
  4948                           	line	11
  4949  0BEF  0821               	movf	((___wmul@multiplier+1)^080h),w
  4950  0BF0  0420               	iorwf	((___wmul@multiplier)^080h),w
  4951  0BF1  1D03               	skipz
  4952  0BF2  2BF4               	goto	u3521
  4953  0BF3  2BF5               	goto	u3520
  4954  0BF4                     u3521:
  4955  0BF4  2BD7               	goto	l3766
  4956  0BF5                     u3520:
  4957  0BF5  2BF6               	goto	l3772
  4958                           	
  4959  0BF6                     l1406:	
  4960                           	line	12
  4961                           	
  4962  0BF6                     l3772:	
  4963  0BF6  0825               	movf	(___wmul@product+1)^080h,w
  4964  0BF7  01A1               	clrf	(?___wmul+1)^080h
  4965  0BF8  07A1               	addwf	(?___wmul+1)^080h
  4966  0BF9  0824               	movf	(___wmul@product)^080h,w
  4967  0BFA  01A0               	clrf	(?___wmul)^080h
  4968  0BFB  07A0               	addwf	(?___wmul)^080h
  4969                           
  4970  0BFC  2BFD               	goto	l1407
  4971                           	
  4972  0BFD                     l3774:	
  4973                           	line	13
  4974                           	
  4975  0BFD                     l1407:	
  4976  0BFD  0008               	return
  4977                           	opt stack 0
  4978                           GLOBAL	__end_of___wmul
  4979  0BFE                     	__end_of___wmul:
  4980 ;; =============== function ___wmul ends ============
  4981                           
  4982                           	signat	___wmul,8314
  4983                           	global	_delay
  4984                           psect	text595,local,class=CODE,delta=2
  4985                           global __ptext595
  4986  0C5E                     __ptext595:
  4987                           
  4988 ;; *************** function _delay *****************
  4989 ;; Defined at:
  4990 ;;		line 211 in file "../../Source File/PR24.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  data            4    0[BANK1 ] unsigned long 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;		None               void
  4997 ;; Registers used:
  4998 ;;		wreg
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       0       4       0       0
  5005 ;;      Locals:         0       0       0       0       0
  5006 ;;      Temps:          0       0       4       0       0
  5007 ;;      Totals:         0       0       8       0       0
  5008 ;;Total ram usage:        8 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    3
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_ai_read
  5015 ;;		_e_pulse
  5016 ;;		_send_config
  5017 ;;		_lcd_clr
  5018 ;;		_lcd_goto
  5019 ;;		_send_char
  5020 ;;		_send_string
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           psect	text595
  5024                           	file	"../../Source File/PR24.c"
  5025                           	line	211
  5026                           	global	__size_of_delay
  5027  0032                     	__size_of_delay	equ	__end_of_delay-_delay
  5028                           	
  5029  0C5E                     _delay:	
  5030                           	opt	stack 1
  5031                           ; Regs used in _delay: [wreg]
  5032                           	line	212
  5033                           	
  5034  0C5E                     l3702:	
  5035                           ;PR24.c: 212: for( ; data > 0; data -= 1);
  5036  0C5E  1683               	bsf	status, 5	;RP0=1, select bank1
  5037  0C5F  1303               	bcf	status, 6	;RP1=0, select bank1
  5038  0C60  0823               	movf	(delay@data+3)^080h,w
  5039  0C61  0422               	iorwf	(delay@data+2)^080h,w
  5040  0C62  0421               	iorwf	(delay@data+1)^080h,w
  5041  0C63  0420               	iorwf	(delay@data)^080h,w
  5042  0C64  1D03               	skipz
  5043  0C65  2C67               	goto	u3381
  5044  0C66  2C68               	goto	u3380
  5045  0C67                     u3381:
  5046  0C67  2C6A               	goto	l3706
  5047  0C68                     u3380:
  5048  0C68  2C8F               	goto	l676
  5049                           	
  5050  0C69                     l3704:	
  5051  0C69  2C8F               	goto	l676
  5052                           	
  5053  0C6A                     l674:	
  5054                           	
  5055  0C6A                     l3706:	
  5056  0C6A  3001               	movlw	01h
  5057  0C6B  00A4               	movwf	((??_delay+0)^080h+0)
  5058  0C6C  3000               	movlw	0
  5059  0C6D  00A5               	movwf	((??_delay+0)^080h+0+1)
  5060  0C6E  3000               	movlw	0
  5061  0C6F  00A6               	movwf	((??_delay+0)^080h+0+2)
  5062  0C70  3000               	movlw	0
  5063  0C71  00A7               	movwf	((??_delay+0)^080h+0+3)
  5064  0C72  0824               	movf	0+(??_delay+0)^080h+0,w
  5065  0C73  02A0               	subwf	(delay@data)^080h,f
  5066  0C74  0825               	movf	1+(??_delay+0)^080h+0,w
  5067  0C75  1C03               	skipc
  5068  0C76  0F25               	incfsz	1+(??_delay+0)^080h+0,w
  5069  0C77  2C79               	goto	u3395
  5070  0C78  2C7A               	goto	u3396
  5071  0C79                     u3395:
  5072  0C79  02A1               	subwf	(delay@data+1)^080h,f
  5073  0C7A                     u3396:
  5074  0C7A  0826               	movf	2+(??_delay+0)^080h+0,w
  5075  0C7B  1C03               	skipc
  5076  0C7C  0F26               	incfsz	2+(??_delay+0)^080h+0,w
  5077  0C7D  2C7F               	goto	u3397
  5078  0C7E  2C80               	goto	u3398
  5079  0C7F                     u3397:
  5080  0C7F  02A2               	subwf	(delay@data+2)^080h,f
  5081  0C80                     u3398:
  5082  0C80  0827               	movf	3+(??_delay+0)^080h+0,w
  5083  0C81  1C03               	skipc
  5084  0C82  0F27               	incfsz	3+(??_delay+0)^080h+0,w
  5085  0C83  2C85               	goto	u3399
  5086  0C84  2C86               	goto	u3390
  5087  0C85                     u3399:
  5088  0C85  02A3               	subwf	(delay@data+3)^080h,f
  5089  0C86                     u3390:
  5090                           
  5091  0C86  0823               	movf	(delay@data+3)^080h,w
  5092  0C87  0422               	iorwf	(delay@data+2)^080h,w
  5093  0C88  0421               	iorwf	(delay@data+1)^080h,w
  5094  0C89  0420               	iorwf	(delay@data)^080h,w
  5095  0C8A  1D03               	skipz
  5096  0C8B  2C8D               	goto	u3401
  5097  0C8C  2C8E               	goto	u3400
  5098  0C8D                     u3401:
  5099  0C8D  2C6A               	goto	l3706
  5100  0C8E                     u3400:
  5101  0C8E  2C8F               	goto	l676
  5102                           	
  5103  0C8F                     l675:	
  5104                           	line	213
  5105                           	
  5106  0C8F                     l676:	
  5107  0C8F  0008               	return
  5108                           	opt stack 0
  5109                           GLOBAL	__end_of_delay
  5110  0C90                     	__end_of_delay:
  5111 ;; =============== function _delay ends ============
  5112                           
  5113                           	signat	_delay,4216
  5114                           	global	_isr
  5115                           psect	text596,local,class=CODE,delta=2
  5116                           global __ptext596
  5117  02B9                     __ptext596:
  5118                           
  5119 ;; *************** function _isr *****************
  5120 ;; Defined at:
  5121 ;;		line 410 in file "../../Source File/PR24.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  output          4   43[BANK0 ] long 
  5126 ;;  error_value     4   39[BANK0 ] long 
  5127 ;;  derivative      4   31[BANK0 ] long 
  5128 ;;  feedback_val    2   37[BANK0 ] int 
  5129 ;;  set_value       2   35[BANK0 ] int 
  5130 ;;  motor_direct    2   28[BANK0 ] int 
  5131 ;;  pwm_value       1   30[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       0       0       0       0
  5142 ;;      Locals:         0      19       0       0       0
  5143 ;;      Temps:          0      24       0       0       0
  5144 ;;      Totals:         0      43       0       0       0
  5145 ;;Total ram usage:       43 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    2
  5148 ;; This function calls:
  5149 ;;		i1_ai_read
  5150 ;;		i1___lmul
  5151 ;;		_motor_right
  5152 ;;		_motor_left
  5153 ;;		_motor_stop
  5154 ;; This function is called by:
  5155 ;;		Interrupt level 1
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           psect	text596
  5159                           	file	"../../Source File/PR24.c"
  5160                           	line	410
  5161                           	global	__size_of_isr
  5162  01C9                     	__size_of_isr	equ	__end_of_isr-_isr
  5163                           	
  5164  02B9                     _isr:	
  5165                           	opt	stack 1
  5166                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5167                           psect	intentry,class=CODE,delta=2
  5168                           global __pintentry
  5169  0004                     __pintentry:
  5170                           global interrupt_function
  5171  0004                     interrupt_function:
  5172                           	global saved_w
  5173  007E                     	saved_w	set	btemp+0
  5174  0004  00FE               	movwf	saved_w
  5175  0005  0E03               	swapf	status,w
  5176  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  5177  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  5178  0008  00B8               	movwf	(??_isr+20)
  5179  0009  0804               	movf	fsr0,w
  5180  000A  00B9               	movwf	(??_isr+21)
  5181  000B  080A               	movf	pclath,w
  5182  000C  00BA               	movwf	(??_isr+22)
  5183  000D  087F               	movf	btemp+1,w
  5184  000E  00BB               	movwf	(??_isr+23)
  5185  000F  120A  118A  2AB9   	ljmp	_isr
  5186                           psect	text596
  5187                           	line	411
  5188                           	
  5189  02B9                     i1l3720:	
  5190                           ;PR24.c: 411: signed int set_value = 0;
  5191  02B9  01C3               	clrf	(isr@set_value)
  5192  02BA  01C4               	clrf	(isr@set_value+1)
  5193                           	line	412
  5194                           ;PR24.c: 412: signed int feedback_value = 0;
  5195  02BB  01C5               	clrf	(isr@feedback_value)
  5196  02BC  01C6               	clrf	(isr@feedback_value+1)
  5197                           	line	413
  5198                           	
  5199  02BD                     i1l3722:	
  5200                           ;PR24.c: 413: signed long error_value = 0;
  5201  02BD  3000               	movlw	0
  5202  02BE  00CA               	movwf	(isr@error_value+3)
  5203  02BF  3000               	movlw	0
  5204  02C0  00C9               	movwf	(isr@error_value+2)
  5205  02C1  3000               	movlw	0
  5206  02C2  00C8               	movwf	(isr@error_value+1)
  5207  02C3  3000               	movlw	0
  5208  02C4  00C7               	movwf	(isr@error_value)
  5209                           
  5210                           	line	416
  5211                           	
  5212  02C5                     i1l3724:	
  5213                           ;PR24.c: 414: static signed long pre_error = 0;
  5214                           ;PR24.c: 415: static signed long integral = 0;
  5215                           ;PR24.c: 416: signed long derivative = 0;
  5216  02C5  3000               	movlw	0
  5217  02C6  00C2               	movwf	(isr@derivative+3)
  5218  02C7  3000               	movlw	0
  5219  02C8  00C1               	movwf	(isr@derivative+2)
  5220  02C9  3000               	movlw	0
  5221  02CA  00C0               	movwf	(isr@derivative+1)
  5222  02CB  3000               	movlw	0
  5223  02CC  00BF               	movwf	(isr@derivative)
  5224                           
  5225                           	line	417
  5226                           	
  5227  02CD                     i1l3726:	
  5228                           ;PR24.c: 417: signed long output = 0;
  5229  02CD  3000               	movlw	0
  5230  02CE  00CE               	movwf	(isr@output+3)
  5231  02CF  3000               	movlw	0
  5232  02D0  00CD               	movwf	(isr@output+2)
  5233  02D1  3000               	movlw	0
  5234  02D2  00CC               	movwf	(isr@output+1)
  5235  02D3  3000               	movlw	0
  5236  02D4  00CB               	movwf	(isr@output)
  5237                           
  5238                           	line	418
  5239                           	
  5240  02D5                     i1l3728:	
  5241                           ;PR24.c: 418: signed int motor_direction = 0;
  5242  02D5  01BC               	clrf	(isr@motor_direction)
  5243  02D6  01BD               	clrf	(isr@motor_direction+1)
  5244                           	line	421
  5245                           	
  5246  02D7                     i1l3730:	
  5247                           ;PR24.c: 421: unsigned char pwm_value=0;
  5248  02D7  01BE               	clrf	(isr@pwm_value)
  5249                           	line	423
  5250                           	
  5251  02D8                     i1l3732:	
  5252                           ;PR24.c: 423: if(TMR1IF == 1)
  5253  02D8  1C0C               	btfss	(96/8),(96)&7
  5254  02D9  2ADB               	goto	u341_21
  5255  02DA  2ADC               	goto	u341_20
  5256  02DB                     u341_21:
  5257  02DB  2C77               	goto	i1l785
  5258  02DC                     u341_20:
  5259                           	line	425
  5260                           	
  5261  02DC                     i1l3734:	
  5262                           ;PR24.c: 424: {
  5263                           ;PR24.c: 425: TMR1IF = 0;
  5264  02DC  100C               	bcf	(96/8),(96)&7
  5265                           	line	427
  5266                           	
  5267  02DD                     i1l3736:	
  5268                           ;PR24.c: 427: feedback_value = ai_read(1);
  5269  02DD  3001               	movlw	(01h)
  5270  02DE  120A  158A  26E0   	fcall	i1_ai_read
              120A  118A         
  5271  02E3  1283               	bcf	status, 5	;RP0=0, select bank0
  5272  02E4  1303               	bcf	status, 6	;RP1=0, select bank0
  5273  02E5  00A4               	movwf	(??_isr+0)+0
  5274  02E6  01A5               	clrf	(??_isr+0)+0+1
  5275  02E7  0824               	movf	0+(??_isr+0)+0,w
  5276  02E8  00C5               	movwf	(isr@feedback_value)
  5277  02E9  0825               	movf	1+(??_isr+0)+0,w
  5278  02EA  00C6               	movwf	(isr@feedback_value+1)
  5279                           	line	428
  5280                           ;PR24.c: 428: set_value = ai_read(0);
  5281  02EB  3000               	movlw	(0)
  5282  02EC  120A  158A  26E0   	fcall	i1_ai_read
              120A  118A         
  5283  02F1  1283               	bcf	status, 5	;RP0=0, select bank0
  5284  02F2  1303               	bcf	status, 6	;RP1=0, select bank0
  5285  02F3  00A4               	movwf	(??_isr+0)+0
  5286  02F4  01A5               	clrf	(??_isr+0)+0+1
  5287  02F5  0824               	movf	0+(??_isr+0)+0,w
  5288  02F6  00C3               	movwf	(isr@set_value)
  5289  02F7  0825               	movf	1+(??_isr+0)+0,w
  5290  02F8  00C4               	movwf	(isr@set_value+1)
  5291                           	line	430
  5292                           	
  5293  02F9                     i1l3738:	
  5294                           ;PR24.c: 430: error_value = set_value - feedback_value;
  5295  02F9  0945               	comf	(isr@feedback_value),w
  5296  02FA  00A4               	movwf	(??_isr+0)+0
  5297  02FB  0946               	comf	(isr@feedback_value+1),w
  5298  02FC  00A5               	movwf	((??_isr+0)+0+1)
  5299  02FD  0AA4               	incf	(??_isr+0)+0,f
  5300  02FE  1903               	skipnz
  5301  02FF  0AA5               	incf	((??_isr+0)+0+1),f
  5302  0300  0843               	movf	(isr@set_value),w
  5303  0301  0724               	addwf	0+(??_isr+0)+0,w
  5304  0302  00C7               	movwf	(isr@error_value)
  5305  0303  0844               	movf	(isr@set_value+1),w
  5306  0304  1803               	skipnc
  5307  0305  0A44               	incf	(isr@set_value+1),w
  5308  0306  0725               	addwf	1+(??_isr+0)+0,w
  5309  0307  00C8               	movwf	1+(isr@error_value)
  5310  0308  01C9               	clrf	(isr@error_value)+2
  5311  0309  1BC8               	btfsc	(isr@error_value)+1,7
  5312  030A  03C9               	decf	2+(isr@error_value),f
  5313  030B  0849               	movf	(isr@error_value)+2,w
  5314  030C  00CA               	movwf	3+(isr@error_value)
  5315                           	line	431
  5316                           	
  5317  030D                     i1l3740:	
  5318                           ;PR24.c: 431: integral = integral + error_value;
  5319  030D  084F               	movf	(isr@integral),w
  5320  030E  0747               	addwf	(isr@error_value),w
  5321  030F  00A4               	movwf	((??_isr+0)+0+0)
  5322  0310  3000               	movlw	0
  5323  0311  1803               	skipnc
  5324  0312  3001               	movlw	1
  5325  0313  0750               	addwf	(isr@integral+1),w
  5326  0314  01A6               	clrf	((??_isr+0)+0+2)
  5327  0315  1803               	skipnc
  5328  0316  0AA6               	incf	((??_isr+0)+0+2),f
  5329  0317  0748               	addwf	(isr@error_value+1),w
  5330  0318  00A5               	movwf	((??_isr+0)+0+1)
  5331  0319  1803               	skipnc
  5332  031A  0AA6               	incf	((??_isr+0)+0+2),f
  5333  031B  0851               	movf	(isr@integral+2),w
  5334  031C  0726               	addwf	((??_isr+0)+0+2),w
  5335  031D  01A7               	clrf	((??_isr+0)+0+3)
  5336  031E  1803               	skipnc
  5337  031F  0AA7               	incf	((??_isr+0)+0+3),f
  5338  0320  0749               	addwf	(isr@error_value+2),w
  5339  0321  00A6               	movwf	((??_isr+0)+0+2)
  5340  0322  1803               	skipnc
  5341  0323  0AA7               	incf	((??_isr+0)+0+3),f
  5342  0324  0852               	movf	(isr@integral+3),w
  5343  0325  0727               	addwf	((??_isr+0)+0+3),w
  5344  0326  074A               	addwf	(isr@error_value+3),w
  5345  0327  00A7               	movwf	((??_isr+0)+0+3)
  5346  0328  0827               	movf	3+(??_isr+0)+0,w
  5347  0329  00D2               	movwf	(isr@integral+3)
  5348  032A  0826               	movf	2+(??_isr+0)+0,w
  5349  032B  00D1               	movwf	(isr@integral+2)
  5350  032C  0825               	movf	1+(??_isr+0)+0,w
  5351  032D  00D0               	movwf	(isr@integral+1)
  5352  032E  0824               	movf	0+(??_isr+0)+0,w
  5353  032F  00CF               	movwf	(isr@integral)
  5354                           
  5355                           	line	432
  5356                           	
  5357  0330                     i1l3742:	
  5358                           ;PR24.c: 432: derivative = error_value - pre_error;
  5359  0330  0847               	movf	(isr@error_value),w
  5360  0331  00A4               	movwf	(??_isr+0)+0
  5361  0332  0848               	movf	(isr@error_value+1),w
  5362  0333  00A5               	movwf	((??_isr+0)+0+1)
  5363  0334  0849               	movf	(isr@error_value+2),w
  5364  0335  00A6               	movwf	((??_isr+0)+0+2)
  5365  0336  084A               	movf	(isr@error_value+3),w
  5366  0337  00A7               	movwf	((??_isr+0)+0+3)
  5367  0338  0953               	comf	(isr@pre_error),w
  5368  0339  00A8               	movwf	(??_isr+4)+0
  5369  033A  0954               	comf	(isr@pre_error+1),w
  5370  033B  00A9               	movwf	((??_isr+4)+0+1)
  5371  033C  0955               	comf	(isr@pre_error+2),w
  5372  033D  00AA               	movwf	((??_isr+4)+0+2)
  5373  033E  0956               	comf	(isr@pre_error+3),w
  5374  033F  00AB               	movwf	((??_isr+4)+0+3)
  5375  0340  0AA8               	incf	(??_isr+4)+0,f
  5376  0341  1903               	skipnz
  5377  0342  0AA9               	incf	((??_isr+4)+0+1),f
  5378  0343  1903               	skipnz
  5379  0344  0AAA               	incf	((??_isr+4)+0+2),f
  5380  0345  1903               	skipnz
  5381  0346  0AAB               	incf	((??_isr+4)+0+3),f
  5382  0347  0828               	movf	0+(??_isr+4)+0,w
  5383  0348  07A4               	addwf	(??_isr+0)+0,f
  5384  0349  0829               	movf	1+(??_isr+4)+0,w
  5385  034A  1803               	skipnc
  5386  034B  0F29               	incfsz	1+(??_isr+4)+0,w
  5387  034C  2B4E               	goto	u342_20
  5388  034D  2B4F               	goto	u342_21
  5389  034E                     u342_20:
  5390  034E  07A5               	addwf	(??_isr+0)+1,f
  5391  034F                     u342_21:
  5392  034F  082A               	movf	2+(??_isr+4)+0,w
  5393  0350  1803               	skipnc
  5394  0351  0F2A               	incfsz	2+(??_isr+4)+0,w
  5395  0352  2B54               	goto	u342_22
  5396  0353  2B55               	goto	u342_23
  5397  0354                     u342_22:
  5398  0354  07A6               	addwf	(??_isr+0)+2,f
  5399  0355                     u342_23:
  5400  0355  082B               	movf	3+(??_isr+4)+0,w
  5401  0356  1803               	skipnc
  5402  0357  0A2B               	incf	3+(??_isr+4)+0,w
  5403  0358  07A7               	addwf	(??_isr+0)+3,f
  5404  0359  0827               	movf	3+(??_isr+0)+0,w
  5405  035A  00C2               	movwf	(isr@derivative+3)
  5406  035B  0826               	movf	2+(??_isr+0)+0,w
  5407  035C  00C1               	movwf	(isr@derivative+2)
  5408  035D  0825               	movf	1+(??_isr+0)+0,w
  5409  035E  00C0               	movwf	(isr@derivative+1)
  5410  035F  0824               	movf	0+(??_isr+0)+0,w
  5411  0360  00BF               	movwf	(isr@derivative)
  5412                           
  5413                           	line	434
  5414                           	
  5415  0361                     i1l3744:	
  5416                           ;PR24.c: 434: output = (kp * error_value) + (ki * integral) + (kd * derivative);
  5417  0361  1683               	bsf	status, 5	;RP0=1, select bank1
  5418  0362  1303               	bcf	status, 6	;RP1=0, select bank1
  5419  0363  0858               	movf	(_kd)^080h,w
  5420  0364  1283               	bcf	status, 5	;RP0=0, select bank0
  5421  0365  1303               	bcf	status, 6	;RP1=0, select bank0
  5422  0366  00A4               	movwf	(??_isr+0)+0
  5423  0367  01A5               	clrf	((??_isr+0)+0+1)
  5424  0368  01A6               	clrf	((??_isr+0)+0+2)
  5425  0369  01A7               	clrf	((??_isr+0)+0+3)
  5426  036A  0827               	movf	3+(??_isr+0)+0,w
  5427  036B  00F3               	movwf	(?i1___lmul+3)
  5428  036C  0826               	movf	2+(??_isr+0)+0,w
  5429  036D  00F2               	movwf	(?i1___lmul+2)
  5430  036E  0825               	movf	1+(??_isr+0)+0,w
  5431  036F  00F1               	movwf	(?i1___lmul+1)
  5432  0370  0824               	movf	0+(??_isr+0)+0,w
  5433  0371  00F0               	movwf	(?i1___lmul)
  5434                           
  5435  0372  0842               	movf	(isr@derivative+3),w
  5436  0373  00F7               	movwf	3+(?i1___lmul)+04h
  5437  0374  0841               	movf	(isr@derivative+2),w
  5438  0375  00F6               	movwf	2+(?i1___lmul)+04h
  5439  0376  0840               	movf	(isr@derivative+1),w
  5440  0377  00F5               	movwf	1+(?i1___lmul)+04h
  5441  0378  083F               	movf	(isr@derivative),w
  5442  0379  00F4               	movwf	0+(?i1___lmul)+04h
  5443                           
  5444  037A  120A  158A  2490   	fcall	i1___lmul
              120A  118A         
  5445  037F  0870               	movf	(0+?i1___lmul),w
  5446  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  5447  0381  1303               	bcf	status, 6	;RP1=0, select bank0
  5448  0382  00A8               	movwf	(??_isr+4)+0
  5449  0383  0871               	movf	(1+?i1___lmul),w
  5450  0384  00A9               	movwf	((??_isr+4)+0+1)
  5451  0385  0872               	movf	(2+?i1___lmul),w
  5452  0386  00AA               	movwf	((??_isr+4)+0+2)
  5453  0387  0873               	movf	(3+?i1___lmul),w
  5454  0388  00AB               	movwf	((??_isr+4)+0+3)
  5455  0389  1683               	bsf	status, 5	;RP0=1, select bank1
  5456  038A  1303               	bcf	status, 6	;RP1=0, select bank1
  5457  038B  0859               	movf	(_ki)^080h,w
  5458  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  5459  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  5460  038E  00AC               	movwf	(??_isr+8)+0
  5461  038F  01AD               	clrf	((??_isr+8)+0+1)
  5462  0390  01AE               	clrf	((??_isr+8)+0+2)
  5463  0391  01AF               	clrf	((??_isr+8)+0+3)
  5464  0392  082F               	movf	3+(??_isr+8)+0,w
  5465  0393  00F3               	movwf	(?i1___lmul+3)
  5466  0394  082E               	movf	2+(??_isr+8)+0,w
  5467  0395  00F2               	movwf	(?i1___lmul+2)
  5468  0396  082D               	movf	1+(??_isr+8)+0,w
  5469  0397  00F1               	movwf	(?i1___lmul+1)
  5470  0398  082C               	movf	0+(??_isr+8)+0,w
  5471  0399  00F0               	movwf	(?i1___lmul)
  5472                           
  5473  039A  0852               	movf	(isr@integral+3),w
  5474  039B  00F7               	movwf	3+(?i1___lmul)+04h
  5475  039C  0851               	movf	(isr@integral+2),w
  5476  039D  00F6               	movwf	2+(?i1___lmul)+04h
  5477  039E  0850               	movf	(isr@integral+1),w
  5478  039F  00F5               	movwf	1+(?i1___lmul)+04h
  5479  03A0  084F               	movf	(isr@integral),w
  5480  03A1  00F4               	movwf	0+(?i1___lmul)+04h
  5481                           
  5482  03A2  120A  158A  2490   	fcall	i1___lmul
              120A  118A         
  5483  03A7  0870               	movf	(0+?i1___lmul),w
  5484  03A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5485  03A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5486  03AA  00B0               	movwf	(??_isr+12)+0
  5487  03AB  0871               	movf	(1+?i1___lmul),w
  5488  03AC  00B1               	movwf	((??_isr+12)+0+1)
  5489  03AD  0872               	movf	(2+?i1___lmul),w
  5490  03AE  00B2               	movwf	((??_isr+12)+0+2)
  5491  03AF  0873               	movf	(3+?i1___lmul),w
  5492  03B0  00B3               	movwf	((??_isr+12)+0+3)
  5493  03B1  1683               	bsf	status, 5	;RP0=1, select bank1
  5494  03B2  1303               	bcf	status, 6	;RP1=0, select bank1
  5495  03B3  085A               	movf	(_kp)^080h,w
  5496  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  5497  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  5498  03B6  00B4               	movwf	(??_isr+16)+0
  5499  03B7  01B5               	clrf	((??_isr+16)+0+1)
  5500  03B8  01B6               	clrf	((??_isr+16)+0+2)
  5501  03B9  01B7               	clrf	((??_isr+16)+0+3)
  5502  03BA  0837               	movf	3+(??_isr+16)+0,w
  5503  03BB  00F3               	movwf	(?i1___lmul+3)
  5504  03BC  0836               	movf	2+(??_isr+16)+0,w
  5505  03BD  00F2               	movwf	(?i1___lmul+2)
  5506  03BE  0835               	movf	1+(??_isr+16)+0,w
  5507  03BF  00F1               	movwf	(?i1___lmul+1)
  5508  03C0  0834               	movf	0+(??_isr+16)+0,w
  5509  03C1  00F0               	movwf	(?i1___lmul)
  5510                           
  5511  03C2  084A               	movf	(isr@error_value+3),w
  5512  03C3  00F7               	movwf	3+(?i1___lmul)+04h
  5513  03C4  0849               	movf	(isr@error_value+2),w
  5514  03C5  00F6               	movwf	2+(?i1___lmul)+04h
  5515  03C6  0848               	movf	(isr@error_value+1),w
  5516  03C7  00F5               	movwf	1+(?i1___lmul)+04h
  5517  03C8  0847               	movf	(isr@error_value),w
  5518  03C9  00F4               	movwf	0+(?i1___lmul)+04h
  5519                           
  5520  03CA  120A  158A  2490   	fcall	i1___lmul
              120A  118A         
  5521  03CF  0870               	movf	(0+(?i1___lmul)),w
  5522  03D0  1283               	bcf	status, 5	;RP0=0, select bank0
  5523  03D1  1303               	bcf	status, 6	;RP1=0, select bank0
  5524  03D2  07B0               	addwf	(??_isr+12)+0,f
  5525  03D3  0871               	movf	(1+(?i1___lmul)),w
  5526  03D4  1803               	skipnc
  5527  03D5  0F71               	incfsz	(1+(?i1___lmul)),w
  5528  03D6  2BD8               	goto	u343_20
  5529  03D7  2BD9               	goto	u343_21
  5530  03D8                     u343_20:
  5531  03D8  07B1               	addwf	(??_isr+12)+1,f
  5532  03D9                     u343_21:
  5533  03D9  0872               	movf	(2+(?i1___lmul)),w
  5534  03DA  1803               	skipnc
  5535  03DB  0F72               	incfsz	(2+(?i1___lmul)),w
  5536  03DC  2BDE               	goto	u343_22
  5537  03DD  2BDF               	goto	u343_23
  5538  03DE                     u343_22:
  5539  03DE  07B2               	addwf	(??_isr+12)+2,f
  5540  03DF                     u343_23:
  5541  03DF  0873               	movf	(3+(?i1___lmul)),w
  5542  03E0  1803               	skipnc
  5543  03E1  0A73               	incf	(3+(?i1___lmul)),w
  5544  03E2  07B3               	addwf	(??_isr+12)+3,f
  5545  03E3  0830               	movf	0+(??_isr+12)+0,w
  5546  03E4  07A8               	addwf	(??_isr+4)+0,f
  5547  03E5  0831               	movf	1+(??_isr+12)+0,w
  5548  03E6  1803               	skipnc
  5549  03E7  0F31               	incfsz	1+(??_isr+12)+0,w
  5550  03E8  2BEA               	goto	u344_20
  5551  03E9  2BEB               	goto	u344_21
  5552  03EA                     u344_20:
  5553  03EA  07A9               	addwf	(??_isr+4)+1,f
  5554  03EB                     u344_21:
  5555  03EB  0832               	movf	2+(??_isr+12)+0,w
  5556  03EC  1803               	skipnc
  5557  03ED  0F32               	incfsz	2+(??_isr+12)+0,w
  5558  03EE  2BF0               	goto	u344_22
  5559  03EF  2BF1               	goto	u344_23
  5560  03F0                     u344_22:
  5561  03F0  07AA               	addwf	(??_isr+4)+2,f
  5562  03F1                     u344_23:
  5563  03F1  0833               	movf	3+(??_isr+12)+0,w
  5564  03F2  1803               	skipnc
  5565  03F3  0A33               	incf	3+(??_isr+12)+0,w
  5566  03F4  07AB               	addwf	(??_isr+4)+3,f
  5567  03F5  082B               	movf	3+(??_isr+4)+0,w
  5568  03F6  00CE               	movwf	(isr@output+3)
  5569  03F7  082A               	movf	2+(??_isr+4)+0,w
  5570  03F8  00CD               	movwf	(isr@output+2)
  5571  03F9  0829               	movf	1+(??_isr+4)+0,w
  5572  03FA  00CC               	movwf	(isr@output+1)
  5573  03FB  0828               	movf	0+(??_isr+4)+0,w
  5574  03FC  00CB               	movwf	(isr@output)
  5575                           
  5576                           	line	436
  5577                           	
  5578  03FD                     i1l3746:	
  5579                           ;PR24.c: 436: if (output > 255) output = 255;
  5580  03FD  084E               	movf	(isr@output+3),w
  5581  03FE  3A80               	xorlw	80h
  5582  03FF  00FF               	movwf	btemp+1
  5583  0400  3000               	movlw	0
  5584  0401  3A80               	xorlw	80h
  5585  0402  027F               	subwf	btemp+1,w
  5586                           	
  5587  0403  1D03               	skipz
  5588  0404  2C0F               	goto	u345_23
  5589  0405  3000               	movlw	0
  5590  0406  024D               	subwf	(isr@output+2),w
  5591  0407  1D03               	skipz
  5592  0408  2C0F               	goto	u345_23
  5593  0409  3001               	movlw	01h
  5594  040A  024C               	subwf	(isr@output+1),w
  5595  040B  1D03               	skipz
  5596  040C  2C0F               	goto	u345_23
  5597  040D  3000               	movlw	0
  5598  040E  024B               	subwf	(isr@output),w
  5599  040F                     u345_23:
  5600  040F  1C03               	skipc
  5601  0410  2C12               	goto	u345_21
  5602  0411  2C13               	goto	u345_20
  5603  0412                     u345_21:
  5604  0412  2C1C               	goto	i1l3750
  5605  0413                     u345_20:
  5606                           	
  5607  0413                     i1l3748:	
  5608  0413  3000               	movlw	0
  5609  0414  00CE               	movwf	(isr@output+3)
  5610  0415  3000               	movlw	0
  5611  0416  00CD               	movwf	(isr@output+2)
  5612  0417  3000               	movlw	0
  5613  0418  00CC               	movwf	(isr@output+1)
  5614  0419  30FF               	movlw	0FFh
  5615  041A  00CB               	movwf	(isr@output)
  5616                           
  5617  041B  2C3C               	goto	i1l3754
  5618                           	line	437
  5619                           	
  5620  041C                     i1l778:	
  5621                           	
  5622  041C                     i1l3750:	
  5623                           ;PR24.c: 437: else if (output < -255) output = -255;
  5624  041C  084E               	movf	(isr@output+3),w
  5625  041D  3A80               	xorlw	80h
  5626  041E  00FF               	movwf	btemp+1
  5627  041F  30FF               	movlw	0FFh
  5628  0420  3A80               	xorlw	80h
  5629  0421  027F               	subwf	btemp+1,w
  5630                           	
  5631  0422  1D03               	skipz
  5632  0423  2C2E               	goto	u346_23
  5633  0424  30FF               	movlw	0FFh
  5634  0425  024D               	subwf	(isr@output+2),w
  5635  0426  1D03               	skipz
  5636  0427  2C2E               	goto	u346_23
  5637  0428  30FF               	movlw	0FFh
  5638  0429  024C               	subwf	(isr@output+1),w
  5639  042A  1D03               	skipz
  5640  042B  2C2E               	goto	u346_23
  5641  042C  3001               	movlw	01h
  5642  042D  024B               	subwf	(isr@output),w
  5643  042E                     u346_23:
  5644  042E  1803               	skipnc
  5645  042F  2C31               	goto	u346_21
  5646  0430  2C32               	goto	u346_20
  5647  0431                     u346_21:
  5648  0431  2C3C               	goto	i1l3754
  5649  0432                     u346_20:
  5650                           	
  5651  0432                     i1l3752:	
  5652  0432  30FF               	movlw	0FFh
  5653  0433  00CE               	movwf	(isr@output+3)
  5654  0434  30FF               	movlw	0FFh
  5655  0435  00CD               	movwf	(isr@output+2)
  5656  0436  30FF               	movlw	0FFh
  5657  0437  00CC               	movwf	(isr@output+1)
  5658  0438  3001               	movlw	01h
  5659  0439  00CB               	movwf	(isr@output)
  5660                           
  5661  043A  2C3C               	goto	i1l3754
  5662                           	
  5663  043B                     i1l780:	
  5664  043B  2C3C               	goto	i1l3754
  5665                           	line	439
  5666                           	
  5667  043C                     i1l779:	
  5668                           	
  5669  043C                     i1l3754:	
  5670                           ;PR24.c: 439: if (output > 0) motor_right((unsigned char)output);
  5671  043C  084E               	movf	(isr@output+3),w
  5672  043D  3A80               	xorlw	80h
  5673  043E  00FF               	movwf	btemp+1
  5674  043F  3000               	movlw	0
  5675  0440  3A80               	xorlw	80h
  5676  0441  027F               	subwf	btemp+1,w
  5677                           	
  5678  0442  1D03               	skipz
  5679  0443  2C4E               	goto	u347_23
  5680  0444  3000               	movlw	0
  5681  0445  024D               	subwf	(isr@output+2),w
  5682  0446  1D03               	skipz
  5683  0447  2C4E               	goto	u347_23
  5684  0448  3000               	movlw	0
  5685  0449  024C               	subwf	(isr@output+1),w
  5686  044A  1D03               	skipz
  5687  044B  2C4E               	goto	u347_23
  5688  044C  3001               	movlw	01h
  5689  044D  024B               	subwf	(isr@output),w
  5690  044E                     u347_23:
  5691  044E  1C03               	skipc
  5692  044F  2C51               	goto	u347_21
  5693  0450  2C52               	goto	u347_20
  5694  0451                     u347_21:
  5695  0451  2C59               	goto	i1l781
  5696  0452                     u347_20:
  5697                           	
  5698  0452                     i1l3756:	
  5699  0452  084B               	movf	(isr@output),w
  5700  0453  120A  158A  235D   	fcall	_motor_right
              120A  118A         
  5701  0458  2C6C               	goto	i1l3762
  5702                           	line	440
  5703                           	
  5704  0459                     i1l781:	
  5705                           ;PR24.c: 440: else if (output < 0) motor_left((unsigned char)(-output));
  5706  0459  1FCE               	btfss	(isr@output+3),7
  5707  045A  2C5C               	goto	u348_21
  5708  045B  2C5D               	goto	u348_20
  5709  045C                     u348_21:
  5710  045C  2C65               	goto	i1l3760
  5711  045D                     u348_20:
  5712                           	
  5713  045D                     i1l3758:	
  5714  045D  034B               	decf	(isr@output),w
  5715  045E  3AFF               	xorlw	0ffh
  5716  045F  120A  158A  2365   	fcall	_motor_left
              120A  118A         
  5717  0464  2C6C               	goto	i1l3762
  5718                           	line	441
  5719                           	
  5720  0465                     i1l783:	
  5721                           	
  5722  0465                     i1l3760:	
  5723                           ;PR24.c: 441: else motor_stop();
  5724  0465  120A  158A  2357   	fcall	_motor_stop
              120A  118A         
  5725  046A  2C6C               	goto	i1l3762
  5726                           	
  5727  046B                     i1l784:	
  5728  046B  2C6C               	goto	i1l3762
  5729                           	
  5730  046C                     i1l782:	
  5731                           	line	443
  5732                           	
  5733  046C                     i1l3762:	
  5734                           ;PR24.c: 443: pre_error = error_value;
  5735  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  5736  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  5737  046E  084A               	movf	(isr@error_value+3),w
  5738  046F  00D6               	movwf	(isr@pre_error+3)
  5739  0470  0849               	movf	(isr@error_value+2),w
  5740  0471  00D5               	movwf	(isr@pre_error+2)
  5741  0472  0848               	movf	(isr@error_value+1),w
  5742  0473  00D4               	movwf	(isr@pre_error+1)
  5743  0474  0847               	movf	(isr@error_value),w
  5744  0475  00D3               	movwf	(isr@pre_error)
  5745                           
  5746  0476  2C77               	goto	i1l785
  5747                           	line	444
  5748                           	
  5749  0477                     i1l777:	
  5750                           	line	445
  5751                           	
  5752  0477                     i1l785:	
  5753  0477  083B               	movf	(??_isr+23),w
  5754  0478  00FF               	movwf	btemp+1
  5755  0479  083A               	movf	(??_isr+22),w
  5756  047A  008A               	movwf	pclath
  5757  047B  0839               	movf	(??_isr+21),w
  5758  047C  0084               	movwf	fsr0
  5759  047D  0E38               	swapf	(??_isr+20)^00h,w
  5760  047E  0083               	movwf	status
  5761  047F  0EFE               	swapf	saved_w,f
  5762  0480  0E7E               	swapf	saved_w,w
  5763  0481  0009               	retfie
  5764                           	opt stack 0
  5765                           GLOBAL	__end_of_isr
  5766  0482                     	__end_of_isr:
  5767 ;; =============== function _isr ends ============
  5768                           
  5769                           	signat	_isr,88
  5770                           	global	i1_ai_read
  5771                           psect	text597,local,class=CODE,delta=2
  5772                           global __ptext597
  5773  0EE0                     __ptext597:
  5774                           
  5775 ;; *************** function i1_ai_read *****************
  5776 ;; Defined at:
  5777 ;;		line 165 in file "../../Source File/PR24.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  ai_read         1    wreg     unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  ai_read         1   13[COMMON] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      unsigned char 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5791 ;;      Params:         0       0       0       0       0
  5792 ;;      Locals:         1       0       0       0       0
  5793 ;;      Temps:          2       0       0       0       0
  5794 ;;      Totals:         3       0       0       0       0
  5795 ;;Total ram usage:        3 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    1
  5798 ;; This function calls:
  5799 ;;		i1_delay
  5800 ;;		i1___wmul
  5801 ;;		i1___awdiv
  5802 ;; This function is called by:
  5803 ;;		_isr
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           psect	text597
  5807                           	file	"../../Source File/PR24.c"
  5808                           	line	165
  5809                           	global	__size_ofi1_ai_read
  5810  0083                     	__size_ofi1_ai_read	equ	__end_ofi1_ai_read-i1_ai_read
  5811                           	
  5812  0EE0                     i1_ai_read:	
  5813                           	opt	stack 1
  5814                           ; Regs used in i1_ai_read: [wreg+status,2+status,0+pclath+cstack]
  5815                           ;i1ai_read@an_sel stored from wreg
  5816  0EE0  00FD               	movwf	(i1ai_read@an_sel)
  5817                           	line	166
  5818                           	
  5819  0EE1                     i1l3874:	
  5820                           ;PR24.c: 166: if(an_sel == 0) ADCON0 = 0b00000001;
  5821  0EE1  08FD               	movf	(i1ai_read@an_sel),f
  5822  0EE2  1D03               	skipz
  5823  0EE3  2EE5               	goto	u381_21
  5824  0EE4  2EE6               	goto	u381_20
  5825  0EE5                     u381_21:
  5826  0EE5  2EEB               	goto	i1l3878
  5827  0EE6                     u381_20:
  5828                           	
  5829  0EE6                     i1l3876:	
  5830  0EE6  3001               	movlw	(01h)
  5831  0EE7  1283               	bcf	status, 5	;RP0=0, select bank0
  5832  0EE8  1303               	bcf	status, 6	;RP1=0, select bank0
  5833  0EE9  009F               	movwf	(31)	;volatile
  5834  0EEA  2F1B               	goto	i1l3894
  5835                           	line	167
  5836                           	
  5837  0EEB                     i1l646:	
  5838                           	
  5839  0EEB                     i1l3878:	
  5840                           ;PR24.c: 167: else if(an_sel == 1) ADCON0 = 0b00001001;
  5841  0EEB  087D               	movf	(i1ai_read@an_sel),w
  5842  0EEC  3A01               	xorlw	01h
  5843  0EED  1D03               	skipz
  5844  0EEE  2EF0               	goto	u382_21
  5845  0EEF  2EF1               	goto	u382_20
  5846  0EF0                     u382_21:
  5847  0EF0  2EF6               	goto	i1l3882
  5848  0EF1                     u382_20:
  5849                           	
  5850  0EF1                     i1l3880:	
  5851  0EF1  3009               	movlw	(09h)
  5852  0EF2  1283               	bcf	status, 5	;RP0=0, select bank0
  5853  0EF3  1303               	bcf	status, 6	;RP1=0, select bank0
  5854  0EF4  009F               	movwf	(31)	;volatile
  5855  0EF5  2F1B               	goto	i1l3894
  5856                           	line	168
  5857                           	
  5858  0EF6                     i1l648:	
  5859                           	
  5860  0EF6                     i1l3882:	
  5861                           ;PR24.c: 168: else if(an_sel == 2) ADCON0 = 0b00010001;
  5862  0EF6  087D               	movf	(i1ai_read@an_sel),w
  5863  0EF7  3A02               	xorlw	02h
  5864  0EF8  1D03               	skipz
  5865  0EF9  2EFB               	goto	u383_21
  5866  0EFA  2EFC               	goto	u383_20
  5867  0EFB                     u383_21:
  5868  0EFB  2F01               	goto	i1l3886
  5869  0EFC                     u383_20:
  5870                           	
  5871  0EFC                     i1l3884:	
  5872  0EFC  3011               	movlw	(011h)
  5873  0EFD  1283               	bcf	status, 5	;RP0=0, select bank0
  5874  0EFE  1303               	bcf	status, 6	;RP1=0, select bank0
  5875  0EFF  009F               	movwf	(31)	;volatile
  5876  0F00  2F1B               	goto	i1l3894
  5877                           	line	169
  5878                           	
  5879  0F01                     i1l650:	
  5880                           	
  5881  0F01                     i1l3886:	
  5882                           ;PR24.c: 169: else if(an_sel == 3) ADCON0 = 0b00011001;
  5883  0F01  087D               	movf	(i1ai_read@an_sel),w
  5884  0F02  3A03               	xorlw	03h
  5885  0F03  1D03               	skipz
  5886  0F04  2F06               	goto	u384_21
  5887  0F05  2F07               	goto	u384_20
  5888  0F06                     u384_21:
  5889  0F06  2F0C               	goto	i1l3890
  5890  0F07                     u384_20:
  5891                           	
  5892  0F07                     i1l3888:	
  5893  0F07  3019               	movlw	(019h)
  5894  0F08  1283               	bcf	status, 5	;RP0=0, select bank0
  5895  0F09  1303               	bcf	status, 6	;RP1=0, select bank0
  5896  0F0A  009F               	movwf	(31)	;volatile
  5897  0F0B  2F1B               	goto	i1l3894
  5898                           	line	170
  5899                           	
  5900  0F0C                     i1l652:	
  5901                           	
  5902  0F0C                     i1l3890:	
  5903                           ;PR24.c: 170: else if(an_sel == 4) ADCON0 = 0b00100001;
  5904  0F0C  087D               	movf	(i1ai_read@an_sel),w
  5905  0F0D  3A04               	xorlw	04h
  5906  0F0E  1D03               	skipz
  5907  0F0F  2F11               	goto	u385_21
  5908  0F10  2F12               	goto	u385_20
  5909  0F11                     u385_21:
  5910  0F11  2F1B               	goto	i1l3894
  5911  0F12                     u385_20:
  5912                           	
  5913  0F12                     i1l3892:	
  5914  0F12  3021               	movlw	(021h)
  5915  0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  5916  0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  5917  0F15  009F               	movwf	(31)	;volatile
  5918  0F16  2F1B               	goto	i1l3894
  5919                           	
  5920  0F17                     i1l654:	
  5921  0F17  2F1B               	goto	i1l3894
  5922                           	line	172
  5923                           	
  5924  0F18                     i1l653:	
  5925  0F18  2F1B               	goto	i1l3894
  5926                           	
  5927  0F19                     i1l651:	
  5928  0F19  2F1B               	goto	i1l3894
  5929                           	
  5930  0F1A                     i1l649:	
  5931  0F1A  2F1B               	goto	i1l3894
  5932                           	
  5933  0F1B                     i1l647:	
  5934                           	
  5935  0F1B                     i1l3894:	
  5936                           ;PR24.c: 172: delay(100);
  5937  0F1B  3000               	movlw	0
  5938  0F1C  00F3               	movwf	(?i1_delay+3)
  5939  0F1D  3000               	movlw	0
  5940  0F1E  00F2               	movwf	(?i1_delay+2)
  5941  0F1F  3000               	movlw	0
  5942  0F20  00F1               	movwf	(?i1_delay+1)
  5943  0F21  3064               	movlw	064h
  5944  0F22  00F0               	movwf	(?i1_delay)
  5945                           
  5946  0F23  120A  158A  23FE   	fcall	i1_delay
              120A  158A         
  5947                           	line	174
  5948                           	
  5949  0F28                     i1l3896:	
  5950                           ;PR24.c: 174: GO=1;
  5951  0F28  1283               	bcf	status, 5	;RP0=0, select bank0
  5952  0F29  1303               	bcf	status, 6	;RP1=0, select bank0
  5953  0F2A  151F               	bsf	(250/8),(250)&7
  5954                           	line	175
  5955                           ;PR24.c: 175: while(GO==1);
  5956  0F2B  2F2C               	goto	i1l655
  5957                           	
  5958  0F2C                     i1l656:	
  5959                           	
  5960  0F2C                     i1l655:	
  5961  0F2C  191F               	btfsc	(250/8),(250)&7
  5962  0F2D  2F2F               	goto	u386_21
  5963  0F2E  2F30               	goto	u386_20
  5964  0F2F                     u386_21:
  5965  0F2F  2F2C               	goto	i1l655
  5966  0F30                     u386_20:
  5967  0F30  2F31               	goto	i1l3898
  5968                           	
  5969  0F31                     i1l657:	
  5970                           	line	177
  5971                           	
  5972  0F31                     i1l3898:	
  5973                           ;PR24.c: 177: if(an_sel == 0 || an_sel == 1) return ADRESH;
  5974  0F31  087D               	movf	(i1ai_read@an_sel),w
  5975  0F32  1D03               	skipz
  5976  0F33  2F35               	goto	u387_20
  5977  0F34  2F3C               	goto	i1l3902
  5978  0F35                     u387_20:
  5979                           	
  5980  0F35                     i1l3900:	
  5981  0F35  087D               	movf	(i1ai_read@an_sel),w
  5982  0F36  3A01               	xorlw	01h
  5983  0F37  1D03               	skipz
  5984  0F38  2F3A               	goto	u388_21
  5985  0F39  2F3B               	goto	u388_20
  5986  0F3A                     u388_21:
  5987  0F3A  2F40               	goto	i1l3908
  5988  0F3B                     u388_20:
  5989  0F3B  2F3C               	goto	i1l3902
  5990                           	
  5991  0F3C                     i1l660:	
  5992                           	
  5993  0F3C                     i1l3902:	
  5994  0F3C  081E               	movf	(30),w	;volatile
  5995  0F3D  2F62               	goto	i1l661
  5996                           	
  5997  0F3E                     i1l3904:	
  5998  0F3E  2F62               	goto	i1l661
  5999                           	
  6000  0F3F                     i1l3906:	
  6001  0F3F  2F62               	goto	i1l661
  6002                           	line	178
  6003                           	
  6004  0F40                     i1l658:	
  6005                           	
  6006  0F40                     i1l3908:	
  6007                           ;PR24.c: 178: else return ADRESH * 100 / 255;
  6008  0F40  30FF               	movlw	low(0FFh)
  6009  0F41  00F6               	movwf	(?i1___awdiv)
  6010  0F42  3000               	movlw	high(0FFh)
  6011  0F43  00F7               	movwf	((?i1___awdiv))+1
  6012  0F44  081E               	movf	(30),w	;volatile
  6013  0F45  00FB               	movwf	(??i1_ai_read+0)+0
  6014  0F46  01FC               	clrf	(??i1_ai_read+0)+0+1
  6015  0F47  087B               	movf	0+(??i1_ai_read+0)+0,w
  6016  0F48  00F0               	movwf	(?i1___wmul)
  6017  0F49  087C               	movf	1+(??i1_ai_read+0)+0,w
  6018  0F4A  00F1               	movwf	(?i1___wmul+1)
  6019  0F4B  3064               	movlw	low(064h)
  6020  0F4C  00F2               	movwf	0+(?i1___wmul)+02h
  6021  0F4D  3000               	movlw	high(064h)
  6022  0F4E  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  6023  0F4F  120A  158A  23A8   	fcall	i1___wmul
              120A  158A         
  6024  0F54  0871               	movf	(1+(?i1___wmul)),w
  6025  0F55  01F9               	clrf	1+(?i1___awdiv)+02h
  6026  0F56  07F9               	addwf	1+(?i1___awdiv)+02h
  6027  0F57  0870               	movf	(0+(?i1___wmul)),w
  6028  0F58  01F8               	clrf	0+(?i1___awdiv)+02h
  6029  0F59  07F8               	addwf	0+(?i1___awdiv)+02h
  6030                           
  6031  0F5A  120A  158A  25F4   	fcall	i1___awdiv
              120A  158A         
  6032  0F5F  0876               	movf	(0+(?i1___awdiv)),w
  6033  0F60  2F62               	goto	i1l661
  6034                           	
  6035  0F61                     i1l3910:	
  6036  0F61  2F62               	goto	i1l661
  6037                           	
  6038  0F62                     i1l662:	
  6039                           	line	179
  6040                           	
  6041  0F62                     i1l661:	
  6042  0F62  0008               	return
  6043                           	opt stack 0
  6044                           GLOBAL	__end_ofi1_ai_read
  6045  0F63                     	__end_ofi1_ai_read:
  6046 ;; =============== function i1_ai_read ends ============
  6047                           
  6048                           	signat	i1_ai_read,89
  6049                           	global	i1___awdiv
  6050                           psect	text598,local,class=CODE,delta=2
  6051                           global __ptext598
  6052  0DF4                     __ptext598:
  6053                           
  6054 ;; *************** function i1___awdiv *****************
  6055 ;; Defined at:
  6056 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  __awdiv         2    6[COMMON] int 
  6059 ;;  __awdiv         2    8[COMMON] int 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  __awdiv         2    2[BANK0 ] int 
  6062 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  6063 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    6[COMMON] int 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6073 ;;      Params:         4       0       0       0       0
  6074 ;;      Locals:         0       4       0       0       0
  6075 ;;      Temps:          1       0       0       0       0
  6076 ;;      Totals:         5       4       0       0       0
  6077 ;;Total ram usage:        9 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		i1_ai_read
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           psect	text598
  6086                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6087                           	line	5
  6088                           	global	__size_ofi1___awdiv
  6089  0076                     	__size_ofi1___awdiv	equ	__end_ofi1___awdiv-i1___awdiv
  6090                           	
  6091  0DF4                     i1___awdiv:	
  6092                           	opt	stack 1
  6093                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6094                           	line	9
  6095                           	
  6096  0DF4                     i1l3944:	
  6097  0DF4  1283               	bcf	status, 5	;RP0=0, select bank0
  6098  0DF5  1303               	bcf	status, 6	;RP1=0, select bank0
  6099  0DF6  01A1               	clrf	(i1___awdiv@sign)
  6100                           	line	10
  6101  0DF7  1FF7               	btfss	(i1___awdiv@divisor+1),7
  6102  0DF8  2DFA               	goto	u401_21
  6103  0DF9  2DFB               	goto	u401_20
  6104  0DFA                     u401_21:
  6105  0DFA  2E04               	goto	i1l3948
  6106  0DFB                     u401_20:
  6107                           	line	11
  6108                           	
  6109  0DFB                     i1l3946:	
  6110  0DFB  09F6               	comf	(i1___awdiv@divisor),f
  6111  0DFC  09F7               	comf	(i1___awdiv@divisor+1),f
  6112  0DFD  0AF6               	incf	(i1___awdiv@divisor),f
  6113  0DFE  1903               	skipnz
  6114  0DFF  0AF7               	incf	(i1___awdiv@divisor+1),f
  6115                           	line	12
  6116  0E00  01A1               	clrf	(i1___awdiv@sign)
  6117  0E01  1403               	bsf	status,0
  6118  0E02  0DA1               	rlf	(i1___awdiv@sign),f
  6119  0E03  2E04               	goto	i1l3948
  6120                           	line	13
  6121                           	
  6122  0E04                     i1l1544:	
  6123                           	line	14
  6124                           	
  6125  0E04                     i1l3948:	
  6126  0E04  1FF9               	btfss	(i1___awdiv@dividend+1),7
  6127  0E05  2E07               	goto	u402_21
  6128  0E06  2E08               	goto	u402_20
  6129  0E07                     u402_21:
  6130  0E07  2E12               	goto	i1l3954
  6131  0E08                     u402_20:
  6132                           	line	15
  6133                           	
  6134  0E08                     i1l3950:	
  6135  0E08  09F8               	comf	(i1___awdiv@dividend),f
  6136  0E09  09F9               	comf	(i1___awdiv@dividend+1),f
  6137  0E0A  0AF8               	incf	(i1___awdiv@dividend),f
  6138  0E0B  1903               	skipnz
  6139  0E0C  0AF9               	incf	(i1___awdiv@dividend+1),f
  6140                           	line	16
  6141                           	
  6142  0E0D                     i1l3952:	
  6143  0E0D  3001               	movlw	(01h)
  6144  0E0E  00FA               	movwf	(??i1___awdiv+0)+0
  6145  0E0F  087A               	movf	(??i1___awdiv+0)+0,w
  6146  0E10  06A1               	xorwf	(i1___awdiv@sign),f
  6147  0E11  2E12               	goto	i1l3954
  6148                           	line	17
  6149                           	
  6150  0E12                     i1l1545:	
  6151                           	line	18
  6152                           	
  6153  0E12                     i1l3954:	
  6154  0E12  01A2               	clrf	(i1___awdiv@quotient)
  6155  0E13  01A3               	clrf	(i1___awdiv@quotient+1)
  6156                           	line	19
  6157                           	
  6158  0E14                     i1l3956:	
  6159  0E14  0877               	movf	(i1___awdiv@divisor+1),w
  6160  0E15  0476               	iorwf	(i1___awdiv@divisor),w
  6161  0E16  1903               	skipnz
  6162  0E17  2E19               	goto	u403_21
  6163  0E18  2E1A               	goto	u403_20
  6164  0E19                     u403_21:
  6165  0E19  2E58               	goto	i1l3976
  6166  0E1A                     u403_20:
  6167                           	line	20
  6168                           	
  6169  0E1A                     i1l3958:	
  6170  0E1A  01A0               	clrf	(i1___awdiv@counter)
  6171  0E1B  1403               	bsf	status,0
  6172  0E1C  0DA0               	rlf	(i1___awdiv@counter),f
  6173                           	line	21
  6174  0E1D  2E2A               	goto	i1l3964
  6175                           	
  6176  0E1E                     i1l1548:	
  6177                           	line	22
  6178                           	
  6179  0E1E                     i1l3960:	
  6180  0E1E  3001               	movlw	01h
  6181                           	
  6182  0E1F                     u404_25:
  6183  0E1F  1003               	clrc
  6184  0E20  0DF6               	rlf	(i1___awdiv@divisor),f
  6185  0E21  0DF7               	rlf	(i1___awdiv@divisor+1),f
  6186  0E22  3EFF               	addlw	-1
  6187  0E23  1D03               	skipz
  6188  0E24  2E1F               	goto	u404_25
  6189                           	line	23
  6190                           	
  6191  0E25                     i1l3962:	
  6192  0E25  3001               	movlw	(01h)
  6193  0E26  00FA               	movwf	(??i1___awdiv+0)+0
  6194  0E27  087A               	movf	(??i1___awdiv+0)+0,w
  6195  0E28  07A0               	addwf	(i1___awdiv@counter),f
  6196  0E29  2E2A               	goto	i1l3964
  6197                           	line	24
  6198                           	
  6199  0E2A                     i1l1547:	
  6200                           	line	21
  6201                           	
  6202  0E2A                     i1l3964:	
  6203  0E2A  1FF7               	btfss	(i1___awdiv@divisor+1),(15)&7
  6204  0E2B  2E2D               	goto	u405_21
  6205  0E2C  2E2E               	goto	u405_20
  6206  0E2D                     u405_21:
  6207  0E2D  2E1E               	goto	i1l3960
  6208  0E2E                     u405_20:
  6209  0E2E  2E30               	goto	i1l3966
  6210                           	
  6211  0E2F                     i1l1549:	
  6212  0E2F  2E30               	goto	i1l3966
  6213                           	line	25
  6214                           	
  6215  0E30                     i1l1550:	
  6216                           	line	26
  6217                           	
  6218  0E30                     i1l3966:	
  6219  0E30  3001               	movlw	01h
  6220                           	
  6221  0E31                     u406_25:
  6222  0E31  1003               	clrc
  6223  0E32  0DA2               	rlf	(i1___awdiv@quotient),f
  6224  0E33  0DA3               	rlf	(i1___awdiv@quotient+1),f
  6225  0E34  3EFF               	addlw	-1
  6226  0E35  1D03               	skipz
  6227  0E36  2E31               	goto	u406_25
  6228                           	line	27
  6229  0E37  0877               	movf	(i1___awdiv@divisor+1),w
  6230  0E38  0279               	subwf	(i1___awdiv@dividend+1),w
  6231  0E39  1D03               	skipz
  6232  0E3A  2E3D               	goto	u407_25
  6233  0E3B  0876               	movf	(i1___awdiv@divisor),w
  6234  0E3C  0278               	subwf	(i1___awdiv@dividend),w
  6235  0E3D                     u407_25:
  6236  0E3D  1C03               	skipc
  6237  0E3E  2E40               	goto	u407_21
  6238  0E3F  2E41               	goto	u407_20
  6239  0E40                     u407_21:
  6240  0E40  2E49               	goto	i1l3972
  6241  0E41                     u407_20:
  6242                           	line	28
  6243                           	
  6244  0E41                     i1l3968:	
  6245  0E41  0876               	movf	(i1___awdiv@divisor),w
  6246  0E42  02F8               	subwf	(i1___awdiv@dividend),f
  6247  0E43  0877               	movf	(i1___awdiv@divisor+1),w
  6248  0E44  1C03               	skipc
  6249  0E45  03F9               	decf	(i1___awdiv@dividend+1),f
  6250  0E46  02F9               	subwf	(i1___awdiv@dividend+1),f
  6251                           	line	29
  6252                           	
  6253  0E47                     i1l3970:	
  6254  0E47  1422               	bsf	(i1___awdiv@quotient)+(0/8),(0)&7
  6255  0E48  2E49               	goto	i1l3972
  6256                           	line	30
  6257                           	
  6258  0E49                     i1l1551:	
  6259                           	line	31
  6260                           	
  6261  0E49                     i1l3972:	
  6262  0E49  3001               	movlw	01h
  6263                           	
  6264  0E4A                     u408_25:
  6265  0E4A  1003               	clrc
  6266  0E4B  0CF7               	rrf	(i1___awdiv@divisor+1),f
  6267  0E4C  0CF6               	rrf	(i1___awdiv@divisor),f
  6268  0E4D  3EFF               	addlw	-1
  6269  0E4E  1D03               	skipz
  6270  0E4F  2E4A               	goto	u408_25
  6271                           	line	32
  6272                           	
  6273  0E50                     i1l3974:	
  6274  0E50  3001               	movlw	low(01h)
  6275  0E51  02A0               	subwf	(i1___awdiv@counter),f
  6276  0E52  1D03               	btfss	status,2
  6277  0E53  2E55               	goto	u409_21
  6278  0E54  2E56               	goto	u409_20
  6279  0E55                     u409_21:
  6280  0E55  2E30               	goto	i1l3966
  6281  0E56                     u409_20:
  6282  0E56  2E58               	goto	i1l3976
  6283                           	
  6284  0E57                     i1l1552:	
  6285  0E57  2E58               	goto	i1l3976
  6286                           	line	33
  6287                           	
  6288  0E58                     i1l1546:	
  6289                           	line	34
  6290                           	
  6291  0E58                     i1l3976:	
  6292  0E58  0821               	movf	(i1___awdiv@sign),w
  6293  0E59  1D03               	skipz
  6294  0E5A  2E5C               	goto	u410_20
  6295  0E5B  2E62               	goto	i1l3980
  6296  0E5C                     u410_20:
  6297                           	line	35
  6298                           	
  6299  0E5C                     i1l3978:	
  6300  0E5C  09A2               	comf	(i1___awdiv@quotient),f
  6301  0E5D  09A3               	comf	(i1___awdiv@quotient+1),f
  6302  0E5E  0AA2               	incf	(i1___awdiv@quotient),f
  6303  0E5F  1903               	skipnz
  6304  0E60  0AA3               	incf	(i1___awdiv@quotient+1),f
  6305  0E61  2E62               	goto	i1l3980
  6306                           	
  6307  0E62                     i1l1553:	
  6308                           	line	36
  6309                           	
  6310  0E62                     i1l3980:	
  6311  0E62  0823               	movf	(i1___awdiv@quotient+1),w
  6312  0E63  01F7               	clrf	(?i1___awdiv+1)
  6313  0E64  07F7               	addwf	(?i1___awdiv+1)
  6314  0E65  0822               	movf	(i1___awdiv@quotient),w
  6315  0E66  01F6               	clrf	(?i1___awdiv)
  6316  0E67  07F6               	addwf	(?i1___awdiv)
  6317                           
  6318  0E68  2E69               	goto	i1l1554
  6319                           	
  6320  0E69                     i1l3982:	
  6321                           	line	37
  6322                           	
  6323  0E69                     i1l1554:	
  6324  0E69  0008               	return
  6325                           	opt stack 0
  6326                           GLOBAL	__end_ofi1___awdiv
  6327  0E6A                     	__end_ofi1___awdiv:
  6328 ;; =============== function i1___awdiv ends ============
  6329                           
  6330                           	signat	i1___awdiv,90
  6331                           	global	i1___lmul
  6332                           psect	text599,local,class=CODE,delta=2
  6333                           global __ptext599
  6334  0C90                     __ptext599:
  6335                           
  6336 ;; *************** function i1___lmul *****************
  6337 ;; Defined at:
  6338 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  __lmul          4    0[COMMON] unsigned long 
  6341 ;;  __lmul          4    4[COMMON] unsigned long 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  __lmul          4    9[COMMON] unsigned long 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  4    0[COMMON] unsigned long 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6353 ;;      Params:         8       0       0       0       0
  6354 ;;      Locals:         4       0       0       0       0
  6355 ;;      Temps:          1       0       0       0       0
  6356 ;;      Totals:        13       0       0       0       0
  6357 ;;Total ram usage:       13 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_isr
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           psect	text599
  6366                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  6367                           	line	3
  6368                           	global	__size_ofi1___lmul
  6369  004A                     	__size_ofi1___lmul	equ	__end_ofi1___lmul-i1___lmul
  6370                           	
  6371  0C90                     i1___lmul:	
  6372                           	opt	stack 2
  6373                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  6374                           	line	4
  6375                           	
  6376  0C90                     i1l3930:	
  6377  0C90  3000               	movlw	0
  6378  0C91  00FC               	movwf	(i1___lmul@product+3)
  6379  0C92  3000               	movlw	0
  6380  0C93  00FB               	movwf	(i1___lmul@product+2)
  6381  0C94  3000               	movlw	0
  6382  0C95  00FA               	movwf	(i1___lmul@product+1)
  6383  0C96  3000               	movlw	0
  6384  0C97  00F9               	movwf	(i1___lmul@product)
  6385                           
  6386  0C98  2C99               	goto	i1l3932
  6387                           	line	6
  6388                           	
  6389  0C99                     i1l1479:	
  6390                           	line	7
  6391                           	
  6392  0C99                     i1l3932:	
  6393  0C99  1C70               	btfss	(i1___lmul@multiplier),(0)&7
  6394  0C9A  2C9C               	goto	u396_21
  6395  0C9B  2C9D               	goto	u396_20
  6396  0C9C                     u396_21:
  6397  0C9C  2CB5               	goto	i1l3936
  6398  0C9D                     u396_20:
  6399                           	line	8
  6400                           	
  6401  0C9D                     i1l3934:	
  6402  0C9D  0874               	movf	(i1___lmul@multiplicand),w
  6403  0C9E  07F9               	addwf	(i1___lmul@product),f
  6404  0C9F  0875               	movf	(i1___lmul@multiplicand+1),w
  6405  0CA0  1103               	clrz
  6406  0CA1  1803               	skipnc
  6407  0CA2  3E01               	addlw	1
  6408  0CA3  1903               	skipnz
  6409  0CA4  2CA6               	goto	u397_21
  6410  0CA5  07FA               	addwf	(i1___lmul@product+1),f
  6411  0CA6                     u397_21:
  6412  0CA6  0876               	movf	(i1___lmul@multiplicand+2),w
  6413  0CA7  1103               	clrz
  6414  0CA8  1803               	skipnc
  6415  0CA9  3E01               	addlw	1
  6416  0CAA  1903               	skipnz
  6417  0CAB  2CAD               	goto	u397_22
  6418  0CAC  07FB               	addwf	(i1___lmul@product+2),f
  6419  0CAD                     u397_22:
  6420  0CAD  0877               	movf	(i1___lmul@multiplicand+3),w
  6421  0CAE  1103               	clrz
  6422  0CAF  1803               	skipnc
  6423  0CB0  3E01               	addlw	1
  6424  0CB1  1903               	skipnz
  6425  0CB2  2CB4               	goto	u397_23
  6426  0CB3  07FC               	addwf	(i1___lmul@product+3),f
  6427  0CB4                     u397_23:
  6428                           
  6429  0CB4  2CB5               	goto	i1l3936
  6430                           	
  6431  0CB5                     i1l1480:	
  6432                           	line	9
  6433                           	
  6434  0CB5                     i1l3936:	
  6435  0CB5  3001               	movlw	01h
  6436  0CB6  00F8               	movwf	(??i1___lmul+0)+0
  6437  0CB7                     u398_25:
  6438  0CB7  1003               	clrc
  6439  0CB8  0DF4               	rlf	(i1___lmul@multiplicand),f
  6440  0CB9  0DF5               	rlf	(i1___lmul@multiplicand+1),f
  6441  0CBA  0DF6               	rlf	(i1___lmul@multiplicand+2),f
  6442  0CBB  0DF7               	rlf	(i1___lmul@multiplicand+3),f
  6443  0CBC  0BF8               	decfsz	(??i1___lmul+0)+0
  6444  0CBD  2CB7               	goto	u398_25
  6445                           	line	10
  6446                           	
  6447  0CBE                     i1l3938:	
  6448  0CBE  3001               	movlw	01h
  6449  0CBF                     u399_25:
  6450  0CBF  1003               	clrc
  6451  0CC0  0CF3               	rrf	(i1___lmul@multiplier+3),f
  6452  0CC1  0CF2               	rrf	(i1___lmul@multiplier+2),f
  6453  0CC2  0CF1               	rrf	(i1___lmul@multiplier+1),f
  6454  0CC3  0CF0               	rrf	(i1___lmul@multiplier),f
  6455  0CC4  3EFF               	addlw	-1
  6456  0CC5  1D03               	skipz
  6457  0CC6  2CBF               	goto	u399_25
  6458                           
  6459                           	line	11
  6460  0CC7  0873               	movf	(i1___lmul@multiplier+3),w
  6461  0CC8  0472               	iorwf	(i1___lmul@multiplier+2),w
  6462  0CC9  0471               	iorwf	(i1___lmul@multiplier+1),w
  6463  0CCA  0470               	iorwf	(i1___lmul@multiplier),w
  6464  0CCB  1D03               	skipz
  6465  0CCC  2CCE               	goto	u400_21
  6466  0CCD  2CCF               	goto	u400_20
  6467  0CCE                     u400_21:
  6468  0CCE  2C99               	goto	i1l3932
  6469  0CCF                     u400_20:
  6470  0CCF  2CD0               	goto	i1l3940
  6471                           	
  6472  0CD0                     i1l1481:	
  6473                           	line	12
  6474                           	
  6475  0CD0                     i1l3940:	
  6476  0CD0  087C               	movf	(i1___lmul@product+3),w
  6477  0CD1  00F3               	movwf	(?i1___lmul+3)
  6478  0CD2  087B               	movf	(i1___lmul@product+2),w
  6479  0CD3  00F2               	movwf	(?i1___lmul+2)
  6480  0CD4  087A               	movf	(i1___lmul@product+1),w
  6481  0CD5  00F1               	movwf	(?i1___lmul+1)
  6482  0CD6  0879               	movf	(i1___lmul@product),w
  6483  0CD7  00F0               	movwf	(?i1___lmul)
  6484                           
  6485  0CD8  2CD9               	goto	i1l1482
  6486                           	
  6487  0CD9                     i1l3942:	
  6488                           	line	13
  6489                           	
  6490  0CD9                     i1l1482:	
  6491  0CD9  0008               	return
  6492                           	opt stack 0
  6493                           GLOBAL	__end_ofi1___lmul
  6494  0CDA                     	__end_ofi1___lmul:
  6495 ;; =============== function i1___lmul ends ============
  6496                           
  6497                           	signat	i1___lmul,92
  6498                           	global	i1___wmul
  6499                           psect	text600,local,class=CODE,delta=2
  6500                           global __ptext600
  6501  0BA8                     __ptext600:
  6502                           
  6503 ;; *************** function i1___wmul *****************
  6504 ;; Defined at:
  6505 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  __wmul          2    0[COMMON] unsigned int 
  6508 ;;  __wmul          2    2[COMMON] unsigned int 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  __wmul          2    4[COMMON] unsigned int 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    0[COMMON] unsigned int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6520 ;;      Params:         4       0       0       0       0
  6521 ;;      Locals:         2       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0
  6523 ;;      Totals:         6       0       0       0       0
  6524 ;;Total ram usage:        6 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		i1_ai_read
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           psect	text600
  6533                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6534                           	line	3
  6535                           	global	__size_ofi1___wmul
  6536  002A                     	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  6537                           	
  6538  0BA8                     i1___wmul:	
  6539                           	opt	stack 1
  6540                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6541                           	line	4
  6542                           	
  6543  0BA8                     i1l3918:	
  6544  0BA8  01F4               	clrf	(i1___wmul@product)
  6545  0BA9  01F5               	clrf	(i1___wmul@product+1)
  6546  0BAA  2BAB               	goto	i1l3920
  6547                           	line	6
  6548                           	
  6549  0BAB                     i1l1404:	
  6550                           	line	7
  6551                           	
  6552  0BAB                     i1l3920:	
  6553  0BAB  1C70               	btfss	(i1___wmul@multiplier),(0)&7
  6554  0BAC  2BAE               	goto	u392_21
  6555  0BAD  2BAF               	goto	u392_20
  6556  0BAE                     u392_21:
  6557  0BAE  2BB5               	goto	i1l1405
  6558  0BAF                     u392_20:
  6559                           	line	8
  6560                           	
  6561  0BAF                     i1l3922:	
  6562  0BAF  0872               	movf	(i1___wmul@multiplicand),w
  6563  0BB0  07F4               	addwf	(i1___wmul@product),f
  6564  0BB1  1803               	skipnc
  6565  0BB2  0AF5               	incf	(i1___wmul@product+1),f
  6566  0BB3  0873               	movf	(i1___wmul@multiplicand+1),w
  6567  0BB4  07F5               	addwf	(i1___wmul@product+1),f
  6568                           	
  6569  0BB5                     i1l1405:	
  6570                           	line	9
  6571  0BB5  3001               	movlw	01h
  6572                           	
  6573  0BB6                     u393_25:
  6574  0BB6  1003               	clrc
  6575  0BB7  0DF2               	rlf	(i1___wmul@multiplicand),f
  6576  0BB8  0DF3               	rlf	(i1___wmul@multiplicand+1),f
  6577  0BB9  3EFF               	addlw	-1
  6578  0BBA  1D03               	skipz
  6579  0BBB  2BB6               	goto	u393_25
  6580                           	line	10
  6581                           	
  6582  0BBC                     i1l3924:	
  6583  0BBC  3001               	movlw	01h
  6584                           	
  6585  0BBD                     u394_25:
  6586  0BBD  1003               	clrc
  6587  0BBE  0CF1               	rrf	(i1___wmul@multiplier+1),f
  6588  0BBF  0CF0               	rrf	(i1___wmul@multiplier),f
  6589  0BC0  3EFF               	addlw	-1
  6590  0BC1  1D03               	skipz
  6591  0BC2  2BBD               	goto	u394_25
  6592                           	line	11
  6593  0BC3  0871               	movf	((i1___wmul@multiplier+1)),w
  6594  0BC4  0470               	iorwf	((i1___wmul@multiplier)),w
  6595  0BC5  1D03               	skipz
  6596  0BC6  2BC8               	goto	u395_21
  6597  0BC7  2BC9               	goto	u395_20
  6598  0BC8                     u395_21:
  6599  0BC8  2BAB               	goto	i1l3920
  6600  0BC9                     u395_20:
  6601  0BC9  2BCA               	goto	i1l3926
  6602                           	
  6603  0BCA                     i1l1406:	
  6604                           	line	12
  6605                           	
  6606  0BCA                     i1l3926:	
  6607  0BCA  0875               	movf	(i1___wmul@product+1),w
  6608  0BCB  01F1               	clrf	(?i1___wmul+1)
  6609  0BCC  07F1               	addwf	(?i1___wmul+1)
  6610  0BCD  0874               	movf	(i1___wmul@product),w
  6611  0BCE  01F0               	clrf	(?i1___wmul)
  6612  0BCF  07F0               	addwf	(?i1___wmul)
  6613                           
  6614  0BD0  2BD1               	goto	i1l1407
  6615                           	
  6616  0BD1                     i1l3928:	
  6617                           	line	13
  6618                           	
  6619  0BD1                     i1l1407:	
  6620  0BD1  0008               	return
  6621                           	opt stack 0
  6622                           GLOBAL	__end_ofi1___wmul
  6623  0BD2                     	__end_ofi1___wmul:
  6624 ;; =============== function i1___wmul ends ============
  6625                           
  6626                           	signat	i1___wmul,90
  6627                           	global	i1_delay
  6628                           psect	text601,local,class=CODE,delta=2
  6629                           global __ptext601
  6630  0BFE                     __ptext601:
  6631                           
  6632 ;; *************** function i1_delay *****************
  6633 ;; Defined at:
  6634 ;;		line 211 in file "../../Source File/PR24.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  delay           4    0[COMMON] unsigned long 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;		None               void
  6641 ;; Registers used:
  6642 ;;		wreg
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6648 ;;      Params:         4       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0
  6650 ;;      Temps:          4       0       0       0       0
  6651 ;;      Totals:         8       0       0       0       0
  6652 ;;Total ram usage:        8 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		i1_ai_read
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           psect	text601
  6661                           	file	"../../Source File/PR24.c"
  6662                           	line	211
  6663                           	global	__size_ofi1_delay
  6664  0030                     	__size_ofi1_delay	equ	__end_ofi1_delay-i1_delay
  6665                           	
  6666  0BFE                     i1_delay:	
  6667                           	opt	stack 1
  6668                           ; Regs used in i1_delay: [wreg]
  6669                           	line	212
  6670                           	
  6671  0BFE                     i1l3912:	
  6672                           ;PR24.c: 212: for( ; data > 0; data -= 1);
  6673  0BFE  0873               	movf	(i1delay@data+3),w
  6674  0BFF  0472               	iorwf	(i1delay@data+2),w
  6675  0C00  0471               	iorwf	(i1delay@data+1),w
  6676  0C01  0470               	iorwf	(i1delay@data),w
  6677  0C02  1D03               	skipz
  6678  0C03  2C05               	goto	u389_21
  6679  0C04  2C06               	goto	u389_20
  6680  0C05                     u389_21:
  6681  0C05  2C08               	goto	i1l3916
  6682  0C06                     u389_20:
  6683  0C06  2C2D               	goto	i1l676
  6684                           	
  6685  0C07                     i1l3914:	
  6686  0C07  2C2D               	goto	i1l676
  6687                           	
  6688  0C08                     i1l674:	
  6689                           	
  6690  0C08                     i1l3916:	
  6691  0C08  3001               	movlw	01h
  6692  0C09  00F4               	movwf	((??i1_delay+0)+0)
  6693  0C0A  3000               	movlw	0
  6694  0C0B  00F5               	movwf	((??i1_delay+0)+0+1)
  6695  0C0C  3000               	movlw	0
  6696  0C0D  00F6               	movwf	((??i1_delay+0)+0+2)
  6697  0C0E  3000               	movlw	0
  6698  0C0F  00F7               	movwf	((??i1_delay+0)+0+3)
  6699  0C10  0874               	movf	0+(??i1_delay+0)+0,w
  6700  0C11  02F0               	subwf	(i1delay@data),f
  6701  0C12  0875               	movf	1+(??i1_delay+0)+0,w
  6702  0C13  1C03               	skipc
  6703  0C14  0F75               	incfsz	1+(??i1_delay+0)+0,w
  6704  0C15  2C17               	goto	u390_25
  6705  0C16  2C18               	goto	u390_26
  6706  0C17                     u390_25:
  6707  0C17  02F1               	subwf	(i1delay@data+1),f
  6708  0C18                     u390_26:
  6709  0C18  0876               	movf	2+(??i1_delay+0)+0,w
  6710  0C19  1C03               	skipc
  6711  0C1A  0F76               	incfsz	2+(??i1_delay+0)+0,w
  6712  0C1B  2C1D               	goto	u390_27
  6713  0C1C  2C1E               	goto	u390_28
  6714  0C1D                     u390_27:
  6715  0C1D  02F2               	subwf	(i1delay@data+2),f
  6716  0C1E                     u390_28:
  6717  0C1E  0877               	movf	3+(??i1_delay+0)+0,w
  6718  0C1F  1C03               	skipc
  6719  0C20  0F77               	incfsz	3+(??i1_delay+0)+0,w
  6720  0C21  2C23               	goto	u390_29
  6721  0C22  2C24               	goto	u390_20
  6722  0C23                     u390_29:
  6723  0C23  02F3               	subwf	(i1delay@data+3),f
  6724  0C24                     u390_20:
  6725                           
  6726  0C24  0873               	movf	(i1delay@data+3),w
  6727  0C25  0472               	iorwf	(i1delay@data+2),w
  6728  0C26  0471               	iorwf	(i1delay@data+1),w
  6729  0C27  0470               	iorwf	(i1delay@data),w
  6730  0C28  1D03               	skipz
  6731  0C29  2C2B               	goto	u391_21
  6732  0C2A  2C2C               	goto	u391_20
  6733  0C2B                     u391_21:
  6734  0C2B  2C08               	goto	i1l3916
  6735  0C2C                     u391_20:
  6736  0C2C  2C2D               	goto	i1l676
  6737                           	
  6738  0C2D                     i1l675:	
  6739                           	line	213
  6740                           	
  6741  0C2D                     i1l676:	
  6742  0C2D  0008               	return
  6743                           	opt stack 0
  6744                           GLOBAL	__end_ofi1_delay
  6745  0C2E                     	__end_ofi1_delay:
  6746 ;; =============== function i1_delay ends ============
  6747                           
  6748                           	signat	i1_delay,88
  6749                           	global	_motor_stop
  6750                           psect	text602,local,class=CODE,delta=2
  6751                           global __ptext602
  6752  0B57                     __ptext602:
  6753                           
  6754 ;; *************** function _motor_stop *****************
  6755 ;; Defined at:
  6756 ;;		line 202 in file "../../Source File/PR24.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;		None               void
  6763 ;; Registers used:
  6764 ;;		status,2
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6770 ;;      Params:         0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_isr
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           psect	text602
  6783                           	file	"../../Source File/PR24.c"
  6784                           	line	202
  6785                           	global	__size_of_motor_stop
  6786  0006                     	__size_of_motor_stop	equ	__end_of_motor_stop-_motor_stop
  6787                           	
  6788  0B57                     _motor_stop:	
  6789                           	opt	stack 2
  6790                           ; Regs used in _motor_stop: [status,2]
  6791                           	line	203
  6792                           	
  6793  0B57                     i1l3716:	
  6794                           ;PR24.c: 203: RC1 = 1;
  6795  0B57  1283               	bcf	status, 5	;RP0=0, select bank0
  6796  0B58  1303               	bcf	status, 6	;RP1=0, select bank0
  6797  0B59  1487               	bsf	(57/8),(57)&7
  6798                           	line	204
  6799                           ;PR24.c: 204: RC0 = 1;
  6800  0B5A  1407               	bsf	(56/8),(56)&7
  6801                           	line	205
  6802                           	
  6803  0B5B                     i1l3718:	
  6804                           ;PR24.c: 205: CCPR1L = 0;
  6805  0B5B  0195               	clrf	(21)	;volatile
  6806                           	line	206
  6807                           	
  6808  0B5C                     i1l671:	
  6809  0B5C  0008               	return
  6810                           	opt stack 0
  6811                           GLOBAL	__end_of_motor_stop
  6812  0B5D                     	__end_of_motor_stop:
  6813 ;; =============== function _motor_stop ends ============
  6814                           
  6815                           	signat	_motor_stop,88
  6816                           	global	_motor_left
  6817                           psect	text603,local,class=CODE,delta=2
  6818                           global __ptext603
  6819  0B65                     __ptext603:
  6820                           
  6821 ;; *************** function _motor_left *****************
  6822 ;; Defined at:
  6823 ;;		line 193 in file "../../Source File/PR24.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  speed           1    wreg     unsigned char 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  speed           1    0[COMMON] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		wreg
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6837 ;;      Params:         0       0       0       0       0
  6838 ;;      Locals:         1       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0
  6840 ;;      Totals:         1       0       0       0       0
  6841 ;;Total ram usage:        1 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_isr
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           psect	text603
  6850                           	file	"../../Source File/PR24.c"
  6851                           	line	193
  6852                           	global	__size_of_motor_left
  6853  0008                     	__size_of_motor_left	equ	__end_of_motor_left-_motor_left
  6854                           	
  6855  0B65                     _motor_left:	
  6856                           	opt	stack 2
  6857                           ; Regs used in _motor_left: [wreg]
  6858                           ;motor_left@speed stored from wreg
  6859  0B65  00F0               	movwf	(motor_left@speed)
  6860                           	line	194
  6861                           	
  6862  0B66                     i1l3712:	
  6863                           ;PR24.c: 194: RC1 = 1;
  6864  0B66  1283               	bcf	status, 5	;RP0=0, select bank0
  6865  0B67  1303               	bcf	status, 6	;RP1=0, select bank0
  6866  0B68  1487               	bsf	(57/8),(57)&7
  6867                           	line	195
  6868                           ;PR24.c: 195: RC0 = 0;
  6869  0B69  1007               	bcf	(56/8),(56)&7
  6870                           	line	196
  6871                           	
  6872  0B6A                     i1l3714:	
  6873                           ;PR24.c: 196: CCPR1L = speed;
  6874  0B6A  0870               	movf	(motor_left@speed),w
  6875  0B6B  0095               	movwf	(21)	;volatile
  6876                           	line	197
  6877                           	
  6878  0B6C                     i1l668:	
  6879  0B6C  0008               	return
  6880                           	opt stack 0
  6881                           GLOBAL	__end_of_motor_left
  6882  0B6D                     	__end_of_motor_left:
  6883 ;; =============== function _motor_left ends ============
  6884                           
  6885                           	signat	_motor_left,4216
  6886                           	global	_motor_right
  6887                           psect	text604,local,class=CODE,delta=2
  6888                           global __ptext604
  6889  0B5D                     __ptext604:
  6890                           
  6891 ;; *************** function _motor_right *****************
  6892 ;; Defined at:
  6893 ;;		line 184 in file "../../Source File/PR24.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  speed           1    wreg     unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  speed           1    0[COMMON] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;		None               void
  6900 ;; Registers used:
  6901 ;;		wreg
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6907 ;;      Params:         0       0       0       0       0
  6908 ;;      Locals:         1       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0
  6910 ;;      Totals:         1       0       0       0       0
  6911 ;;Total ram usage:        1 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_isr
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           psect	text604
  6920                           	file	"../../Source File/PR24.c"
  6921                           	line	184
  6922                           	global	__size_of_motor_right
  6923  0008                     	__size_of_motor_right	equ	__end_of_motor_right-_motor_right
  6924                           	
  6925  0B5D                     _motor_right:	
  6926                           	opt	stack 2
  6927                           ; Regs used in _motor_right: [wreg]
  6928                           ;motor_right@speed stored from wreg
  6929  0B5D  00F0               	movwf	(motor_right@speed)
  6930                           	line	185
  6931                           	
  6932  0B5E                     i1l3708:	
  6933                           ;PR24.c: 185: RC1 = 0;
  6934  0B5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6935  0B5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6936  0B60  1087               	bcf	(57/8),(57)&7
  6937                           	line	186
  6938                           ;PR24.c: 186: RC0 = 1;
  6939  0B61  1407               	bsf	(56/8),(56)&7
  6940                           	line	187
  6941                           	
  6942  0B62                     i1l3710:	
  6943                           ;PR24.c: 187: CCPR1L = speed;
  6944  0B62  0870               	movf	(motor_right@speed),w
  6945  0B63  0095               	movwf	(21)	;volatile
  6946                           	line	188
  6947                           	
  6948  0B64                     i1l665:	
  6949  0B64  0008               	return
  6950                           	opt stack 0
  6951                           GLOBAL	__end_of_motor_right
  6952  0B65                     	__end_of_motor_right:
  6953 ;; =============== function _motor_right ends ============
  6954                           
  6955                           	signat	_motor_right,4216
  6956                           psect	text605,local,class=CODE,delta=2
  6957                           global __ptext605
  6958  0000                     __ptext605:
  6959                           	global	btemp
  6960  007E                     	btemp set 07Eh
  6961                           
  6962                           	DABS	1,126,2	;btemp
  6963                           	global	wtemp0
  6964  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jul 21 16:21:04 2015

                    pc 0002                     _GO 00FA                     _RD 0C60                     _WR 0C61  
         ___awdiv@sign 00AC                     _kd 00D8                     _ki 00D9                     _kp 00DA  
                   fsr 0004    ___wmul@multiplicand 00A2       i1___wmul@product 0074                    l700 0748  
                  l701 0754                    l710 07B6                    l702 0758                    l703 0759  
                  l704 0765                    l640 05ED                    l705 0769                    l721 0604  
                  l713 0B82                    l641 05EF                    l633 04FC                    l650 0F8A  
                  l706 076A                    l722 06C2                    l730 0633                    l642 05F0  
                  l634 05EE                    l651 0FA6                    l707 0776                    l723 0699  
                  l731 063F                    l643 05F0                    l635 05DC                    l660 0FCD  
                  l652 0F97                    l708 077A                    l740 0672                    l732 0643  
                  l724 0613                    l716 0C3F                    l636 05DC                    l661 0FFF  
                  l653 0FA5                    l709 0797                    l741 0676                    l733 0644  
                  l725 061D                    l717 0C4E                    l637 05E1                    l662 0FFF  
                  l654 0FA4                    l646 0F70                    l742 0677                    l734 0650  
                  l726 0621                    l718 0C5D                    l638 05EC                    l655 0FBB  
                  l647 0FA8                    l743 0683                    l735 0654                    l727 0622  
                  l639 05EC                    l656 0FBB                    l648 0F7D                    l744 0687  
                  l736 0655                    l728 062E                    l752 07CF                    l760 005B  
                  l657 0FC0                    l649 0FA7                    l745 0688                    l737 0661  
                  l729 0632                    l753 07BC                    l761 00A1                    l674 0C6A  
                  l658 0FD3                    l690 0714                    l682 06E6                    l746 0694  
                  l738 0665                    l770 02B8                    l762 00E7                    l675 0C8F  
                  l683 07A4                    l691 0715                    l747 0698                    l739 0666  
                  l755 07E0                    l763 012D                    l676 0C8F                    l684 077B  
                  l692 0721                    l748 06B5                    l756 07E1                    l764 0173  
                  l693 0725                    l685 06F5                    l749 06D4                    l757 07EE  
                  l765 01B9                    l694 0726                    l686 06FF                    l766 01FF  
                  l679 0BA7                    l695 0732                    l687 0703                    l767 0245  
                  l696 0736                    l688 0704                    l768 028B                    l697 0737  
                  l689 0710                    l769 02B8                    l698 0743                    l699 0747  
                  _GIE 005F                    _RB0 0030                    _RB1 0031                    _RC0 0038  
                  _RB2 0032                    _RC1 0039                    _RB3 0033                    _RB4 0034  
                  _RC3 003B                    _RB5 0035                    _RC4 003C                    _RB6 0036  
                  _RC5 003D                    _RB7 0037                    _PR2 0092                    _isr 02B9  
                  fsr0 0004        send_config@data 00AA        send_config@test 00AC                   l1404 0BD7  
                 l1405 0BE1                   l1406 0BF6                   l1407 0BFD                   l4000 0F97  
                 l4010 0FC6                   l4002 0F9F                   l4020 0FFE                   l4012 0FCD  
                 l4004 0FA8                   l4100 0655                   l1550 0EA6                   l4014 0FD1  
                 l4006 0FB7                   l4022 0B83                   l4030 06DE                   l4110 067F  
                 l4102 065D                   l1551 0EBF                   l1480 0D01                   l1552 0ECD  
                 l1544 0E7A                   l1560 0D47                   l4016 0FD2                   l4008 0FC0  
                 l4024 0B86                   l4040 0704                   l4032 06E5                   l4120 06BB  
                 l4112 0688                   l4104 0666                   l4200 024D                   l1481 0D1C  
                 l1553 0ED8                   l1545 0E88                   l1561 0D48                   l1482 0D25  
                 l1554 0EDF                   l1546 0ECE                   l1562 0D69                   l4018 0FD3  
                 l4026 0B95                   l4050 072E                   l4042 070C                   l4034 06E6  
                 l4114 0690                   l4106 066E                   l4122 06C2                   l4130 0C37  
                 l4202 026C                   l4210 0482                   l1547 0EA0                   l1563 0D79  
                 l1548 0E94                   l1564 0D83                   l1580 0DAE                   l4060 0759  
                 l4052 0737                   l4044 0715                   l4036 06F5                   l4028 06D8  
                 l4108 0677                   l4116 0699                   l4124 0B6D                   l4132 0C3F  
                 l4140 07BC                   l4204 028B                   l4220 0499                   l4212 048E  
                 l1549 0EA5                   l1557 0D7A                   l1581 0DD9                   l1558 0D42  
                 l1582 0DE9                   l4070 0797                   l4062 0761                   l4054 073F  
                 l4046 071D                   l4038 06FB                   l4118 06B5                   l4126 0B73  
                 l4134 0C46                   l4142 07C8                   l4206 0291                   l4150 0015  
                 l4230 04BA                   l4222 049D                   l4214 048F                   l1479 0CE5  
                 l1559 0D34                   l1583 0DF3                   l1576 0DEA                   l4072 079D  
                 l4064 076A                   l4056 0748                   l4048 0726                   l4080 0603  
                 l4136 0C4E                   l4128 0C31                   l4144 07CF                   l4208 02B0  
                 l4160 0082                   l4152 001D                   l4240 04D7                   l4232 04C0  
                 l4224 04A8                   l4216 0495                   l1577 0DA8                   l1578 0D9A  
                 l4066 0772                   l4058 0750                   l4074 07A4                   l4090 062A  
                 l4082 0604                   l4146 07D3                   l4138 07BA                   l4170 00EF  
                 l4162 00A1                   l4154 003C                   l4250 04F5                   l4242 04DD  
                 l4234 04C6                   l4226 04AE                   l4218 0497                   l1579 0DAD  
                 l4068 077B                   l4092 0633                   l4084 0613                   l4076 05F6  
                 l4148 07E1                   l4180 0173                   l4172 010E                   l4164 00A9  
                 l4156 005B                   l4260 0564                   l4252 04FC                   l4244 04E3  
                 l4236 04CB                   l4228 04B4                   l3702 0C5E                   l4094 063B  
                 l4086 0619                   l4078 05FC                   l4190 01E0                   l4182 017B  
                 l4174 012D                   l4166 00C8                   l4158 0063                   l4270 05AB  
                 l4262 056A                   l4254 0540                   l4246 04E9                   l4238 04D1  
                 l3704 0C69                   l3800 0E88                   l4096 0644                   l4088 0622  
                 l4192 01FF                   l4184 019A                   l4176 0135                   l4168 00E7  
                 l4280 05E1                   l4272 05B6                   l4264 0582                   l4256 0546  
                 l4248 04EF                   l3706 0C6A                   l3810 0EA0                   l3802 0E8A  
                 l4098 064C                   l4194 0207                   l4186 01B9                   l4178 0154  
                 l4290 05EA                   l4282 05E3                   l4274 05BC                   l4266 058D  
                 l4258 0559                   l3820 0EC6                   l3812 0EA6                   l3804 0E90  
                 l4196 0226                   l4188 01C1                   l4284 05E5                   l4276 05D4  
                 l4268 0593                   l3814 0EB7                   l3806 0E94                   l3822 0ECE  
                 l3830 0D26                   l4198 0245                   l4286 05E6                   l4278 05DB  
                 l3824 0ED2                   l3816 0EBD                   l3808 0E9B                   l3840 0D5A  
                 l3832 0D30                   l4288 05E9                   l3770 0BE8                   l3826 0ED8  
                 l3818 0EBF                   l3842 0D69                   l3834 0D34                   l3850 0D84  
                 l3772 0BF6                   l3764 0BD2                   l3780 0CE9                   l3828 0EDF  
                 l3844 0D72                   l3836 0D42                   l3860 0DB7                   l3852 0D96  
                 l3774 0BFD                   l3766 0BD7                   l3782 0D01                   l3790 0E6A  
                 l3838 0D48                   l3846 0D7A                   l3862 0DC9                   l3854 0D9A  
                 l3870 0DEA                   l3768 0BDB                   l3784 0D0A                   l3776 0CDA  
                 l3792 0E71                   l3848 0D83                   l3872 0DF3                   l3864 0DD7  
                 l3856 0DA8                   l3786 0D1C                   l3778 0CE5                   l3794 0E7A  
                 l3866 0DD9                   l3858 0DAE          ai_read@an_sel 00CC                   l3788 0D25  
                 l3796 0E7E                   l3868 0DE2                   l3798 0E83                   l3990 0F78  
                 l3992 0F7D                   l3984 0F66                   l3994 0F85                   l3986 0F6B  
                 l3996 0F8A                   l3988 0F70                   ?_isr 0070                   l3998 0F92  
                 STR_1 0806                   STR_2 0813                   STR_3 0810                   STR_4 080D  
                 u4110 0F6B                   u4111 0F6A                   u3400 0C8E                   u4120 0F78  
                 u3401 0C8D                   u4121 0F77                   u4130 0F85                   u4210 06FB  
                 u4131 0F84                   u4211 06FA                   u4140 0F92                   u4220 070C  
                 u4204 06EC                   u4300 0602                   u4141 0F91                   u4221 070B  
                 u4205 06EA                   u4301 0601                   u4150 0F9F                   u4230 071D  
                 u4151 0F9E                   u4231 071C                   u3520 0BF5                   u3600 0E90  
                 u4160 0FBF                   u4240 072E                   u4400 06C1                   u4320 0619  
                 u3521 0BF4                   u3505 0BE2                   u3601 0E8F                   u4161 0FBE  
                 u4241 072D                   u4401 06C0                   u4321 0618                   u3530 0CE9  
                 u4170 0FC6                   u4250 073F                   u4330 062A                   u4314 060A  
                 u4410 0C37                   u3515 0BE9                   u3531 0CE8                   u4251 073E  
                 u4331 0629                   u4315 0608                   u4411 0C36                   u3380 0C68  
                 u3620 0EA4                   u3700 0D46                   u4180 0FCC                   u4260 0750  
                 u4340 063B                   u4420 07D3                   u4500 01C1                   u3381 0C67  
                 u3541 0CF2                   u3621 0EA3                   u3701 0D45                   u4181 0FCB  
                 u4261 074F                   u4341 063A                   u4501 01C0                   u3390 0C86  
                 u3542 0CF9                   u3710 0D5A                   u4270 0761                   u4190 06E4  
                 u4350 064C                   u4430 07DF                   u4510 0207                   u3543 0D00  
                 u3615 0E95                   u3711 0D59                   u4271 0760                   u4191 06E3  
                 u4351 064B                   u4431 07DE                   u4511 0206                   u3640 0EB7  
                 u3800 0DE8                   u4280 0772                   u4360 065D                   u4520 024D  
                 u4440 001D                   u3641 0EB6                   u3801 0DE7                   u4281 0771  
                 u4361 065C                   u4521 024C                   u4441 001C                   u3490 0BDB  
                 u3570 0D1B                   u3730 0D78                   u4290 07A3                   u4370 066E  
                 u4530 0291                   u4450 0063                   u3395 0C79                   u3491 0BDA  
                 u3571 0D1A                   u3555 0D03                   u3635 0EA7                   u3731 0D77  
                 u3715 0D56                   u4291 07A2                   u4371 066D                   u4451 0062  
                 _PEIE 005E                   u3396 0C7A                   u3660 0ECC                   u3580 0E71  
                 u3740 0D96                   u4380 067F                   u4460 00A9                   u4540 05DA  
                 u3397 0C7F                   u3565 0D0B                   u3661 0ECB                   u3645 0EB3  
                 u3581 0E70                   u3725 0D6A                   u3741 0D95                   u4381 067E  
                 u4461 00A8                   u4541 05D9                   u3398 0C80                   u3670 0ED2  
                 u3590 0E7E                   u4390 0690                   u4470 00EF                   u4550 05E0  
                 u3399 0C85                   u3655 0EC0                   u3591 0E7D                   u4391 068F  
                 u4471 00EE                   u4551 05DF                   u3680 0D30                   u3760 0DAC  
                 u4480 0135                   u3681 0D2F                   u3761 0DAB                   u4481 0134  
                 u4490 017B                   u3755 0D9C                   u4491 017A                   u3780 0DC9  
                 u3781 0DC8                   u3695 0D36                   u3775 0DB0                   u3785 0DC5  
                 u3795 0DDA                   _WREN 0C62                   _main 0482                   btemp 007E  
         lcd_goto@data 00AE        __end_ofi1_delay 0C2E                   start 0012                  ??_isr 0024  
                ?_main 0070         i1___awdiv@sign 0021        __end_of___awdiv 0EE0                  _EEADR 010D  
                _CARRY 0018        __end_of___lldiv 0DF4        ___awdiv@divisor 00A6                  _T1CON 0010  
      __end_of___llmod 0D84                  _T2CON 0012                  i1l650 0F01                  i1l651 0F19  
                i1l660 0F3C                  i1l652 0F0C                  i1l661 0F62                  i1l653 0F18  
                i1l662 0F62                  i1l654 0F17                  i1l646 0EEB                  i1l671 0B5C  
                i1l655 0F2C                  i1l647 0F1B                  i1l656 0F2C                  i1l648 0EF6  
                i1l665 0B64                  i1l657 0F31                  i1l649 0F1A                  i1l674 0C08  
                i1l658 0F40                  i1l675 0C2D                  i1l668 0B6C                  i1l676 0C2D  
                i1l780 043B                  i1l781 0459                  i1l782 046C                  i1l783 0465  
                i1l784 046B                  i1l777 0477                  i1l785 0477                  i1l778 041C  
                i1l779 043C        ___awdiv@counter 00AB                  _TMR1H 000F                  _TMR1L 000E  
      __end_of_ai_read 1000                  _PORTB 0006                  _PORTC 0007                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087           main@rec_data 00D4            i1delay@data 0070  
  ___lmul@multiplicand 00B3        __end_of_e_pulse 0BA8        __end_of_lcd_clr 0B83                  _delay 0C5E  
     __end_ofi1___lmul 0CDA                  pclath 000A       __end_ofi1___wmul 0BD2                  status 0003  
  i1___wmul@multiplier 0070                  wtemp0 007E     __size_ofi1___awdiv 0076     __size_ofi1_ai_read 0083  
   isr@motor_direction 003C           __end_of_main 05F3    i1___lmul@multiplier 0070                 ??_main 00CF  
               ?_delay 00A0           ?_send_config 0070                 _ADCON0 001F                 _ADCON1 009F  
     ___llmod@dividend 00A4                 _ADRESH 001E                 _EEDATA 010C                 _CCPR1L 0015  
               _EECON1 018C                 _EECON2 018D       ___awdiv@dividend 00A8              ??i1_delay 0074  
               i1l1404 0BAB                 i1l1405 0BB5                 i1l1406 0BCA                 i1l1407 0BD1  
               i1l1550 0E30                 i1l1551 0E49                 i1l1480 0CB5                 i1l1552 0E57  
               i1l1544 0E04                 i1l1481 0CD0                 i1l1553 0E62                 i1l1545 0E12  
               i1l1482 0CD9                 i1l1554 0E69                 i1l1546 0E58                 i1l1547 0E2A  
               i1l1548 0E1E                 i1l1549 0E2F                 i1l1479 0C99                 i1l3710 0B62  
               i1l3712 0B66                 i1l3720 02B9                 i1l3714 0B6A                 i1l3730 02D7  
               i1l3722 02BD                 i1l3708 0B5E                 i1l3716 0B57                 i1l3900 0F35  
               i1l3740 030D                 i1l3732 02D8                 i1l3724 02C5                 i1l3718 0B5B  
               i1l3910 0F61                 i1l3902 0F3C                 i1l3750 041C                 i1l3742 0330  
               i1l3734 02DC                 i1l3726 02CD                 i1l3912 0BFE                 i1l3920 0BAB  
               i1l3904 0F3E                 i1l3760 0465                 i1l3752 0432                 i1l3744 0361  
               i1l3736 02DD                 i1l3728 02D5                 i1l3914 0C07                 i1l3922 0BAF  
               i1l3930 0C90                 i1l3906 0F3F                 i1l3762 046C                 i1l3754 043C  
               i1l3746 03FD                 i1l3738 02F9                 i1l3916 0C08                 i1l3924 0BBC  
               i1l3940 0CD0                 i1l3932 0C99                 i1l3908 0F40                 i1l3756 0452  
               i1l3748 0413                 i1l3926 0BCA                 i1l3918 0BA8                 i1l3942 0CD9  
               i1l3934 0C9D                 i1l3950 0E08                 i1l3758 045D                 i1l3928 0BD1  
               i1l3936 0CB5                 i1l3960 0E1E                 i1l3952 0E0D                 i1l3944 0DF4  
               i1l3880 0EF1                 i1l3938 0CBE                 i1l3970 0E47                 i1l3962 0E25  
               i1l3954 0E12                 i1l3946 0DFB                 i1l3890 0F0C                 i1l3882 0EF6  
               i1l3874 0EE1                 i1l3980 0E62                 i1l3972 0E49                 i1l3964 0E2A  
               i1l3956 0E14                 i1l3948 0E04                 i1l3892 0F12                 i1l3884 0EFC  
               i1l3876 0EE6                 i1l3982 0E69                 i1l3974 0E50                 i1l3966 0E30  
               i1l3958 0E1A                 i1l3886 0F01                 i1l3894 0F1B                 i1l3878 0EEB  
               i1l3968 0E41                 i1l3976 0E58                 i1l3896 0F28                 i1l3888 0F07  
               i1l3978 0E5C                 i1l3898 0F31                 u400_20 0CCF                 u400_21 0CCE  
               u401_20 0DFB                 u401_21 0DFA                 u410_20 0E5C                 u402_20 0E08  
               u402_21 0E07                 u403_20 0E1A                 u403_21 0E19                 u404_25 0E1F  
               u405_20 0E2E                 u341_20 02DC                 u405_21 0E2D                 u341_21 02DB  
               u342_20 034E                 u342_21 034F                 u342_22 0354                 u342_23 0355  
               u406_25 0E31                 u407_20 0E41                 u343_20 03D8           ?_send_string 0070  
               u407_21 0E40                 u343_21 03D9                 u343_22 03DE                 u343_23 03DF  
               u407_25 0E3D                 u344_20 03EA                 u344_21 03EB                 u344_22 03F0  
               u344_23 03F1                 u408_25 0E4A                 u409_20 0E56                 u345_20 0413  
               u409_21 0E55                 u345_21 0412                 u345_23 040F                 u346_20 0432  
               u346_21 0431                 u346_23 042E                 u347_20 0452                 u347_21 0451  
               u347_23 044E                 u348_20 045D                 u348_21 045C                 u381_20 0EE6  
               u381_21 0EE5                 u390_20 0C24                 u382_20 0EF1                 u382_21 0EF0  
               u390_25 0C17                 u390_26 0C18                 u390_27 0C1D                 u391_20 0C2C  
               u390_28 0C1E                 u383_20 0EFC                 u391_21 0C2B                 u390_29 0C23  
               u383_21 0EFB                 u392_20 0BAF                 u384_20 0F07                 u392_21 0BAE  
               u384_21 0F06                 u385_20 0F12                 u385_21 0F11                 u393_25 0BB6  
               u386_20 0F30                 u386_21 0F2F                 u394_25 0BBD                 u395_20 0BC9  
               u387_20 0F35                 u395_21 0BC8                 u396_20 0C9D                 u388_20 0F3B  
               u396_21 0C9C                 u388_21 0F3A                 u389_20 0C06                 u389_21 0C05  
               u397_21 0CA6                 u397_22 0CAD                 u397_23 0CB4                 u398_25 0CB7  
               u399_25 0CBF                 _TMR1IE 0460                 _TMR1IF 0060        i1ai_read@an_sel 007D  
          isr@integral 004F       __end_of_lcd_goto 0C5E                 ___lmul 0CDA                 ___wmul 0BD2  
            ??___awdiv 00AA              ??___lldiv 00C4              ??___llmod 00A8              ??_ai_read 00CA  
     ___awdiv@quotient 00AD              ??_e_pulse 00A8              ??_lcd_clr 00AD           ?_motor_right 0070  
     __end_of_send_dec 02B9      __end_ofi1___awdiv 0E6A      __end_ofi1_ai_read 0F63                 saved_w 007E  
       __pcstackCOMMON 0070          __end_of_delay 0C90              ?i1___lmul 0070              ?i1___wmul 0070  
     motor_right@speed 0070                ??_delay 00A4             __pbssBANK0 004F             __pbssBANK1 00D8  
           __pmaintext 0482                ?___lmul 00AF                ?___wmul 00A0             __pintentry 0004  
   __size_of_send_char 00E2                _CCP1CON 0017         ___lmul@product 00B8             ??i1___lmul 0078  
           ??i1___wmul 0074     i1___awdiv@dividend 0078              ?_lcd_goto 0070                i1_delay 0BFE  
 __size_of_send_config 00E2   __size_of_send_string 0038              ?_send_dec 00CA     i1___awdiv@quotient 0022  
         isr@pre_error 0053           isr@set_value 0043                ___awdiv 0E6A        __size_of___lmul 004C  
              ___lldiv 0D84        __size_of___wmul 002C                ___llmod 0D26                _ai_read 0F63  
              _e_pulse 0B83                _lcd_clr 0B6D           isr@pwm_value 003E           __size_of_isr 01C9  
 __size_of_motor_right 0008             ??_lcd_goto 00AD   end_of_initialization 07FC      __end_of_send_char 06D5  
      ___lldiv@divisor 00BC             ??_send_dec 00CF        ___lldiv@counter 00C9             _motor_left 0B65  
        send_char@data 00AA             _motor_stop 0B57  i1___wmul@multiplicand 0072          send_char@test 00AC  
            i1___awdiv 0DF4              i1_ai_read 0EE0         isr@error_value 0047         __end_of___lmul 0D26  
       __end_of___wmul 0BFE  i1___lmul@multiplicand 0074      __size_ofi1___lmul 004A    start_initialization 07EF  
    __size_ofi1___wmul 002A            __end_of_isr 0482             ?i1___awdiv 0076        motor_left@speed 0070  
           ?i1_ai_read 0070        ___llmod@divisor 00A0        ___llmod@counter 00A9               ??___lmul 00B7  
             ??___wmul 00A4            ?_motor_left 0070            ?_motor_stop 0070      isr@feedback_value 0045  
        __pcstackBANK0 0020          __pcstackBANK1 00A0       i1___lmul@product 0079               ?i1_delay 0070  
    __size_of_lcd_goto 0030      __size_of_send_dec 02A4               ?___awdiv 00A6              __ptext600 0BA8  
            __ptext601 0BFE              __ptext602 0B57              __ptext603 0B65              __ptext604 0B5D  
            __ptext605 0000              __ptext581 0000              __ptext590 0D84              __ptext582 0015  
            __ptext591 0D26              __ptext583 07B7              __ptext592 0E6A              __ptext584 0C2E  
            __ptext593 0CDA              __ptext585 0B6D              __ptext594 0BD2              __ptext586 05F3  
            __ptext595 0C5E              __ptext587 06D5              __ptext596 02B9              __ptext588 0B83  
            __ptext597 0EE0              __ptext589 0F63              __ptext598 0DF4              __ptext599 0C90  
             ?___lldiv 00BC               ?___llmod 00A0               ?_ai_read 0070      i1___awdiv@divisor 0076  
    i1___awdiv@counter 0020               ?_e_pulse 0070              __pstrings 0800             send_char@i 00AB  
             ?_lcd_clr 0070          isr@derivative 003F            ??i1___awdiv 007A          ??_send_config 00A8  
       __size_of_delay 0032            ??i1_ai_read 007B              delay@data 00A0          ??_send_string 00AD  
  __size_of_motor_left 0008    __size_of_motor_stop 0006      interrupt_function 0004         ___wmul@product 00A4  
            _send_char 05F3           send_dec@data 00CA          ??_motor_right 0070               i1___lmul 0C90  
          __stringbase 0805      ___wmul@multiplier 00A0               i1___wmul 0BA8           send_config@i 00AB  
    ___lmul@multiplier 00AF       __size_ofi1_delay 0030    __end_of_send_config 07B7             ?_send_char 0070  
         send_string@i 00AE           send_string@s 00AF    __end_of_send_string 07EF              isr@output 004B  
     __size_of___awdiv 0076       __size_of___lldiv 0070       __size_of___llmod 005E       __size_of_ai_read 009D  
     __size_of_e_pulse 0025       __size_of_lcd_clr 0016    __end_of_motor_right 0B65               _lcd_goto 0C2E  
        __size_of_main 0171               _send_dec 0015        send_dec@num_dig 00CE           ??_motor_left 0070  
         ??_motor_stop 0070            _send_config 06D5               intlevel1 0000            _send_string 07B7  
   __end_of_motor_left 0B6D       ___lldiv@dividend 00C0     __end_of_motor_stop 0B5D            ??_send_char 00A8  
            stringcode 0800            _motor_right 0B5D       ___lldiv@quotient 00C5               stringdir 0800  
             stringtab 0800  
